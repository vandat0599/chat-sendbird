#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import SendBirdSDK;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SendBirdUIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, ChannelEditType, open) {
  ChannelEditTypeName = 0,
  ChannelEditTypeImage = 1,
};

/// This is an enumeration used in <code>InviteUserViewController</code> to load user list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelInviteListType, open) {
  ChannelInviteListTypeNone = 0,
  ChannelInviteListTypeUsers = 1,
  ChannelInviteListTypeOperators = 2,
};

/// This is an enumeration used in <code>MemberListViewController</code> to load member list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelMemberListType, open) {
  ChannelMemberListTypeNone = 0,
  ChannelMemberListTypeChannelMembers = 1,
  ChannelMemberListTypeOperators = 2,
  ChannelMemberListTypeMutedMembers = 3,
  ChannelMemberListTypeBannedMembers = 4,
};

/// This is an enumeration used to handling action and display by type in <code>ChannelSettingsViewController</code> and <code>ChannelSettingCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelSettingItemType, open) {
  ChannelSettingItemTypeModerations = 0,
  ChannelSettingItemTypeNotifications = 1,
  ChannelSettingItemTypeMembers = 2,
  ChannelSettingItemTypeLeave = 3,
};

/// This is an enumeration for channel type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelType, open) {
  ChannelTypeGroup = 0,
  ChannelTypeSupergroup = 1,
  ChannelTypeBroadcast = 2,
};

typedef SWIFT_ENUM(NSInteger, EmptyViewType, open) {
  EmptyViewTypeNone = 0,
  EmptyViewTypeNoChannels = 1,
  EmptyViewTypeNoMessages = 2,
  EmptyViewTypeNoMutedMembers = 3,
  EmptyViewTypeNoBannedMembers = 4,
  EmptyViewTypeError = 5,
};

typedef SWIFT_ENUM(NSInteger, FailedMessageOption, open) {
  FailedMessageOptionRetry = 0,
  FailedMessageOptionRemove = 1,
};

typedef SWIFT_ENUM(uint8_t, LogType, open) {
  LogTypeNone = 0b00000000,
  LogTypeError = 0b00000001,
  LogTypeWarning = 0b00000010,
  LogTypeInfo = 0b00000100,
  LogTypeAll = 0b00000111,
};

typedef SWIFT_ENUM(NSInteger, MediaResourceType, open) {
  MediaResourceTypeCamera = 0,
  MediaResourceTypeLibrary = 1,
  MediaResourceTypeDocument = 2,
  MediaResourceTypeUnknown = 3,
};

typedef SWIFT_ENUM(NSInteger, MemberListType, open) {
  MemberListTypeNone = 0,
  MemberListTypeCreateChannel = 1,
  MemberListTypeChannelMembers = 2,
  MemberListTypeInviteUser = 3,
  MemberListTypeReaction = 4,
};

typedef SWIFT_ENUM(NSInteger, MessageEditItem, open) {
  MessageEditItemCopy = 0,
  MessageEditItemEdit = 1,
  MessageEditItemDelete = 2,
};

typedef SWIFT_ENUM(NSInteger, MessageFileType, open) {
  MessageFileTypeImage = 0,
  MessageFileTypeVideo = 1,
  MessageFileTypeAudio = 2,
  MessageFileTypePdf = 3,
  MessageFileTypeEtc = 4,
};

typedef SWIFT_ENUM(NSInteger, MessageGroupPosition, open) {
  MessageGroupPositionNone = 0,
  MessageGroupPositionTop = 1,
  MessageGroupPositionMiddle = 2,
  MessageGroupPositionBottom = 3,
};

typedef SWIFT_ENUM(NSInteger, MessagePosition, open) {
  MessagePositionLeft = 0,
  MessagePositionRight = 1,
  MessagePositionCenter = 2,
};

@class NSCoder;

SWIFT_CLASS("_TtC13SendBirdUIKit18MessageProfileView")
@interface MessageProfileView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16MessageStateView")
@interface MessageStateView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end

/// This is an enumeration used to handling action and display by type in <code>MederationsViewController</code> and <code>ModerationCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ModerationItemType, open) {
  ModerationItemTypeOperators = 0,
  ModerationItemTypeMutedMembers = 1,
  ModerationItemTypeBannedMembers = 2,
  ModerationItemTypeFreezeChannel = 3,
};

@class SBUUser;

@interface NSArray<ObjectType> (SWIFT_EXTENSION(SendBirdUIKit))
- (NSArray<NSString *> * _Nonnull)sbu_getUserIds SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)sbu_getUserNicknames SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SBUUser *> * _Nonnull)sbu_convertUserList SWIFT_WARN_UNUSED_RESULT;
@end




@interface NSObject (SWIFT_EXTENSION(SendBirdUIKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sbu_className;)
+ (NSString * _Nonnull)sbu_className SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull sbu_className;
@end

@class SBDBaseMessage;
enum SBUMessageReceiptState : NSInteger;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUBaseMessageCell")
@interface SBUBaseMessageCell : UITableViewCell
@property (nonatomic, strong) SBDBaseMessage * _Nonnull message;
@property (nonatomic) enum MessagePosition position;
@property (nonatomic) enum MessageGroupPosition groupPosition;
@property (nonatomic) enum SBUMessageReceiptState receiptState;
@property (nonatomic, strong) UIView * _Nonnull messageContentView;
@property (nonatomic, strong) UIView * _Nonnull dateView;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
/// This function configure a cell using informations.
/// \param message Message object
///
/// \param position Cell position (left / right / center)
///
/// \param hideDateView Hide or expose date information
///
/// \param receiptState ReadReceipt state
///
- (void)configureWithMessage:(SBDBaseMessage * _Nonnull)message position:(enum MessagePosition)position hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)prepareForReuse;
@end

@class UILabel;
@class SBDAdminMessage;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit19SBUAdminMessageCell")
@interface SBUAdminMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UILabel * _Nonnull messageLabel;
- (void)setupViews;
- (void)setupAutolayout;
- (void)layoutSubviews;
- (void)configure:(SBDAdminMessage * _Nonnull)message hideDateView:(BOOL)hideDateView;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit12SBUAvailable")
@interface SBUAvailable : NSObject
/// This method checks if the application support super group channel.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if super group channel can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportSuperGroupChannel SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support broadcast channel.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if broadcast channel can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportBroadcastChannel SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support reactions.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if the reaction operation can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportReactions SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support og metadata.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if the og metadata can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportOgTag SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit18SBUBaseChannelCell")
@interface SBUBaseChannelCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC13SendBirdUIKit19SBUChannelCellTheme")
@interface SBUChannelCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelCellTheme * _Nonnull light;)
+ (SBUChannelCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelCellTheme * _Nonnull dark;)
+ (SBUChannelCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor titleFont:(UIFont * _Nonnull)titleFont titleTextColor:(UIColor * _Nonnull)titleTextColor memberCountFont:(UIFont * _Nonnull)memberCountFont memberCountTextColor:(UIColor * _Nonnull)memberCountTextColor lastUpdatedTimeFont:(UIFont * _Nonnull)lastUpdatedTimeFont lastUpdatedTimeTextColor:(UIColor * _Nonnull)lastUpdatedTimeTextColor messageFont:(UIFont * _Nonnull)messageFont messageTextColor:(UIColor * _Nonnull)messageTextColor broadcastMarkTintColor:(UIColor * _Nonnull)broadcastMarkTintColor freezeStateTintColor:(UIColor * _Nonnull)freezeStateTintColor unreadCountBackgroundColor:(UIColor * _Nonnull)unreadCountBackgroundColor unreadCountTextColor:(UIColor * _Nonnull)unreadCountTextColor unreadCountFont:(UIFont * _Nonnull)unreadCountFont separatorLineColor:(UIColor * _Nonnull)separatorLineColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleTextColor;
@property (nonatomic, strong) UIFont * _Nonnull memberCountFont;
@property (nonatomic, strong) UIColor * _Nonnull memberCountTextColor;
@property (nonatomic, strong) UIFont * _Nonnull lastUpdatedTimeFont;
@property (nonatomic, strong) UIColor * _Nonnull lastUpdatedTimeTextColor;
@property (nonatomic, strong) UIFont * _Nonnull messageFont;
@property (nonatomic, strong) UIColor * _Nonnull messageTextColor;
@property (nonatomic, strong) UIColor * _Nonnull broadcastMarkTintColor;
@property (nonatomic, strong) UIColor * _Nonnull freezeStateTintColor;
@property (nonatomic, strong) UIColor * _Nonnull unreadCountBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull unreadCountTextColor;
@property (nonatomic, strong) UIFont * _Nonnull unreadCountFont;
@property (nonatomic, strong) UIColor * _Nonnull separatorLineColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit19SBUChannelListTheme")
@interface SBUChannelListTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelListTheme * _Nonnull light;)
+ (SBUChannelListTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelListTheme * _Nonnull dark;)
+ (SBUChannelListTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationBarShadowColor:(UIColor * _Nonnull)navigationBarShadowColor backgroundColor:(UIColor * _Nonnull)backgroundColor notificationOnBackgroundColor:(UIColor * _Nonnull)notificationOnBackgroundColor notificationOnTintColor:(UIColor * _Nonnull)notificationOnTintColor notificationOffBackgroundColor:(UIColor * _Nonnull)notificationOffBackgroundColor notificationOffTintColor:(UIColor * _Nonnull)notificationOffTintColor leaveBackgroundColor:(UIColor * _Nonnull)leaveBackgroundColor leaveTintColor:(UIColor * _Nonnull)leaveTintColor alertBackgroundColor:(UIColor * _Nonnull)alertBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOnBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOnTintColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOffBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOffTintColor;
@property (nonatomic, strong) UIColor * _Nonnull leaveBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leaveTintColor;
@property (nonatomic, strong) UIColor * _Nonnull alertBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIBarButtonItem;
@class SBDGroupChannel;
@class SBDGroupChannelListQuery;
@class NSBundle;
@class UINib;

SWIFT_CLASS("_TtC13SendBirdUIKit28SBUChannelListViewController")
@interface SBUChannelListViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// This is a function that allows you to select the channel type when creating a channel.
/// If set to the nil value, it is moved to groupChannel creation.
/// note:
/// Type: GroupChannel / SuperGroupChannel / BroadcastChannel
/// since:
/// 1.2.0
@property (nonatomic, strong) UIView * _Nullable createChannelTypeSelector;
/// This object has a list of all channels.
@property (nonatomic, readonly, copy) NSArray<SBDGroupChannel *> * _Nonnull channelList;
/// This is a query used to get a list of channels. Only getter is provided, please use initialization function to set query directly.
/// note:
/// For query properties, see <code>SBDGroupChannelListQuery</code> class.
/// since:
/// 1.0.11
@property (nonatomic, readonly, strong) SBDGroupChannelListQuery * _Nullable channelListQuery;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelListViewController()'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
/// You can initialize the class through this function.
/// If you have <code>channelListQuery</code>, please set it. If not set, it is used as default value.
/// See the example below for query generation.
/// \code
///     let query = SBDGroupChannel.createMyGroupChannelListQuery()
///     query?.includeEmptyChannel = false
///     query?.includeFrozenChannel = true
///     ...
///
/// \endcodesince:
/// 1.0.11
/// \param channelListQuery Your own <code>SBDGroupChannelListQuery</code> object
///
- (nonnull instancetype)initWithChannelListQuery:(SBDGroupChannelListQuery * _Nullable)channelListQuery OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// Changes push trigger option on a channel.
/// since:
/// 1.0.9
/// \param option Push trigger option to change
///
/// \param channel Channel to change option
///
/// \param completionHandler Completion handler
///
- (void)changePushTriggerOptionWithOption:(SBDGroupChannelPushTriggerOption)option channel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// Leaves the channel.
/// since:
/// 1.0.9
/// \param channel Channel to leave
///
/// \param completionHandler Completion handler
///
- (void)leaveChannel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the channelViewController.
/// If you want to use a custom channelViewController, override it and implement it.
/// \param channelUrl channel url for use in channelViewController.
///
- (void)showChannelWithChannelUrl:(NSString * _Nonnull)channelUrl;
/// This is a function that shows the channel type selector when a supergroup/broadcast channel can be set.
/// <ul>
///   <li>
///     If both types cannot be set, it moves directly to the group channel creation viewController.
///   </li>
///   <li>
///     If you want to use a custom createChannelTypeSelector or createChannel action, override it and implement it.
///   </li>
/// </ul>
/// since:
/// 1.2.0
- (void)showCreateChannelTypeSelector;
/// This is a function that shows the channel creation viewController with channel type.
/// If you want to use a custom createChannelViewController, override it and implement it.
/// \param type Using the Specified Type in CreateChannelViewController (default: <code>.group</code>)
///
- (void)showCreateChannelWithType:(enum ChannelType)type;
/// Used to register a custom cell as a base cell based on SBUBaseChannelCell.
/// \param channelCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithChannelCell:(SBUBaseChannelCell * _Nonnull)channelCell nib:(UINib * _Nullable)nib;
/// Used to register a custom cell as a additional cell based on SBUBaseChannelCell.
/// \param customCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithCustomCell:(SBUBaseChannelCell * _Nullable)customCell nib:(UINib * _Nullable)nib;
/// This is used to check the loading status and control loading indicator.
/// \param loadingState Set to true when the list is loading.
///
/// \param showIndicator If true, the loading indicator is started, and if false, the indicator is stopped.
///
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator;
/// If an error occurs in viewController, a message is sent through here.
/// If necessary, override to handle errors.
/// \param message error message
///
- (void)didReceiveError:(NSString * _Nullable)message;
@end


SWIFT_PROTOCOL("_TtP13SendBirdUIKit20SBUEmptyViewDelegate_")
@protocol SBUEmptyViewDelegate <NSObject>
- (void)didSelectRetry;
@end


@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end


/// This delegate is used in the class to handle the action.
SWIFT_PROTOCOL("_TtP13SendBirdUIKit36SBUCreateChannelTypeSelectorDelegate_")
@protocol SBUCreateChannelTypeSelectorDelegate
/// This function notifies the <code>SBUchannelListViewController</code> when closing the selector.
- (void)didSelectCloseSelector;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create group channel menu.
- (void)didSelectCreateGroupChannel;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create super group channel menu.
- (void)didSelectCreateSuperGroupChannel;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create broadcast channel menu.
- (void)didSelectCreateBroadcastChannel;
@end


@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUCreateChannelTypeSelectorDelegate>
- (void)didSelectCloseSelector;
- (void)didSelectCreateGroupChannel;
- (void)didSelectCreateSuperGroupChannel;
- (void)didSelectCreateBroadcastChannel;
@end

@class UITableView;
@class UISwipeActionsConfiguration;
@class UITableViewRowAction;

@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
- (NSArray<UITableViewRowAction *> * _Nullable)tableView:(UITableView * _Nonnull)tableView editActionsForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,deprecated=13.0);
@end

@class SBDUser;
@class SBDBaseChannel;

@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate, SBDConnectionDelegate>
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)didSucceedReconnection;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit23SBUChannelSettingsTheme")
@interface SBUChannelSettingsTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelSettingsTheme * _Nonnull light;)
+ (SBUChannelSettingsTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelSettingsTheme * _Nonnull dark;)
+ (SBUChannelSettingsTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationShadowColor:(UIColor * _Nonnull)navigationShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor cellTextFont:(UIFont * _Nonnull)cellTextFont cellTextColor:(UIColor * _Nonnull)cellTextColor cellSubTextFont:(UIFont * _Nonnull)cellSubTextFont cellSubTextColor:(UIColor * _Nonnull)cellSubTextColor cellSwitchColor:(UIColor * _Nonnull)cellSwitchColor cellSeparateColor:(UIColor * _Nonnull)cellSeparateColor cellTypeIconTintColor:(UIColor * _Nonnull)cellTypeIconTintColor cellArrowIconTintColor:(UIColor * _Nonnull)cellArrowIconTintColor cellLeaveIconColor:(UIColor * _Nonnull)cellLeaveIconColor userNameFont:(UIFont * _Nonnull)userNameFont userNameTextColor:(UIColor * _Nonnull)userNameTextColor itemTextColor:(UIColor * _Nonnull)itemTextColor itemColor:(UIColor * _Nonnull)itemColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull cellTextFont;
@property (nonatomic, strong) UIColor * _Nonnull cellTextColor;
@property (nonatomic, strong) UIFont * _Nonnull cellSubTextFont;
@property (nonatomic, strong) UIColor * _Nonnull cellSubTextColor;
@property (nonatomic, strong) UIColor * _Nonnull cellSwitchColor;
@property (nonatomic, strong) UIColor * _Nonnull cellSeparateColor;
@property (nonatomic, strong) UIColor * _Nonnull cellTypeIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull cellArrowIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull cellLeaveIconColor;
@property (nonatomic, strong) UIColor * _Nonnull cellNotificationIconColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellTypeIconTintColor");
@property (nonatomic, strong) UIColor * _Nonnull cellMemberIconColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellTypeIconTintColor");
@property (nonatomic, strong) UIColor * _Nonnull cellMemberButtonColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellArrowIconTintColor");
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIColor * _Nonnull itemTextColor;
@property (nonatomic, strong) UIColor * _Nonnull itemColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;
@class SBDGroupChannelParams;

SWIFT_CLASS("_TtC13SendBirdUIKit32SBUChannelSettingsViewController")
@interface SBUChannelSettingsViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, strong) UIView * _Nullable userInfoView;
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
/// One of two must be set.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithChannelUrl:'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithChannelUrl:'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
- (void)updateChannelInfoWithChannelName:(NSString * _Nullable)channelName SWIFT_DEPRECATED_MSG("deprecated in 1.0.9", "updateChannelWithChannelName:coverImage:");
/// Used to update the channel name or cover image. <code>channelName</code> and<code> coverImage</code> are used for updating only the set values.
/// since:
/// 1.0.9
/// \param channelName Channel name to update
///
/// \param coverImage Cover image to update
///
- (void)updateChannelWithChannelName:(NSString * _Nullable)channelName coverImage:(UIImage * _Nullable)coverImage;
/// Updates the channel with channelParams.
/// You can update a channel by setting various properties of ChannelParams.
/// since:
/// 1.0.9
/// \param params <code>SBDGroupChannelParams</code> class object
///
- (void)updateChannelWithParams:(SBDGroupChannelParams * _Nonnull)params;
/// Changes push trigger option on channel.
/// \param isOn notification status
///
- (void)changeNotificationWithIsOn:(BOOL)isOn;
/// Leaves the channel.
- (void)leaveChannel;
/// If you want to use a custom memberListViewController, override it and implement it.
- (void)showMemberList;
/// If you want to use a custom moderationsViewController, override it and implement it.
/// since:
/// 1.2.0
- (void)showModerationList;
/// Open the channel image selection menu.
- (void)selectChannelImage;
/// Open the channel name change popup.
- (void)changeChannelName;
/// If an error occurs in viewController, a message is sent through here.
/// If necessary, override to handle errors.
/// \param message error message
///
- (void)didReceiveError:(NSString * _Nullable)message;
@end



@class UIImagePickerController;

@interface SBUChannelSettingsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIImagePickerControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
@end


@interface SBUChannelSettingsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit15SBUChannelTheme")
@interface SBUChannelTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelTheme * _Nonnull light;)
+ (SBUChannelTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelTheme * _Nonnull dark;)
+ (SBUChannelTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationBarShadowColor:(UIColor * _Nonnull)navigationBarShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor removeItemColor:(UIColor * _Nonnull)removeItemColor cancelItemColor:(UIColor * _Nonnull)cancelItemColor alertRemoveColor:(UIColor * _Nonnull)alertRemoveColor alertCancelColor:(UIColor * _Nonnull)alertCancelColor menuTextColor:(UIColor * _Nonnull)menuTextColor channelStateBannerFont:(UIFont * _Nonnull)channelStateBannerFont channelStateBannerTextColor:(UIColor * _Nonnull)channelStateBannerTextColor channelStateBannerBackgroundColor:(UIColor * _Nonnull)channelStateBannerBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull removeItemColor;
@property (nonatomic, strong) UIColor * _Nonnull cancelItemColor;
@property (nonatomic, strong) UIColor * _Nonnull alertRemoveColor;
@property (nonatomic, strong) UIColor * _Nonnull alertCancelColor;
@property (nonatomic, strong) UIColor * _Nonnull menuTextColor;
@property (nonatomic, strong) UIFont * _Nonnull channelStateBannerFont;
@property (nonatomic, strong) UIColor * _Nonnull channelStateBannerTextColor;
@property (nonatomic, strong) UIColor * _Nonnull channelStateBannerBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SBUMessageInputView;
@class SBDMessageListParams;
@class SBDUserMessageParams;
@class SBDFileMessageParams;
@class SBDUserMessage;
@class UIScrollView;

SWIFT_CLASS("_TtC13SendBirdUIKit24SBUChannelViewController")
@interface SBUChannelViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, strong) UIView * _Nullable newMessageInfoView;
@property (nonatomic, strong) SBUMessageInputView * _Nonnull messageInputView;
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable channelStateBanner;
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// This object is used to import a list of messages, send messages, modify messages, and so on, and is created during initialization.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
/// This object has a list of all success messages synchronized with the server.
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull messageList;
/// This object that has resendable messages, including <code>pending messages</code> and <code>failed messages</code>.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, SBDBaseMessage *> * _Nonnull resendableMessages;
/// This is a params used to get a list of messages. Only getter is provided, please use initialization function to set params directly.
/// note:
/// For params properties, see <code>SBDMessageListParams</code> class.
/// since:
/// 1.0.11
@property (nonatomic, readonly, strong) SBDMessageListParams * _Nonnull messageListParams;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelViewController.init(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeReplies = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>nextResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeReplies = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>nextResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
/// Sends a user message with only text.
/// since:
/// 1.0.9
/// \param text String value
///
- (void)sendUserMessageWithText:(NSString * _Nonnull)text;
/// Sends a user messag with messageParams.
/// You can send a message by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param messageParams <code>SBDUserMessageParams</code> class object
///
- (void)sendUserMessageWithMessageParams:(SBDUserMessageParams * _Nonnull)messageParams;
/// Sends a file message with file data, file name, mime type.
/// since:
/// 1.0.9
/// \param fileData <code>Data</code> class object
///
/// \param fileName file name. Used when displayed in channel list.
///
/// \param mimeType file’s mime type.
///
- (void)sendFileMessageWithFileData:(NSData * _Nonnull)fileData fileName:(NSString * _Nonnull)fileName mimeType:(NSString * _Nonnull)mimeType;
/// Sends a file message with messageParams.
/// You can send a file message by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param messageParams <code>SBDFileMessageParams</code> class object
///
- (void)sendFileMessageWithMessageParams:(SBDFileMessageParams * _Nonnull)messageParams;
/// Resends a message with failedMessage object.
/// since:
/// 1.0.9
/// \param failedMessage <code>SBDBaseMessage</code> class based failed object
///
- (void)resendMessageWithFailedMessage:(SBDBaseMessage * _Nonnull)failedMessage;
/// Updates a user message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDUserMessage</code> object to update
///
/// \param text String to be updated
///
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message text:(NSString * _Nonnull)text;
/// Updates a user message with message object and messageParams.
/// You can update messages by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param message <code>SBDUserMessage</code> object to update
///
/// \param messageParams <code>SBDUserMessageParams</code> class object
///
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message messageParams:(SBDUserMessageParams * _Nonnull)messageParams;
/// Deletes a message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDBaseMessage</code> based class object
///
- (void)deleteMessageWithMessage:(SBDBaseMessage * _Nonnull)message;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function is used to add or delete reactions.
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object to update
///
/// \param emojiKey set emoji key
///
/// \param didSelect set reaction state
///
- (void)setReactionWithMessage:(SBDBaseMessage * _Nonnull)message emojiKey:(NSString * _Nonnull)emojiKey didSelect:(BOOL)didSelect;
/// This function increases the new message count.
- (void)increaseNewMessageCount;
- (void)sendImageFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)sendVideoFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)sendDocumentFileMessageWithDocumentUrls:(NSArray<NSURL *> * _Nonnull)documentUrls;
/// If you want to use a custom channelSettingsViewController, override it and implement it.
- (void)showChannelSettings;
/// This function presents <code>SBUEmojiListViewController</code>
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object
///
- (void)showEmojiListModalWithMessage:(SBDBaseMessage * _Nonnull)message;
- (void)registerWithAdminMessageCell:(SBUBaseMessageCell * _Nonnull)adminMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithUserMessageCell:(SBUBaseMessageCell * _Nonnull)userMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithFileMessageCell:(SBUBaseMessageCell * _Nonnull)fileMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithCustomMessageCell:(SBUBaseMessageCell * _Nullable)customMessageCell nib:(UINib * _Nullable)nib;
/// This function sets the cell’s tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
- (void)setTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message;
/// This function sets the cell’s long tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
/// \param indexPath indexpath of cell
///
- (void)setLongTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message indexPath:(NSIndexPath * _Nonnull)indexPath;
/// This function sets the cell’s tap emoji gesture handling.
/// since:
/// 1.1.0
/// \param cell Message cell object
///
/// \param emojiKey emoji key
///
- (void)setTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey;
/// This function sets the cell’s long tap emoji gesture handling.
/// since:
/// 1.1.0
/// \param cell Message cell object
///
/// \param emojiKey emoji key
///
- (void)setLongTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey;
/// This is used to messageInputView state update.
/// since:
/// 1.2.0
- (void)updateMessageInputModeState;
- (BOOL)checkSameDayAsNextMessageWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)configureOffset;
/// This is used to check the loading status and control loading indicator.
/// \param loadingState Set to true when the list is loading.
///
/// \param showIndicator If true, the loading indicator is started, and if false, the indicator is stopped.
///
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator;
/// This is a function that gets the location of the message to be grouped.
/// Only successful messages can be grouped.
/// since:
/// 1.2.1
/// \param currentIndex Index of current message in the message list
///
///
/// returns:
/// Position of a message when grouped
- (enum MessageGroupPosition)getMessageGroupingPositionWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)onClickBack;
- (void)onClickSetting;
- (void)scrollToBottomWithAnimated:(BOOL)animated;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end

@class SBDFileMessage;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit))
- (void)didSelectDeleteImageWithMessage:(SBDFileMessage * _Nonnull)message;
@end

@class UIPresentationController;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIViewControllerTransitioningDelegate>
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end

@class UIDocumentPickerViewController;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIDocumentPickerDelegate>
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentAtURL:(NSURL * _Nonnull)url;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIImagePickerControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCellIdentifierBy:(SBDBaseMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP13SendBirdUIKit27SBUMessageInputViewDelegate_")
@protocol SBUMessageInputViewDelegate <NSObject>
@optional
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
- (void)messageInputViewDidStartTyping;
- (void)messageInputViewDidEndTyping;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUMessageInputViewDelegate>
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
- (void)messageInputViewDidStartTyping;
- (void)messageInputViewDidEndTyping;
@end

@class SBDReactionEvent;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate, SBDConnectionDelegate>
- (void)channel:(SBDBaseChannel * _Nonnull)sender didReceiveMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender didUpdateMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channel:(SBDBaseChannel * _Nonnull)sender updatedReaction:(SBDReactionEvent * _Nonnull)reactionEvent;
- (void)channelDidUpdateReadReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateDeliveryReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateTypingStatus:(SBDGroupChannel * _Nonnull)sender;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasMuted:(SBDUser * _Nonnull)user;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasUnmuted:(SBDUser * _Nonnull)user;
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)didSucceedReconnection;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit11SBUColorSet")
@interface SBUColorSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary100;)
+ (UIColor * _Nonnull)primary100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary200;)
+ (UIColor * _Nonnull)primary200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary300;)
+ (UIColor * _Nonnull)primary300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary400;)
+ (UIColor * _Nonnull)primary400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary500;)
+ (UIColor * _Nonnull)primary500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary100;)
+ (UIColor * _Nonnull)secondary100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary200;)
+ (UIColor * _Nonnull)secondary200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary300;)
+ (UIColor * _Nonnull)secondary300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary400;)
+ (UIColor * _Nonnull)secondary400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary500;)
+ (UIColor * _Nonnull)secondary500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background100;)
+ (UIColor * _Nonnull)background100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background200;)
+ (UIColor * _Nonnull)background200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background300;)
+ (UIColor * _Nonnull)background300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background400;)
+ (UIColor * _Nonnull)background400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background500;)
+ (UIColor * _Nonnull)background500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background600;)
+ (UIColor * _Nonnull)background600 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground600:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background700;)
+ (UIColor * _Nonnull)background700 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground700:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull overlay01;)
+ (UIColor * _Nonnull)overlay01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOverlay01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull overlay02;)
+ (UIColor * _Nonnull)overlay02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOverlay02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight01;)
+ (UIColor * _Nonnull)onlight01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight02;)
+ (UIColor * _Nonnull)onlight02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight03;)
+ (UIColor * _Nonnull)onlight03 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight03:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight04;)
+ (UIColor * _Nonnull)onlight04 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight04:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark01;)
+ (UIColor * _Nonnull)ondark01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark02;)
+ (UIColor * _Nonnull)ondark02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark03;)
+ (UIColor * _Nonnull)ondark03 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark03:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark04;)
+ (UIColor * _Nonnull)ondark04 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark04:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull error;)
+ (UIColor * _Nonnull)error SWIFT_WARN_UNUSED_RESULT;
+ (void)setError:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull information;)
+ (UIColor * _Nonnull)information SWIFT_WARN_UNUSED_RESULT;
+ (void)setInformation:(UIColor * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit17SBUComponentTheme")
@interface SBUComponentTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUComponentTheme * _Nonnull light;)
+ (SBUComponentTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUComponentTheme * _Nonnull dark;)
+ (SBUComponentTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithEmptyViewBackgroundColor:(UIColor * _Nonnull)emptyViewBackgroundColor emptyViewStatusFont:(UIFont * _Nonnull)emptyViewStatusFont emptyViewStatusTintColor:(UIColor * _Nonnull)emptyViewStatusTintColor emptyViewRetryButtonTintColor:(UIColor * _Nonnull)emptyViewRetryButtonTintColor emptyViewRetryButtonFont:(UIFont * _Nonnull)emptyViewRetryButtonFont overlayColor:(UIColor * _Nonnull)overlayColor backgroundColor:(UIColor * _Nonnull)backgroundColor highlightedColor:(UIColor * _Nonnull)highlightedColor buttonTextColor:(UIColor * _Nonnull)buttonTextColor separatorColor:(UIColor * _Nonnull)separatorColor shadowColor:(UIColor * _Nonnull)shadowColor closeBarButtonTintColor:(UIColor * _Nonnull)closeBarButtonTintColor alertTitleColor:(UIColor * _Nonnull)alertTitleColor alertTitleFont:(UIFont * _Nonnull)alertTitleFont alertDetailColor:(UIColor * _Nonnull)alertDetailColor alertDetailFont:(UIFont * _Nonnull)alertDetailFont alertPlaceholderColor:(UIColor * _Nonnull)alertPlaceholderColor alertButtonColor:(UIColor * _Nonnull)alertButtonColor alertErrorColor:(UIColor * _Nonnull)alertErrorColor alertButtonFont:(UIFont * _Nonnull)alertButtonFont alertTextFieldBackgroundColor:(UIColor * _Nonnull)alertTextFieldBackgroundColor alertTextFieldTintColor:(UIColor * _Nonnull)alertTextFieldTintColor alertTextFieldFont:(UIFont * _Nonnull)alertTextFieldFont actionSheetTextFont:(UIFont * _Nonnull)actionSheetTextFont actionSheetTextColor:(UIColor * _Nonnull)actionSheetTextColor actionSheetSubTextFont:(UIFont * _Nonnull)actionSheetSubTextFont actionSheetSubTextColor:(UIColor * _Nonnull)actionSheetSubTextColor actionSheetItemColor:(UIColor * _Nonnull)actionSheetItemColor actionSheetErrorColor:(UIColor * _Nonnull)actionSheetErrorColor actionSheetButtonFont:(UIFont * _Nonnull)actionSheetButtonFont newMessageFont:(UIFont * _Nonnull)newMessageFont newMessageTintColor:(UIColor * _Nonnull)newMessageTintColor newMessageBackground:(UIColor * _Nonnull)newMessageBackground newMessageHighlighted:(UIColor * _Nonnull)newMessageHighlighted titleOnlineStateColor:(UIColor * _Nonnull)titleOnlineStateColor titleColor:(UIColor * _Nonnull)titleColor titleFont:(UIFont * _Nonnull)titleFont titleStatusColor:(UIColor * _Nonnull)titleStatusColor titleStatusFont:(UIFont * _Nonnull)titleStatusFont menuTitleFont:(UIFont * _Nonnull)menuTitleFont userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor reactionBoxBackgroundColor:(UIColor * _Nonnull)reactionBoxBackgroundColor reactionBoxBorderLineColor:(UIColor * _Nonnull)reactionBoxBorderLineColor reactionBoxEmojiCountColor:(UIColor * _Nonnull)reactionBoxEmojiCountColor reactionBoxEmojiBackgroundColor:(UIColor * _Nonnull)reactionBoxEmojiBackgroundColor reactionBoxSelectedEmojiBackgroundColor:(UIColor * _Nonnull)reactionBoxSelectedEmojiBackgroundColor reactionBoxEmojiCountFont:(UIFont * _Nonnull)reactionBoxEmojiCountFont emojiCountColor:(UIColor * _Nonnull)emojiCountColor emojiSelectedCountColor:(UIColor * _Nonnull)emojiSelectedCountColor emojiSelectedUnderlineColor:(UIColor * _Nonnull)emojiSelectedUnderlineColor emojiCountFont:(UIFont * _Nonnull)emojiCountFont reactionMenuLineColor:(UIColor * _Nonnull)reactionMenuLineColor emojiListSelectedBackgroundColor:(UIColor * _Nonnull)emojiListSelectedBackgroundColor addReactionTintColor:(UIColor * _Nonnull)addReactionTintColor channelTypeSelectorItemTintColor:(UIColor * _Nonnull)channelTypeSelectorItemTintColor channelTypeSelectorItemTextColor:(UIColor * _Nonnull)channelTypeSelectorItemTextColor channelTypeSelectorItemFont:(UIFont * _Nonnull)channelTypeSelectorItemFont broadcastIconBackgroundColor:(UIColor * _Nonnull)broadcastIconBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull emptyViewStatusFont;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewStatusTintColor;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewRetryButtonTintColor;
@property (nonatomic, strong) UIFont * _Nonnull emptyViewRetryButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull alertTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull alertTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull alertDetailColor;
@property (nonatomic, strong) UIFont * _Nonnull alertDetailFont;
@property (nonatomic, strong) UIColor * _Nonnull alertPlaceholderColor;
@property (nonatomic, strong) UIColor * _Nonnull alertButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull alertErrorColor;
@property (nonatomic, strong) UIFont * _Nonnull alertButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull alertTextFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull alertTextFieldTintColor;
@property (nonatomic, strong) UIFont * _Nonnull alertTextFieldFont;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetTextFont;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetTextColor;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetSubTextFont;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetSubTextColor;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetItemColor;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetErrorColor;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetButtonFont;
@property (nonatomic, strong) UIFont * _Nonnull newMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull newMessageTintColor;
@property (nonatomic, strong) UIColor * _Nonnull newMessageBackground;
@property (nonatomic, strong) UIColor * _Nonnull newMessageHighlighted;
@property (nonatomic, strong) UIColor * _Nonnull titleOnlineStateColor;
@property (nonatomic, strong) UIColor * _Nonnull titleColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleStatusColor;
@property (nonatomic, strong) UIFont * _Nonnull titleStatusFont;
@property (nonatomic, strong) UIFont * _Nonnull menuTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull overlayColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull highlightedColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTextColor;
@property (nonatomic, strong) UIColor * _Nonnull separatorColor;
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
@property (nonatomic, strong) UIColor * _Nonnull closeBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxBorderLineColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxEmojiCountColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxEmojiBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxSelectedEmojiBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull reactionBoxEmojiCountFont;
@property (nonatomic, strong) UIColor * _Nonnull emojiCountColor;
@property (nonatomic, strong) UIColor * _Nonnull emojiSelectedCountColor;
@property (nonatomic, strong) UIColor * _Nonnull emojiSelectedUnderlineColor;
@property (nonatomic, strong) UIFont * _Nonnull emojiCountFont;
@property (nonatomic, strong) UIColor * _Nonnull emojiListSelectedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionMenuLineColor;
@property (nonatomic, strong) UIColor * _Nonnull addReactionTintColor;
@property (nonatomic, strong) UIColor * _Nonnull channelTypeSelectorItemTintColor;
@property (nonatomic, strong) UIColor * _Nonnull channelTypeSelectorItemTextColor;
@property (nonatomic, strong) UIFont * _Nonnull channelTypeSelectorItemFont;
@property (nonatomic, strong) UIColor * _Nonnull broadcastIconBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIStackView;
@class UILongPressGestureRecognizer;
@class UITapGestureRecognizer;

/// It is a base class used in message cell with contents.
/// since:
/// 1.2.1
SWIFT_CLASS("_TtC13SendBirdUIKit25SBUContentBaseMessageCell")
@interface SBUContentBaseMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UIStackView * _Nonnull userNameStackView;
@property (nonatomic, strong) UIStackView * _Nonnull contentsStackView;
@property (nonatomic, strong) UIView * _Nonnull userNameView;
@property (nonatomic, strong) UIView * _Nonnull profileView;
@property (nonatomic, strong) UIView * _Nonnull stateView;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView position:(enum MessagePosition)position groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)setMessageGrouping;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)onLongPressContentViewWithSender:(UILongPressGestureRecognizer * _Nullable)sender;
- (void)onTapContentViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (void)onTapProfileImageViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// This protocol is used to create a custom <code>CreateChannelTypeSelector</code>.
SWIFT_PROTOCOL("_TtP13SendBirdUIKit36SBUCreateChannelTypeSelectorProtocol_")
@protocol SBUCreateChannelTypeSelectorProtocol
/// This function shows selector view.
- (void)show;
/// This function dismisses selector view.
- (void)dismiss;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit30SBUCreateChannelViewController")
@interface SBUCreateChannelViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, readonly) enum ChannelType channelType;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUCreateChannelViewController(type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'init'");
- (nonnull instancetype)init;
/// If you have user objects, use this initialize function.
/// \param users <code>SBUUser</code> array object
///
/// \param type The type of channel to create (default: <code>.group</code>)
///
- (nonnull instancetype)initWithUsers:(NSArray<SBUUser *> * _Nullable)users type:(enum ChannelType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// Load user list.
/// If want using your custom user list, filled users with your custom user list.
/// \param reset <code>true</code> is reset user list and load new list
///
/// \param users customized <code>SBUUser</code> array for add to user list
///
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
/// Creates the channel with userIds.
/// since:
/// 1.0.9
/// \param userIds User Ids to include
///
- (void)createChannelWithUserIds:(NSArray<NSString *> * _Nonnull)userIds;
/// Creates the channel with channelParams.
/// You can create a channel by setting various properties of ChannelParams.
/// since:
/// 1.0.9
/// \param params <code>SBDGroupChannelParams</code> class object
///
- (void)createChannelWithParams:(SBDGroupChannelParams * _Nonnull)params;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUCreateChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIImageView;

SWIFT_CLASS("_TtC13SendBirdUIKit12SBUEmptyView")
@interface SBUEmptyView : UIView
@property (nonatomic) enum EmptyViewType type;
@property (nonatomic, weak) id <SBUEmptyViewDelegate> _Nullable delegate;
@property (nonatomic, strong) UIImageView * _Nonnull statusImageView;
@property (nonatomic, strong) UILabel * _Nonnull statusLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)layoutSubviews;
- (void)reloadData:(enum EmptyViewType)type;
/// Override this function to apply a custom type.
- (void)updateViews;
- (void)onClickRetry:(id _Nonnull)sender;
@end



IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUFileMessageCell")
@interface SBUFileMessageCell : SBUContentBaseMessageCell
@property (nonatomic, readonly, strong) SBDFileMessage * _Nullable fileMessage;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDFileMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUFontSet")
@interface SBUFontSet : NSObject
/// Medium, 18pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull h1;)
+ (UIFont * _Nonnull)h1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setH1:(UIFont * _Nonnull)value;
/// Bold, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull h2;)
+ (UIFont * _Nonnull)h2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setH2:(UIFont * _Nonnull)value;
/// Regular, 14pt, Line height: 20pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body1;)
+ (UIFont * _Nonnull)body1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody1:(UIFont * _Nonnull)value;
/// Regular, 14pt, Line height: 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body2;)
+ (UIFont * _Nonnull)body2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody2:(UIFont * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body3;)
+ (UIFont * _Nonnull)body3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody3:(UIFont * _Nonnull)value;
/// Semibold, 20pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button1;)
+ (UIFont * _Nonnull)button1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton1:(UIFont * _Nonnull)value;
/// Medium, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button2;)
+ (UIFont * _Nonnull)button2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton2:(UIFont * _Nonnull)value;
/// Medium, 14pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button3;)
+ (UIFont * _Nonnull)button3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton3:(UIFont * _Nonnull)value;
/// Bold, 12pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption1;)
+ (UIFont * _Nonnull)caption1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption1:(UIFont * _Nonnull)value;
/// Regular, 12pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption2;)
+ (UIFont * _Nonnull)caption2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption2:(UIFont * _Nonnull)value;
/// Regular, 11pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption3;)
+ (UIFont * _Nonnull)caption3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption3:(UIFont * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption4;)
+ (UIFont * _Nonnull)caption4 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption4:(UIFont * _Nonnull)value;
/// Medium, 16pt, Line hieght 22pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull subtitle1;)
+ (UIFont * _Nonnull)subtitle1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSubtitle1:(UIFont * _Nonnull)value;
/// Regular, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull subtitle2;)
+ (UIFont * _Nonnull)subtitle2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSubtitle2:(UIFont * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUGlobals")
@interface SBUGlobals : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ApplicationId;)
+ (NSString * _Nullable)ApplicationId SWIFT_WARN_UNUSED_RESULT;
+ (void)setApplicationId:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable AccessToken;)
+ (NSString * _Nullable)AccessToken SWIFT_WARN_UNUSED_RESULT;
+ (void)setAccessToken:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUser * _Nullable CurrentUser;)
+ (SBUUser * _Nullable)CurrentUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrentUser:(SBUUser * _Nullable)newCurrentUser;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL UsingMessageGrouping;)
+ (BOOL)UsingMessageGrouping SWIFT_WARN_UNUSED_RESULT;
+ (void)setUsingMessageGrouping:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUIconSet")
@interface SBUIconSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionLeave;)
+ (UIImage * _Nonnull)iconActionLeave SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionLeave:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionNotificationOn;)
+ (UIImage * _Nonnull)iconActionNotificationOn SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionNotificationOn:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionNotificationOff;)
+ (UIImage * _Nonnull)iconActionNotificationOff SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionNotificationOff:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconAdd;)
+ (UIImage * _Nonnull)iconAdd SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconAdd:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBack;)
+ (UIImage * _Nonnull)iconBack SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBack:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCamera;)
+ (UIImage * _Nonnull)iconCamera SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCamera:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPlus;)
+ (UIImage * _Nonnull)iconPlus SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPlus:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconChat;)
+ (UIImage * _Nonnull)iconChat SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconChat:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCheckbox;)
+ (UIImage * _Nonnull)iconCheckbox SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCheckbox:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCheckboxOff;)
+ (UIImage * _Nonnull)iconCheckboxOff SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCheckboxOff:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconClose;)
+ (UIImage * _Nonnull)iconClose SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconClose:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCopy;)
+ (UIImage * _Nonnull)iconCopy SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCopy:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCreate;)
+ (UIImage * _Nonnull)iconCreate SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCreate:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDelete;)
+ (UIImage * _Nonnull)iconDelete SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDelete:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDelivered;)
+ (UIImage * _Nonnull)iconDelivered SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDelivered:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDocument;)
+ (UIImage * _Nonnull)iconDocument SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDocument:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDownload;)
+ (UIImage * _Nonnull)iconDownload SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDownload:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDummy;)
+ (UIImage * _Nonnull)iconDummy SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDummy:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconEdit;)
+ (UIImage * _Nonnull)iconEdit SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconEdit:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconError;)
+ (UIImage * _Nonnull)iconError SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconError:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconErrorFilled;)
+ (UIImage * _Nonnull)iconErrorFilled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconErrorFilled:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconGif;)
+ (UIImage * _Nonnull)iconGif SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconGif:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconInfo;)
+ (UIImage * _Nonnull)iconInfo SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconInfo:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconLeave;)
+ (UIImage * _Nonnull)iconLeave SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconLeave:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMembers;)
+ (UIImage * _Nonnull)iconMembers SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMembers:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconModerations;)
+ (UIImage * _Nonnull)iconModerations SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconModerations:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastSmall;)
+ (UIImage * _Nonnull)iconBroadcastSmall SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastSmall:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastMedium;)
+ (UIImage * _Nonnull)iconBroadcastMedium SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastMedium:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastLarge;)
+ (UIImage * _Nonnull)iconBroadcastLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFreeze;)
+ (UIImage * _Nonnull)iconFreeze SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFreeze:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMute;)
+ (UIImage * _Nonnull)iconMute SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMute:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconNotifications;)
+ (UIImage * _Nonnull)iconNotifications SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconNotifications:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconThumbnailLight;)
+ (UIImage * _Nonnull)iconThumbnailLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconThumbnailLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconNoThumbnailLight;)
+ (UIImage * _Nonnull)iconNoThumbnailLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconNoThumbnailLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPhoto;)
+ (UIImage * _Nonnull)iconPhoto SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPhoto:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPlay;)
+ (UIImage * _Nonnull)iconPlay SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPlay:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconRead;)
+ (UIImage * _Nonnull)iconRead SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconRead:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconRefresh;)
+ (UIImage * _Nonnull)iconRefresh SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconRefresh:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconAvatarLight;)
+ (UIImage * _Nonnull)iconAvatarLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconAvatarLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSend;)
+ (UIImage * _Nonnull)iconSend SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSend:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSent;)
+ (UIImage * _Nonnull)iconSent SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSent:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFailed;)
+ (UIImage * _Nonnull)iconFailed SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFailed:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconShevronRight;)
+ (UIImage * _Nonnull)iconShevronRight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconShevronRight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconUser;)
+ (UIImage * _Nonnull)iconUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconUser:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSpinnerSmall;)
+ (UIImage * _Nonnull)iconSpinnerSmall SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSpinnerSmall:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSpinnerLarge;)
+ (UIImage * _Nonnull)iconSpinnerLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSpinnerLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFileDocument;)
+ (UIImage * _Nonnull)iconFileDocument SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFileDocument:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFileAudio;)
+ (UIImage * _Nonnull)iconFileAudio SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFileAudio:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconChevronDown;)
+ (UIImage * _Nonnull)iconChevronDown SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconChevronDown:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMore;)
+ (UIImage * _Nonnull)iconMore SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMore:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconOperator;)
+ (UIImage * _Nonnull)iconOperator SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconOperator:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMuted;)
+ (UIImage * _Nonnull)iconMuted SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMuted:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBanned;)
+ (UIImage * _Nonnull)iconBanned SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBanned:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMessage;)
+ (UIImage * _Nonnull)iconMessage SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMessage:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeGroup;)
+ (UIImage * _Nonnull)channelTypeGroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeGroup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeSupergroup;)
+ (UIImage * _Nonnull)channelTypeSupergroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeSupergroup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeBroadcast;)
+ (UIImage * _Nonnull)channelTypeBroadcast SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeBroadcast:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiHeartEyes;)
+ (UIImage * _Nonnull)emojiHeartEyes SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiHeartEyes:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiLaughing;)
+ (UIImage * _Nonnull)emojiLaughing SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiLaughing:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiSweatSmile;)
+ (UIImage * _Nonnull)emojiSweatSmile SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiSweatSmile:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiSob;)
+ (UIImage * _Nonnull)emojiSob SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiSob:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiRage;)
+ (UIImage * _Nonnull)emojiRage SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiRage:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiMoreLarge;)
+ (UIImage * _Nonnull)emojiMoreLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiMoreLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiThumbsup;)
+ (UIImage * _Nonnull)emojiThumbsup SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiThumbsup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiThubsdown;)
+ (UIImage * _Nonnull)emojiThubsdown SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiThubsdown:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiFail;)
+ (UIImage * _Nonnull)emojiFail SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiFail:(UIImage * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC13SendBirdUIKit27SBUInviteUserViewController")
@interface SBUInviteUserViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, readonly) enum ChannelInviteListType inviteListType;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController.init(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channel and users objects, use this initialize function.
/// \param channel Channel object
///
/// \param users <code>SBUUser</code> object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and users objects, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param users <code>SBUUser</code> object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// Load user list.
/// If want using your custom user list, filled users with your custom user list.
/// \param reset <code>true</code> is reset user list and load new list
///
/// \param users customized <code>SBUUser</code> array for add to user list
///
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// Make this function return the next list each time it is called.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
/// Invites users in the channel with selected userIds.
/// since:
/// 1.0.9
- (void)inviteUsers;
/// Invites users in the channel with directly generated userIds.
/// since:
/// 1.0.9
/// \param userIds User IDs to invite
///
- (void)inviteUsersWithUserIds:(NSArray<NSString *> * _Nonnull)userIds;
/// Promotes members as operator with selected userIds.
/// since:
/// 1.2.0
- (void)promoteToOperators;
/// Promotes members as operator with directly generated memberIds.
/// since:
/// 1.2.0
/// \param userIds member IDs to invite
///
- (void)promoteToOperatorsWithMemberIds:(NSArray<NSString *> * _Nonnull)memberIds;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
- (void)selectUserWithUser:(SBUUser * _Nonnull)user;
- (void)popToChannel;
- (void)popToPrevious;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUInviteUserViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class SBDError;

SWIFT_CLASS("_TtC13SendBirdUIKit7SBUMain")
@interface SBUMain : NSObject
+ (void)initializeWithApplicationId:(NSString * _Nonnull)applicationId;
+ (void)connectWithCompletionHandler:(void (^ _Nonnull)(SBDUser * _Nullable, SBDError * _Nullable))completionHandler;
+ (void)connectionCheckWithCompletionHandler:(void (^ _Nonnull)(SBDUser * _Nullable, SBDError * _Nullable))completionHandler;
+ (void)disconnectWithCompletionHandler:(void (^ _Nullable)(void))completionHandler;
+ (void)updateUserInfoWithNickname:(NSString * _Nullable)nickname profileUrl:(NSString * _Nullable)profileUrl completionHandler:(void (^ _Nullable)(SBDError * _Nullable))completionHandler;
+ (NSString * _Nonnull)getUIKitVersion SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("", "shortVersionString");
+ (NSString * _Nullable)versionString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)shortVersionString SWIFT_WARN_UNUSED_RESULT;
+ (void)registerPushWithDeviceToken:(NSData * _Nonnull)deviceToken completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)unregisterPushTokenWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)unregisterAllPushTokenWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)openChannelWithChannelUrl:(NSString * _Nonnull)channelUrl basedOnChannelList:(BOOL)basedOnChannelList;
/// You can activate log information for debugging.
/// <ul>
///   <li>
///     <code>Objective-C</code> uses bit masking. (e,g, <code>.error|.info</code>)
///   </li>
///   <li>
///     <code>Swift</code> uses a single type in this function.
///   </li>
///   <li>
///     default type: .none
///   </li>
/// </ul>
/// \param type LogType
///
+ (void)setLogLevel:(enum LogType)type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit27SBUMemberListViewController")
@interface SBUMemberListViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable emptyView;
@property (nonatomic, readonly) enum ChannelMemberListType memberListType;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull memberList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController(channelUrl:type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channel and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channel Channel object
///
/// \param members <code>SBUUser</code> array object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channelUrl Channel url string
///
/// \param members <code>SBUUser</code> array object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function to load the member list.
/// This requests the required list according to <code>memberListType</code>.
/// If you want using your custom member list, filled members with your custom member list.
/// since:
/// 1.2.0
/// \param reset <code>true</code> is reset member list and load new list
///
/// \param members customized <code>SBUUser</code> array for add to member list
///
- (void)loadNextMemberListWithReset:(BOOL)reset members:(NSArray<SBUUser *> * _Nullable)members;
/// When creating and using a member list directly, overriding this function and return the next member list.
/// Make this function return the next list each time it is called.
/// since:
/// 1.2.0
///
/// returns:
/// next member list
- (NSArray<SBUUser *> * _Nullable)nextMemberList SWIFT_WARN_UNUSED_RESULT;
/// This function to get member information directly from the channel in the case of GroupChannel.
/// If you use it in SuperGroup, Broadcast channel, only some member information can be loaded.
/// since:
/// 1.2.0
- (void)loadMembers;
/// This function promotes the member as an operator.
/// since:
/// 1.2.0
/// \param member A member to be promoted
///
- (void)promoteToOperatorWithMember:(SBUUser * _Nonnull)member;
/// This function dismiss the operator as a member.
/// since:
/// 1.2.0
/// \param member A member to be dismissed
///
- (void)dismissOperatorWithMember:(SBUUser * _Nonnull)member;
/// This function mutes the member.
/// since:
/// 1.2.0
/// \param member A member to be muted
///
- (void)muteWithMember:(SBUUser * _Nonnull)member;
/// This function unmutes the member.
/// since:
/// 1.2.0
/// \param member A member to be unmuted
///
- (void)unmuteWithMember:(SBUUser * _Nonnull)member;
/// This function bans the member.
/// since:
/// 1.2.0
/// \param member A member to be banned
///
- (void)banWithMember:(SBUUser * _Nonnull)member;
/// This function unbans the member.
/// since:
/// 1.2.0
/// \param member A member to be unbanned
///
- (void)unbanWithMember:(SBUUser * _Nonnull)member;
/// If you want to use a custom inviteChannelViewController, override it and implement it.
- (void)showInviteUser;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
/// This function reloads the member list.
/// since:
/// 1.2.0
- (void)reloadMemberList;
- (void)onClickInviteUser;
/// /// This function sets the cell’s more menu button action handling.
/// since:
/// 1.2.0
/// \param member <code>SBUUser</code> obejct
///
- (void)setMoreMenuActionHandler:(SBUUser * _Nonnull)member;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate>
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit19SBUMessageCellTheme")
@interface SBUMessageCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageCellTheme * _Nonnull light;)
+ (SBUMessageCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageCellTheme * _Nonnull dark;)
+ (SBUMessageCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor leftBackgroundColor:(UIColor * _Nonnull)leftBackgroundColor leftPressedBackgroundColor:(UIColor * _Nonnull)leftPressedBackgroundColor rightBackgroundColor:(UIColor * _Nonnull)rightBackgroundColor rightPressedBackgroundColor:(UIColor * _Nonnull)rightPressedBackgroundColor dateFont:(UIFont * _Nonnull)dateFont dateTextColor:(UIColor * _Nonnull)dateTextColor dateBackgroundColor:(UIColor * _Nonnull)dateBackgroundColor userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor userNameFont:(UIFont * _Nonnull)userNameFont userNameTextColor:(UIColor * _Nonnull)userNameTextColor timeFont:(UIFont * _Nonnull)timeFont timeTextColor:(UIColor * _Nonnull)timeTextColor pendingStateColor:(UIColor * _Nonnull)pendingStateColor failedStateColor:(UIColor * _Nonnull)failedStateColor succeededStateColor:(UIColor * _Nonnull)succeededStateColor readReceiptStateColor:(UIColor * _Nonnull)readReceiptStateColor deliveryReceiptStateColor:(UIColor * _Nonnull)deliveryReceiptStateColor userMessageFont:(UIFont * _Nonnull)userMessageFont userMessageLeftTextColor:(UIColor * _Nonnull)userMessageLeftTextColor userMessageLeftEditTextColor:(UIColor * _Nonnull)userMessageLeftEditTextColor userMessageRightTextColor:(UIColor * _Nonnull)userMessageRightTextColor userMessageRightEditTextColor:(UIColor * _Nonnull)userMessageRightEditTextColor fileIconBackgroundColor:(UIColor * _Nonnull)fileIconBackgroundColor fileIconColor:(UIColor * _Nonnull)fileIconColor fileMessageNameFont:(UIFont * _Nonnull)fileMessageNameFont fileMessageLeftTextColor:(UIColor * _Nonnull)fileMessageLeftTextColor fileMessageRightTextColor:(UIColor * _Nonnull)fileMessageRightTextColor fileMessagePlaceholderColor:(UIColor * _Nonnull)fileMessagePlaceholderColor adminMessageFont:(UIFont * _Nonnull)adminMessageFont adminMessageTextColor:(UIColor * _Nonnull)adminMessageTextColor unknownMessageDescFont:(UIFont * _Nonnull)unknownMessageDescFont unknownMessageDescTextColor:(UIColor * _Nonnull)unknownMessageDescTextColor ogTitleFont:(UIFont * _Nonnull)ogTitleFont ogTitleColor:(UIColor * _Nonnull)ogTitleColor ogDescriptionFont:(UIFont * _Nonnull)ogDescriptionFont ogDescriptionColor:(UIColor * _Nonnull)ogDescriptionColor ogURLAddressFont:(UIFont * _Nonnull)ogURLAddressFont ogURLAddressColor:(UIColor * _Nonnull)ogURLAddressColor contentBackgroundColor:(UIColor * _Nonnull)contentBackgroundColor pressedContentBackgroundColor:(UIColor * _Nonnull)pressedContentBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leftPressedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull rightPressedBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull dateFont;
@property (nonatomic, strong) UIColor * _Nonnull dateTextColor;
@property (nonatomic, strong) UIColor * _Nonnull dateBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIFont * _Nonnull timeFont;
@property (nonatomic, strong) UIColor * _Nonnull timeTextColor;
@property (nonatomic, strong) UIColor * _Nonnull pendingStateColor;
@property (nonatomic, strong) UIColor * _Nonnull failedStateColor;
@property (nonatomic, strong) UIColor * _Nonnull succeededStateColor;
@property (nonatomic, strong) UIColor * _Nonnull readReceiptStateColor;
@property (nonatomic, strong) UIColor * _Nonnull deliveryReceiptStateColor;
@property (nonatomic, strong) UIColor * _Nonnull contentBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull pressedContentBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull userMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull userMessageLeftTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageLeftEditTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageRightTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageRightEditTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileIconBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull fileIconColor;
@property (nonatomic, strong) UIFont * _Nonnull fileMessageNameFont;
@property (nonatomic, strong) UIColor * _Nonnull fileMessageLeftTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileMessageRightTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileMessagePlaceholderColor;
@property (nonatomic, strong) UIFont * _Nonnull adminMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull adminMessageTextColor;
@property (nonatomic, strong) UIFont * _Nonnull unknownMessageDescFont;
@property (nonatomic, strong) UIColor * _Nonnull unknownMessageDescTextColor;
@property (nonatomic, strong) UIFont * _Nonnull ogTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull ogTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull ogDescriptionFont;
@property (nonatomic, strong) UIColor * _Nonnull ogDescriptionColor;
@property (nonatomic, strong) UIFont * _Nonnull ogURLAddressFont;
@property (nonatomic, strong) UIColor * _Nonnull ogURLAddressColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit20SBUMessageInputTheme")
@interface SBUMessageInputTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageInputTheme * _Nonnull light;)
+ (SBUMessageInputTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageInputTheme * _Nonnull dark;)
+ (SBUMessageInputTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor textFieldBackgroundColor:(UIColor * _Nonnull)textFieldBackgroundColor textFieldPlaceholderColor:(UIColor * _Nonnull)textFieldPlaceholderColor textFieldPlaceholderFont:(UIFont * _Nonnull)textFieldPlaceholderFont textFieldDisabledColor:(UIColor * _Nonnull)textFieldDisabledColor textFieldTintColor:(UIColor * _Nonnull)textFieldTintColor textFieldTextColor:(UIColor * _Nonnull)textFieldTextColor textFieldBorderColor:(UIColor * _Nonnull)textFieldBorderColor buttonTintColor:(UIColor * _Nonnull)buttonTintColor buttonDisabledTintColor:(UIColor * _Nonnull)buttonDisabledTintColor cancelButtonFont:(UIFont * _Nonnull)cancelButtonFont saveButtonFont:(UIFont * _Nonnull)saveButtonFont saveButtonTextColor:(UIColor * _Nonnull)saveButtonTextColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldPlaceholderColor;
@property (nonatomic, strong) UIFont * _Nonnull textFieldPlaceholderFont;
@property (nonatomic, strong) UIColor * _Nonnull textFieldDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldTintColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldTextColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldBorderColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonDisabledTintColor;
@property (nonatomic, strong) UIFont * _Nonnull cancelButtonFont;
@property (nonatomic, strong) UIFont * _Nonnull saveButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull saveButtonTextColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIButton;
@class UITextView;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit19SBUMessageInputView")
@interface SBUMessageInputView : UIView <UITextViewDelegate>
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified addButton;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified placeholderLabel;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified textView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified sendButton;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified editView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified cancelButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified saveButton;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageInputView.sbu_loadViewFromNib()'");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageInputView.sbu_loadViewFromNib()'");
- (void)awakeFromNib;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
- (void)startEditModeWithText:(NSString * _Nonnull)text;
- (void)endEditMode;
/// Sets frozen mode state.
/// \param isFrozen <code>true</code> is frozen mode, <code>false</code> is unfrozen mode
///
- (void)setFrozenModeState:(BOOL)isFrozen;
/// Sets frozen mode state.
/// \param isMuted <code>true</code> is muted mode, <code>false</code> is unmuted mode
///
- (void)setMutedModeState:(BOOL)isMuted;
- (void)endTypingMode;
- (void)updateTextViewHeight;
- (IBAction)onClickAddButton:(id _Nonnull)sender;
- (IBAction)onClickSendButton:(id _Nonnull)sender;
- (IBAction)onClickCancelButton:(id _Nonnull)sender;
- (IBAction)onClickSaveButton:(id _Nonnull)sender;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM(NSInteger, SBUMessageReceiptState, open) {
  SBUMessageReceiptStateNone = 0,
  SBUMessageReceiptStateReadReceipt = 1,
  SBUMessageReceiptStateDeliveryReceipt = 2,
};


SWIFT_CLASS("_TtC13SendBirdUIKit28SBUModerationsViewController")
@interface SBUModerationsViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
/// One of two must be set.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUModerationsViewController(channel:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function freezes the channel.
/// \param completionHandler completion handler of freeze status change
///
- (void)freezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This function unfreezes the channel.
/// \param completionHandler completion handler of freeze status change
///
- (void)unfreezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the operator List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showOperatorList;
/// This is a function that shows the muted member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showMutedMeberList;
/// This is a function that shows the banned member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showBannedMeberList;
/// Changes freeze status on channel.
/// \param freeze freeze status
///
/// \param completionHandler completion handler of freeze status change
///
- (void)changeFreeze:(BOOL)freeze :(void (^ _Nullable)(BOOL))completionHandler;
- (void)didReceiveError:(NSString * _Nullable)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SBUModerationsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit17SBUNewMessageInfo")
@interface SBUNewMessageInfo : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
- (void)onClickNewMessageInfo;
@end

@class SBDMember;

SWIFT_CLASS("_TtC13SendBirdUIKit12SBUStringSet")
@interface SBUStringSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Cancel;)
+ (NSString * _Nonnull)Cancel SWIFT_WARN_UNUSED_RESULT;
+ (void)setCancel:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull OK;)
+ (NSString * _Nonnull)OK SWIFT_WARN_UNUSED_RESULT;
+ (void)setOK:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Retry;)
+ (NSString * _Nonnull)Retry SWIFT_WARN_UNUSED_RESULT;
+ (void)setRetry:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Save;)
+ (NSString * _Nonnull)Save SWIFT_WARN_UNUSED_RESULT;
+ (void)setSave:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Copy;)
+ (NSString * _Nonnull)Copy SWIFT_WARN_UNUSED_RESULT;
+ (void)setCopy:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Delete;)
+ (NSString * _Nonnull)Delete SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelete:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Edit;)
+ (NSString * _Nonnull)Edit SWIFT_WARN_UNUSED_RESULT;
+ (void)setEdit:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Remove;)
+ (NSString * _Nonnull)Remove SWIFT_WARN_UNUSED_RESULT;
+ (void)setRemove:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Camera;)
+ (NSString * _Nonnull)Camera SWIFT_WARN_UNUSED_RESULT;
+ (void)setCamera:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull PhotoVideoLibrary;)
+ (NSString * _Nonnull)PhotoVideoLibrary SWIFT_WARN_UNUSED_RESULT;
+ (void)setPhotoVideoLibrary:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Document;)
+ (NSString * _Nonnull)Document SWIFT_WARN_UNUSED_RESULT;
+ (void)setDocument:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Loading;)
+ (NSString * _Nonnull)Loading SWIFT_WARN_UNUSED_RESULT;
+ (void)setLoading:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Invite;)
+ (NSString * _Nonnull)Invite SWIFT_WARN_UNUSED_RESULT;
+ (void)setInvite:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Alert_Delete;)
+ (NSString * _Nonnull)Alert_Delete SWIFT_WARN_UNUSED_RESULT;
+ (void)setAlert_Delete:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_Yesterday;)
+ (NSString * _Nonnull)Date_Yesterday SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Yesterday:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Year)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Year SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Year:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Day)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Day SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Day:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Month)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Month SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Month:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Hour)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Hour SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Hour:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Min)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Min SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Min:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_Ago;)
+ (NSString * _Nonnull)Date_Ago SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Ago:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_On;)
+ (NSString * _Nonnull)Date_On SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_On:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelList_Header_Title;)
+ (NSString * _Nonnull)ChannelList_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelList_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelList_Last_File_Message;)
+ (NSString * _Nonnull)ChannelList_Last_File_Message SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelList_Last_File_Message:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Name_Default;)
+ (NSString * _Nonnull)Channel_Name_Default SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Name_Default:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Name_No_Members;)
+ (NSString * _Nonnull)Channel_Name_No_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Name_No_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Header_LastSeen;)
+ (NSString * _Nonnull)Channel_Header_LastSeen SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Header_LastSeen:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Channel_Header_Typing)(NSArray<SBDMember *> * _Nonnull);)
+ (NSString * _Nonnull (^ _Nonnull)(NSArray<SBDMember *> * _Nonnull))Channel_Header_Typing SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Header_Typing:(NSString * _Nonnull (^ _Nonnull)(NSArray<SBDMember *> * _Nonnull))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Success_Download_file;)
+ (NSString * _Nonnull)Channel_Success_Download_file SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Success_Download_file:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_New_Message_File;)
+ (NSString * _Nonnull)Channel_New_Message_File SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_New_Message_File:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Channel_New_Message)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Channel_New_Message SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_New_Message:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_State_Banner_Frozen;)
+ (NSString * _Nonnull)Channel_State_Banner_Frozen SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_State_Banner_Frozen:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Header_Title;)
+ (NSString * _Nonnull)ChannelSettings_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Change_Name;)
+ (NSString * _Nonnull)ChannelSettings_Change_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Change_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Change_Image;)
+ (NSString * _Nonnull)ChannelSettings_Change_Image SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Change_Image:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Enter_New_Name;)
+ (NSString * _Nonnull)ChannelSettings_Enter_New_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Enter_New_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Notifications;)
+ (NSString * _Nonnull)ChannelSettings_Notifications SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Notifications:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Members_Title;)
+ (NSString * _Nonnull)ChannelSettings_Members_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Members_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull ChannelSettings_Members)(NSUInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSUInteger))ChannelSettings_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Members:(NSString * _Nonnull (^ _Nonnull)(NSUInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Leave;)
+ (NSString * _Nonnull)ChannelSettings_Leave SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Leave:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Moderations;)
+ (NSString * _Nonnull)ChannelSettings_Moderations SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Moderations:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Operators;)
+ (NSString * _Nonnull)ChannelSettings_Operators SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Operators:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Muted_Members;)
+ (NSString * _Nonnull)ChannelSettings_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Banned_Members;)
+ (NSString * _Nonnull)ChannelSettings_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Freeze_Channel;)
+ (NSString * _Nonnull)ChannelSettings_Freeze_Channel SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Freeze_Channel:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Placeholder;)
+ (NSString * _Nonnull)MessageInput_Text_Placeholder SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Placeholder:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Unavailable;)
+ (NSString * _Nonnull)MessageInput_Text_Unavailable SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Unavailable:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Muted;)
+ (NSString * _Nonnull)MessageInput_Text_Muted SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Muted:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Edited;)
+ (NSString * _Nonnull)Message_Edited SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Edited:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_System;)
+ (NSString * _Nonnull)Message_System SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_System:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Unknown_Title;)
+ (NSString * _Nonnull)Message_Unknown_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Unknown_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Unknown_Desctiption;)
+ (NSString * _Nonnull)Message_Unknown_Desctiption SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Unknown_Desctiption:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Channels;)
+ (NSString * _Nonnull)Empty_No_Channels SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Channels:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Messages;)
+ (NSString * _Nonnull)Empty_No_Messages SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Messages:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Users;)
+ (NSString * _Nonnull)Empty_No_Users SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Users:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Muted_Members;)
+ (NSString * _Nonnull)Empty_No_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Banned_Members;)
+ (NSString * _Nonnull)Empty_No_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_Wrong;)
+ (NSString * _Nonnull)Empty_Wrong SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_Wrong:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull CreateChannel_Create)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))CreateChannel_Create SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Create:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CreateChannel_Header_Title;)
+ (NSString * _Nonnull)CreateChannel_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CreateChannel_Header_Select_Members;)
+ (NSString * _Nonnull)CreateChannel_Header_Select_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Header_Select_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull InviteChannel_Header_Title;)
+ (NSString * _Nonnull)InviteChannel_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull InviteChannel_Header_Select_Members;)
+ (NSString * _Nonnull)InviteChannel_Header_Select_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Header_Select_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull InviteChannel_Invite)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))InviteChannel_Invite SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Invite:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull InviteChannel_Add)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))InviteChannel_Add SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Add:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Header_Title;)
+ (NSString * _Nonnull)MemberList_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Me;)
+ (NSString * _Nonnull)MemberList_Me SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Me:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Ban;)
+ (NSString * _Nonnull)MemberList_Ban SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Ban:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Unban;)
+ (NSString * _Nonnull)MemberList_Unban SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Unban:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Mute;)
+ (NSString * _Nonnull)MemberList_Mute SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Mute:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Unmute;)
+ (NSString * _Nonnull)MemberList_Unmute SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Unmute:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Dismiss_Operator;)
+ (NSString * _Nonnull)MemberList_Dismiss_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Dismiss_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Promote_Operator;)
+ (NSString * _Nonnull)MemberList_Promote_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Promote_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Members;)
+ (NSString * _Nonnull)MemberList_Title_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Operators;)
+ (NSString * _Nonnull)MemberList_Title_Operators SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Operators:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Muted_Members;)
+ (NSString * _Nonnull)MemberList_Title_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Banned_Members;)
+ (NSString * _Nonnull)MemberList_Title_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull User_No_Name;)
+ (NSString * _Nonnull)User_No_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setUser_No_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull User_Operator;)
+ (NSString * _Nonnull)User_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setUser_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_Group;)
+ (NSString * _Nonnull)ChannelType_Group SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_Group:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_SuperGroup;)
+ (NSString * _Nonnull)ChannelType_SuperGroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_SuperGroup:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_Broadcast;)
+ (NSString * _Nonnull)ChannelType_Broadcast SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_Broadcast:(NSString * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SBUUserListTheme;
@class SBUUserCellTheme;

SWIFT_CLASS("_TtC13SendBirdUIKit8SBUTheme")
@interface SBUTheme : NSObject
- (nonnull instancetype)initWithChannelListTheme:(SBUChannelListTheme * _Nonnull)channelListTheme channelCellTheme:(SBUChannelCellTheme * _Nonnull)channelCellTheme channelTheme:(SBUChannelTheme * _Nonnull)channelTheme messageInputTheme:(SBUMessageInputTheme * _Nonnull)messageInputTheme messageCellTheme:(SBUMessageCellTheme * _Nonnull)messageCellTheme userListTheme:(SBUUserListTheme * _Nonnull)userListTheme userCellTheme:(SBUUserCellTheme * _Nonnull)userCellTheme channelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme componentTheme:(SBUComponentTheme * _Nonnull)componentTheme OBJC_DESIGNATED_INITIALIZER;
+ (void)setWithTheme:(SBUTheme * _Nonnull)theme;
+ (void)setChannelListWithChannelListTheme:(SBUChannelListTheme * _Nonnull)channelListTheme channelCellTheme:(SBUChannelCellTheme * _Nonnull)channelCellTheme;
+ (void)setChannelWithChannelTheme:(SBUChannelTheme * _Nonnull)channelTheme messageCellTheme:(SBUMessageCellTheme * _Nonnull)messageCellTheme messageInputTheme:(SBUMessageInputTheme * _Nonnull)messageInputTheme componentTheme:(SBUComponentTheme * _Nonnull)componentTheme;
+ (void)setUserListWithUserListTheme:(SBUUserListTheme * _Nonnull)userListTheme userCellTheme:(SBUUserCellTheme * _Nonnull)userCellTheme;
+ (void)setChannelSettingsWithChannelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUTheme * _Nonnull dark;)
+ (SBUTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUTheme * _Nonnull light;)
+ (SBUTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelListTheme * _Nonnull channelListTheme;)
+ (SBUChannelListTheme * _Nonnull)channelListTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelListTheme:(SBUChannelListTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelCellTheme * _Nonnull channelCellTheme;)
+ (SBUChannelCellTheme * _Nonnull)channelCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelCellTheme:(SBUChannelCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelTheme * _Nonnull channelTheme;)
+ (SBUChannelTheme * _Nonnull)channelTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTheme:(SBUChannelTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUMessageInputTheme * _Nonnull messageInputTheme;)
+ (SBUMessageInputTheme * _Nonnull)messageInputTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInputTheme:(SBUMessageInputTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUMessageCellTheme * _Nonnull messageCellTheme;)
+ (SBUMessageCellTheme * _Nonnull)messageCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageCellTheme:(SBUMessageCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUserListTheme * _Nonnull userListTheme;)
+ (SBUUserListTheme * _Nonnull)userListTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserListTheme:(SBUUserListTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUserCellTheme * _Nonnull userCellTheme;)
+ (SBUUserCellTheme * _Nonnull)userCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserCellTheme:(SBUUserCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelSettingsTheme * _Nonnull channelSettingsTheme;)
+ (SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUComponentTheme * _Nonnull componentTheme;)
+ (SBUComponentTheme * _Nonnull)componentTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setComponentTheme:(SBUComponentTheme * _Nonnull)newValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit7SBUUser")
@interface SBUUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
@property (nonatomic, readonly, copy) NSString * _Nullable nickname;
@property (nonatomic, readonly, copy) NSString * _Nullable profileUrl;
/// This is an operator state property.
/// since:
/// 1.2.0
@property (nonatomic, readonly) BOOL isOperator;
/// This is a muted state property.
/// since:
/// 1.2.0
@property (nonatomic, readonly) BOOL isMuted;
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId nickname:(NSString * _Nullable)nickname profileUrl:(NSString * _Nullable)profileUrl OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUser:(SBDUser * _Nonnull)user OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUser:(SBUUser * _Nonnull)user isOperator:(BOOL)isOperator isMuted:(BOOL)isMuted OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMember:(SBDMember * _Nonnull)member OBJC_DESIGNATED_INITIALIZER;
/// This method returns the default value if there is no alias value.
/// since:
/// 1.0.1
- (NSString * _Nonnull)refinedNickname SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit11SBUUserCell")
@interface SBUUserCell : UITableViewCell
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)onClickMoreMenu;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16SBUUserCellTheme")
@interface SBUUserCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserCellTheme * _Nonnull light;)
+ (SBUUserCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserCellTheme * _Nonnull dark;)
+ (SBUUserCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor checkboxOnColor:(UIColor * _Nonnull)checkboxOnColor checkboxOffColor:(UIColor * _Nonnull)checkboxOffColor userNameTextColor:(UIColor * _Nonnull)userNameTextColor userNameFont:(UIFont * _Nonnull)userNameFont userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor mutedStateBackgroundColor:(UIColor * _Nonnull)mutedStateBackgroundColor mutedStateIconColor:(UIColor * _Nonnull)mutedStateIconColor subInfoTextColor:(UIColor * _Nonnull)subInfoTextColor subInfoFont:(UIFont * _Nonnull)subInfoFont moreButtonColor:(UIColor * _Nonnull)moreButtonColor moreButtonDisabledColor:(UIColor * _Nonnull)moreButtonDisabledColor separateColor:(UIColor * _Nonnull)separateColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull checkboxOnColor;
@property (nonatomic, strong) UIColor * _Nonnull checkboxOffColor;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull mutedStateBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull mutedStateIconColor;
@property (nonatomic, strong) UIColor * _Nonnull subInfoTextColor;
@property (nonatomic, strong) UIFont * _Nonnull subInfoFont;
@property (nonatomic, strong) UIColor * _Nonnull moreButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull moreButtonDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull separateColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16SBUUserListTheme")
@interface SBUUserListTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserListTheme * _Nonnull light;)
+ (SBUUserListTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserListTheme * _Nonnull dark;)
+ (SBUUserListTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationShadowColor:(UIColor * _Nonnull)navigationShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor rightBarButtonSelectedTintColor:(UIColor * _Nonnull)rightBarButtonSelectedTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonSelectedTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUUserMessageCell")
@interface SBUUserMessageCell : SBUContentBaseMessageCell
@property (nonatomic, strong) UIView * _Nonnull messageTextView;
@property (nonatomic, readonly, strong) SBDUserMessage * _Nullable userMessage;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDUserMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView receiptState:(enum SBUMessageReceiptState)receiptState groupPosition:(enum MessageGroupPosition)groupPosition withTextView:(BOOL)withTextView;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface UIImage (SWIFT_EXTENSION(SendBirdUIKit))
- (UIImage * _Nonnull)sbu_withTintColor:(UIColor * _Nullable)tintColor SWIFT_WARN_UNUSED_RESULT;
@end










@interface UINavigationController (SWIFT_EXTENSION(SendBirdUIKit))
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
@end




@interface UIView (SWIFT_EXTENSION(SendBirdUIKit))
+ (UINib * _Nonnull)sbu_loadNib SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nonnull)sbu_loadViewFromNib SWIFT_WARN_UNUSED_RESULT;
@end





/// This is an enumeration used to display <code>UserCell</code> by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, UserListType, open) {
  UserListTypeNone = 0,
  UserListTypeCreateChannel = 1,
  UserListTypeChannelMembers = 2,
  UserListTypeInviteUser = 3,
  UserListTypeReaction = 4,
  UserListTypeOperators = 5,
  UserListTypeMutedMembers = 6,
  UserListTypeBannedMembers = 7,
};


SWIFT_CLASS("_TtC13SendBirdUIKit12UserNameView")
@interface UserNameView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import SendBirdSDK;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SendBirdUIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, ChannelEditType, open) {
  ChannelEditTypeName = 0,
  ChannelEditTypeImage = 1,
};

/// This is an enumeration used in <code>InviteUserViewController</code> to load user list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelInviteListType, open) {
  ChannelInviteListTypeNone = 0,
  ChannelInviteListTypeUsers = 1,
  ChannelInviteListTypeOperators = 2,
};

/// This is an enumeration used in <code>MemberListViewController</code> to load member list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelMemberListType, open) {
  ChannelMemberListTypeNone = 0,
  ChannelMemberListTypeChannelMembers = 1,
  ChannelMemberListTypeOperators = 2,
  ChannelMemberListTypeMutedMembers = 3,
  ChannelMemberListTypeBannedMembers = 4,
};

/// This is an enumeration used to handling action and display by type in <code>ChannelSettingsViewController</code> and <code>ChannelSettingCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelSettingItemType, open) {
  ChannelSettingItemTypeModerations = 0,
  ChannelSettingItemTypeNotifications = 1,
  ChannelSettingItemTypeMembers = 2,
  ChannelSettingItemTypeLeave = 3,
};

/// This is an enumeration for channel type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelType, open) {
  ChannelTypeGroup = 0,
  ChannelTypeSupergroup = 1,
  ChannelTypeBroadcast = 2,
};

typedef SWIFT_ENUM(NSInteger, EmptyViewType, open) {
  EmptyViewTypeNone = 0,
  EmptyViewTypeNoChannels = 1,
  EmptyViewTypeNoMessages = 2,
  EmptyViewTypeNoMutedMembers = 3,
  EmptyViewTypeNoBannedMembers = 4,
  EmptyViewTypeError = 5,
};

typedef SWIFT_ENUM(NSInteger, FailedMessageOption, open) {
  FailedMessageOptionRetry = 0,
  FailedMessageOptionRemove = 1,
};

typedef SWIFT_ENUM(uint8_t, LogType, open) {
  LogTypeNone = 0b00000000,
  LogTypeError = 0b00000001,
  LogTypeWarning = 0b00000010,
  LogTypeInfo = 0b00000100,
  LogTypeAll = 0b00000111,
};

typedef SWIFT_ENUM(NSInteger, MediaResourceType, open) {
  MediaResourceTypeCamera = 0,
  MediaResourceTypeLibrary = 1,
  MediaResourceTypeDocument = 2,
  MediaResourceTypeUnknown = 3,
};

typedef SWIFT_ENUM(NSInteger, MemberListType, open) {
  MemberListTypeNone = 0,
  MemberListTypeCreateChannel = 1,
  MemberListTypeChannelMembers = 2,
  MemberListTypeInviteUser = 3,
  MemberListTypeReaction = 4,
};

typedef SWIFT_ENUM(NSInteger, MessageEditItem, open) {
  MessageEditItemCopy = 0,
  MessageEditItemEdit = 1,
  MessageEditItemDelete = 2,
};

typedef SWIFT_ENUM(NSInteger, MessageFileType, open) {
  MessageFileTypeImage = 0,
  MessageFileTypeVideo = 1,
  MessageFileTypeAudio = 2,
  MessageFileTypePdf = 3,
  MessageFileTypeEtc = 4,
};

typedef SWIFT_ENUM(NSInteger, MessageGroupPosition, open) {
  MessageGroupPositionNone = 0,
  MessageGroupPositionTop = 1,
  MessageGroupPositionMiddle = 2,
  MessageGroupPositionBottom = 3,
};

typedef SWIFT_ENUM(NSInteger, MessagePosition, open) {
  MessagePositionLeft = 0,
  MessagePositionRight = 1,
  MessagePositionCenter = 2,
};

@class NSCoder;

SWIFT_CLASS("_TtC13SendBirdUIKit18MessageProfileView")
@interface MessageProfileView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16MessageStateView")
@interface MessageStateView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end

/// This is an enumeration used to handling action and display by type in <code>MederationsViewController</code> and <code>ModerationCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ModerationItemType, open) {
  ModerationItemTypeOperators = 0,
  ModerationItemTypeMutedMembers = 1,
  ModerationItemTypeBannedMembers = 2,
  ModerationItemTypeFreezeChannel = 3,
};

@class SBUUser;

@interface NSArray<ObjectType> (SWIFT_EXTENSION(SendBirdUIKit))
- (NSArray<NSString *> * _Nonnull)sbu_getUserIds SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)sbu_getUserNicknames SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SBUUser *> * _Nonnull)sbu_convertUserList SWIFT_WARN_UNUSED_RESULT;
@end




@interface NSObject (SWIFT_EXTENSION(SendBirdUIKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sbu_className;)
+ (NSString * _Nonnull)sbu_className SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull sbu_className;
@end

@class SBDBaseMessage;
enum SBUMessageReceiptState : NSInteger;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUBaseMessageCell")
@interface SBUBaseMessageCell : UITableViewCell
@property (nonatomic, strong) SBDBaseMessage * _Nonnull message;
@property (nonatomic) enum MessagePosition position;
@property (nonatomic) enum MessageGroupPosition groupPosition;
@property (nonatomic) enum SBUMessageReceiptState receiptState;
@property (nonatomic, strong) UIView * _Nonnull messageContentView;
@property (nonatomic, strong) UIView * _Nonnull dateView;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
/// This function configure a cell using informations.
/// \param message Message object
///
/// \param position Cell position (left / right / center)
///
/// \param hideDateView Hide or expose date information
///
/// \param receiptState ReadReceipt state
///
- (void)configureWithMessage:(SBDBaseMessage * _Nonnull)message position:(enum MessagePosition)position hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)prepareForReuse;
@end

@class UILabel;
@class SBDAdminMessage;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit19SBUAdminMessageCell")
@interface SBUAdminMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UILabel * _Nonnull messageLabel;
- (void)setupViews;
- (void)setupAutolayout;
- (void)layoutSubviews;
- (void)configure:(SBDAdminMessage * _Nonnull)message hideDateView:(BOOL)hideDateView;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit12SBUAvailable")
@interface SBUAvailable : NSObject
/// This method checks if the application support super group channel.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if super group channel can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportSuperGroupChannel SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support broadcast channel.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if broadcast channel can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportBroadcastChannel SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support reactions.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if the reaction operation can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportReactions SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support og metadata.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if the og metadata can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportOgTag SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit18SBUBaseChannelCell")
@interface SBUBaseChannelCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC13SendBirdUIKit19SBUChannelCellTheme")
@interface SBUChannelCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelCellTheme * _Nonnull light;)
+ (SBUChannelCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelCellTheme * _Nonnull dark;)
+ (SBUChannelCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor titleFont:(UIFont * _Nonnull)titleFont titleTextColor:(UIColor * _Nonnull)titleTextColor memberCountFont:(UIFont * _Nonnull)memberCountFont memberCountTextColor:(UIColor * _Nonnull)memberCountTextColor lastUpdatedTimeFont:(UIFont * _Nonnull)lastUpdatedTimeFont lastUpdatedTimeTextColor:(UIColor * _Nonnull)lastUpdatedTimeTextColor messageFont:(UIFont * _Nonnull)messageFont messageTextColor:(UIColor * _Nonnull)messageTextColor broadcastMarkTintColor:(UIColor * _Nonnull)broadcastMarkTintColor freezeStateTintColor:(UIColor * _Nonnull)freezeStateTintColor unreadCountBackgroundColor:(UIColor * _Nonnull)unreadCountBackgroundColor unreadCountTextColor:(UIColor * _Nonnull)unreadCountTextColor unreadCountFont:(UIFont * _Nonnull)unreadCountFont separatorLineColor:(UIColor * _Nonnull)separatorLineColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleTextColor;
@property (nonatomic, strong) UIFont * _Nonnull memberCountFont;
@property (nonatomic, strong) UIColor * _Nonnull memberCountTextColor;
@property (nonatomic, strong) UIFont * _Nonnull lastUpdatedTimeFont;
@property (nonatomic, strong) UIColor * _Nonnull lastUpdatedTimeTextColor;
@property (nonatomic, strong) UIFont * _Nonnull messageFont;
@property (nonatomic, strong) UIColor * _Nonnull messageTextColor;
@property (nonatomic, strong) UIColor * _Nonnull broadcastMarkTintColor;
@property (nonatomic, strong) UIColor * _Nonnull freezeStateTintColor;
@property (nonatomic, strong) UIColor * _Nonnull unreadCountBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull unreadCountTextColor;
@property (nonatomic, strong) UIFont * _Nonnull unreadCountFont;
@property (nonatomic, strong) UIColor * _Nonnull separatorLineColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit19SBUChannelListTheme")
@interface SBUChannelListTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelListTheme * _Nonnull light;)
+ (SBUChannelListTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelListTheme * _Nonnull dark;)
+ (SBUChannelListTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationBarShadowColor:(UIColor * _Nonnull)navigationBarShadowColor backgroundColor:(UIColor * _Nonnull)backgroundColor notificationOnBackgroundColor:(UIColor * _Nonnull)notificationOnBackgroundColor notificationOnTintColor:(UIColor * _Nonnull)notificationOnTintColor notificationOffBackgroundColor:(UIColor * _Nonnull)notificationOffBackgroundColor notificationOffTintColor:(UIColor * _Nonnull)notificationOffTintColor leaveBackgroundColor:(UIColor * _Nonnull)leaveBackgroundColor leaveTintColor:(UIColor * _Nonnull)leaveTintColor alertBackgroundColor:(UIColor * _Nonnull)alertBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOnBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOnTintColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOffBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOffTintColor;
@property (nonatomic, strong) UIColor * _Nonnull leaveBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leaveTintColor;
@property (nonatomic, strong) UIColor * _Nonnull alertBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIBarButtonItem;
@class SBDGroupChannel;
@class SBDGroupChannelListQuery;
@class NSBundle;
@class UINib;

SWIFT_CLASS("_TtC13SendBirdUIKit28SBUChannelListViewController")
@interface SBUChannelListViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// This is a function that allows you to select the channel type when creating a channel.
/// If set to the nil value, it is moved to groupChannel creation.
/// note:
/// Type: GroupChannel / SuperGroupChannel / BroadcastChannel
/// since:
/// 1.2.0
@property (nonatomic, strong) UIView * _Nullable createChannelTypeSelector;
/// This object has a list of all channels.
@property (nonatomic, readonly, copy) NSArray<SBDGroupChannel *> * _Nonnull channelList;
/// This is a query used to get a list of channels. Only getter is provided, please use initialization function to set query directly.
/// note:
/// For query properties, see <code>SBDGroupChannelListQuery</code> class.
/// since:
/// 1.0.11
@property (nonatomic, readonly, strong) SBDGroupChannelListQuery * _Nullable channelListQuery;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelListViewController()'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
/// You can initialize the class through this function.
/// If you have <code>channelListQuery</code>, please set it. If not set, it is used as default value.
/// See the example below for query generation.
/// \code
///     let query = SBDGroupChannel.createMyGroupChannelListQuery()
///     query?.includeEmptyChannel = false
///     query?.includeFrozenChannel = true
///     ...
///
/// \endcodesince:
/// 1.0.11
/// \param channelListQuery Your own <code>SBDGroupChannelListQuery</code> object
///
- (nonnull instancetype)initWithChannelListQuery:(SBDGroupChannelListQuery * _Nullable)channelListQuery OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// Changes push trigger option on a channel.
/// since:
/// 1.0.9
/// \param option Push trigger option to change
///
/// \param channel Channel to change option
///
/// \param completionHandler Completion handler
///
- (void)changePushTriggerOptionWithOption:(SBDGroupChannelPushTriggerOption)option channel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// Leaves the channel.
/// since:
/// 1.0.9
/// \param channel Channel to leave
///
/// \param completionHandler Completion handler
///
- (void)leaveChannel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the channelViewController.
/// If you want to use a custom channelViewController, override it and implement it.
/// \param channelUrl channel url for use in channelViewController.
///
- (void)showChannelWithChannelUrl:(NSString * _Nonnull)channelUrl;
/// This is a function that shows the channel type selector when a supergroup/broadcast channel can be set.
/// <ul>
///   <li>
///     If both types cannot be set, it moves directly to the group channel creation viewController.
///   </li>
///   <li>
///     If you want to use a custom createChannelTypeSelector or createChannel action, override it and implement it.
///   </li>
/// </ul>
/// since:
/// 1.2.0
- (void)showCreateChannelTypeSelector;
/// This is a function that shows the channel creation viewController with channel type.
/// If you want to use a custom createChannelViewController, override it and implement it.
/// \param type Using the Specified Type in CreateChannelViewController (default: <code>.group</code>)
///
- (void)showCreateChannelWithType:(enum ChannelType)type;
/// Used to register a custom cell as a base cell based on SBUBaseChannelCell.
/// \param channelCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithChannelCell:(SBUBaseChannelCell * _Nonnull)channelCell nib:(UINib * _Nullable)nib;
/// Used to register a custom cell as a additional cell based on SBUBaseChannelCell.
/// \param customCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithCustomCell:(SBUBaseChannelCell * _Nullable)customCell nib:(UINib * _Nullable)nib;
/// This is used to check the loading status and control loading indicator.
/// \param loadingState Set to true when the list is loading.
///
/// \param showIndicator If true, the loading indicator is started, and if false, the indicator is stopped.
///
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator;
/// If an error occurs in viewController, a message is sent through here.
/// If necessary, override to handle errors.
/// \param message error message
///
- (void)didReceiveError:(NSString * _Nullable)message;
@end


SWIFT_PROTOCOL("_TtP13SendBirdUIKit20SBUEmptyViewDelegate_")
@protocol SBUEmptyViewDelegate <NSObject>
- (void)didSelectRetry;
@end


@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end


/// This delegate is used in the class to handle the action.
SWIFT_PROTOCOL("_TtP13SendBirdUIKit36SBUCreateChannelTypeSelectorDelegate_")
@protocol SBUCreateChannelTypeSelectorDelegate
/// This function notifies the <code>SBUchannelListViewController</code> when closing the selector.
- (void)didSelectCloseSelector;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create group channel menu.
- (void)didSelectCreateGroupChannel;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create super group channel menu.
- (void)didSelectCreateSuperGroupChannel;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create broadcast channel menu.
- (void)didSelectCreateBroadcastChannel;
@end


@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUCreateChannelTypeSelectorDelegate>
- (void)didSelectCloseSelector;
- (void)didSelectCreateGroupChannel;
- (void)didSelectCreateSuperGroupChannel;
- (void)didSelectCreateBroadcastChannel;
@end

@class UITableView;
@class UISwipeActionsConfiguration;
@class UITableViewRowAction;

@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
- (NSArray<UITableViewRowAction *> * _Nullable)tableView:(UITableView * _Nonnull)tableView editActionsForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,deprecated=13.0);
@end

@class SBDUser;
@class SBDBaseChannel;

@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate, SBDConnectionDelegate>
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)didSucceedReconnection;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit23SBUChannelSettingsTheme")
@interface SBUChannelSettingsTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelSettingsTheme * _Nonnull light;)
+ (SBUChannelSettingsTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelSettingsTheme * _Nonnull dark;)
+ (SBUChannelSettingsTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationShadowColor:(UIColor * _Nonnull)navigationShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor cellTextFont:(UIFont * _Nonnull)cellTextFont cellTextColor:(UIColor * _Nonnull)cellTextColor cellSubTextFont:(UIFont * _Nonnull)cellSubTextFont cellSubTextColor:(UIColor * _Nonnull)cellSubTextColor cellSwitchColor:(UIColor * _Nonnull)cellSwitchColor cellSeparateColor:(UIColor * _Nonnull)cellSeparateColor cellTypeIconTintColor:(UIColor * _Nonnull)cellTypeIconTintColor cellArrowIconTintColor:(UIColor * _Nonnull)cellArrowIconTintColor cellLeaveIconColor:(UIColor * _Nonnull)cellLeaveIconColor userNameFont:(UIFont * _Nonnull)userNameFont userNameTextColor:(UIColor * _Nonnull)userNameTextColor itemTextColor:(UIColor * _Nonnull)itemTextColor itemColor:(UIColor * _Nonnull)itemColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull cellTextFont;
@property (nonatomic, strong) UIColor * _Nonnull cellTextColor;
@property (nonatomic, strong) UIFont * _Nonnull cellSubTextFont;
@property (nonatomic, strong) UIColor * _Nonnull cellSubTextColor;
@property (nonatomic, strong) UIColor * _Nonnull cellSwitchColor;
@property (nonatomic, strong) UIColor * _Nonnull cellSeparateColor;
@property (nonatomic, strong) UIColor * _Nonnull cellTypeIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull cellArrowIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull cellLeaveIconColor;
@property (nonatomic, strong) UIColor * _Nonnull cellNotificationIconColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellTypeIconTintColor");
@property (nonatomic, strong) UIColor * _Nonnull cellMemberIconColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellTypeIconTintColor");
@property (nonatomic, strong) UIColor * _Nonnull cellMemberButtonColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellArrowIconTintColor");
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIColor * _Nonnull itemTextColor;
@property (nonatomic, strong) UIColor * _Nonnull itemColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;
@class SBDGroupChannelParams;

SWIFT_CLASS("_TtC13SendBirdUIKit32SBUChannelSettingsViewController")
@interface SBUChannelSettingsViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, strong) UIView * _Nullable userInfoView;
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
/// One of two must be set.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithChannelUrl:'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithChannelUrl:'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
- (void)updateChannelInfoWithChannelName:(NSString * _Nullable)channelName SWIFT_DEPRECATED_MSG("deprecated in 1.0.9", "updateChannelWithChannelName:coverImage:");
/// Used to update the channel name or cover image. <code>channelName</code> and<code> coverImage</code> are used for updating only the set values.
/// since:
/// 1.0.9
/// \param channelName Channel name to update
///
/// \param coverImage Cover image to update
///
- (void)updateChannelWithChannelName:(NSString * _Nullable)channelName coverImage:(UIImage * _Nullable)coverImage;
/// Updates the channel with channelParams.
/// You can update a channel by setting various properties of ChannelParams.
/// since:
/// 1.0.9
/// \param params <code>SBDGroupChannelParams</code> class object
///
- (void)updateChannelWithParams:(SBDGroupChannelParams * _Nonnull)params;
/// Changes push trigger option on channel.
/// \param isOn notification status
///
- (void)changeNotificationWithIsOn:(BOOL)isOn;
/// Leaves the channel.
- (void)leaveChannel;
/// If you want to use a custom memberListViewController, override it and implement it.
- (void)showMemberList;
/// If you want to use a custom moderationsViewController, override it and implement it.
/// since:
/// 1.2.0
- (void)showModerationList;
/// Open the channel image selection menu.
- (void)selectChannelImage;
/// Open the channel name change popup.
- (void)changeChannelName;
/// If an error occurs in viewController, a message is sent through here.
/// If necessary, override to handle errors.
/// \param message error message
///
- (void)didReceiveError:(NSString * _Nullable)message;
@end



@class UIImagePickerController;

@interface SBUChannelSettingsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIImagePickerControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
@end


@interface SBUChannelSettingsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit15SBUChannelTheme")
@interface SBUChannelTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelTheme * _Nonnull light;)
+ (SBUChannelTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelTheme * _Nonnull dark;)
+ (SBUChannelTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationBarShadowColor:(UIColor * _Nonnull)navigationBarShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor removeItemColor:(UIColor * _Nonnull)removeItemColor cancelItemColor:(UIColor * _Nonnull)cancelItemColor alertRemoveColor:(UIColor * _Nonnull)alertRemoveColor alertCancelColor:(UIColor * _Nonnull)alertCancelColor menuTextColor:(UIColor * _Nonnull)menuTextColor channelStateBannerFont:(UIFont * _Nonnull)channelStateBannerFont channelStateBannerTextColor:(UIColor * _Nonnull)channelStateBannerTextColor channelStateBannerBackgroundColor:(UIColor * _Nonnull)channelStateBannerBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull removeItemColor;
@property (nonatomic, strong) UIColor * _Nonnull cancelItemColor;
@property (nonatomic, strong) UIColor * _Nonnull alertRemoveColor;
@property (nonatomic, strong) UIColor * _Nonnull alertCancelColor;
@property (nonatomic, strong) UIColor * _Nonnull menuTextColor;
@property (nonatomic, strong) UIFont * _Nonnull channelStateBannerFont;
@property (nonatomic, strong) UIColor * _Nonnull channelStateBannerTextColor;
@property (nonatomic, strong) UIColor * _Nonnull channelStateBannerBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SBUMessageInputView;
@class SBDMessageListParams;
@class SBDUserMessageParams;
@class SBDFileMessageParams;
@class SBDUserMessage;
@class UIScrollView;

SWIFT_CLASS("_TtC13SendBirdUIKit24SBUChannelViewController")
@interface SBUChannelViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, strong) UIView * _Nullable newMessageInfoView;
@property (nonatomic, strong) SBUMessageInputView * _Nonnull messageInputView;
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable channelStateBanner;
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// This object is used to import a list of messages, send messages, modify messages, and so on, and is created during initialization.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
/// This object has a list of all success messages synchronized with the server.
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull messageList;
/// This object that has resendable messages, including <code>pending messages</code> and <code>failed messages</code>.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, SBDBaseMessage *> * _Nonnull resendableMessages;
/// This is a params used to get a list of messages. Only getter is provided, please use initialization function to set params directly.
/// note:
/// For params properties, see <code>SBDMessageListParams</code> class.
/// since:
/// 1.0.11
@property (nonatomic, readonly, strong) SBDMessageListParams * _Nonnull messageListParams;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelViewController.init(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeReplies = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>nextResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeReplies = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>nextResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
/// Sends a user message with only text.
/// since:
/// 1.0.9
/// \param text String value
///
- (void)sendUserMessageWithText:(NSString * _Nonnull)text;
/// Sends a user messag with messageParams.
/// You can send a message by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param messageParams <code>SBDUserMessageParams</code> class object
///
- (void)sendUserMessageWithMessageParams:(SBDUserMessageParams * _Nonnull)messageParams;
/// Sends a file message with file data, file name, mime type.
/// since:
/// 1.0.9
/// \param fileData <code>Data</code> class object
///
/// \param fileName file name. Used when displayed in channel list.
///
/// \param mimeType file’s mime type.
///
- (void)sendFileMessageWithFileData:(NSData * _Nonnull)fileData fileName:(NSString * _Nonnull)fileName mimeType:(NSString * _Nonnull)mimeType;
/// Sends a file message with messageParams.
/// You can send a file message by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param messageParams <code>SBDFileMessageParams</code> class object
///
- (void)sendFileMessageWithMessageParams:(SBDFileMessageParams * _Nonnull)messageParams;
/// Resends a message with failedMessage object.
/// since:
/// 1.0.9
/// \param failedMessage <code>SBDBaseMessage</code> class based failed object
///
- (void)resendMessageWithFailedMessage:(SBDBaseMessage * _Nonnull)failedMessage;
/// Updates a user message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDUserMessage</code> object to update
///
/// \param text String to be updated
///
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message text:(NSString * _Nonnull)text;
/// Updates a user message with message object and messageParams.
/// You can update messages by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param message <code>SBDUserMessage</code> object to update
///
/// \param messageParams <code>SBDUserMessageParams</code> class object
///
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message messageParams:(SBDUserMessageParams * _Nonnull)messageParams;
/// Deletes a message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDBaseMessage</code> based class object
///
- (void)deleteMessageWithMessage:(SBDBaseMessage * _Nonnull)message;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function is used to add or delete reactions.
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object to update
///
/// \param emojiKey set emoji key
///
/// \param didSelect set reaction state
///
- (void)setReactionWithMessage:(SBDBaseMessage * _Nonnull)message emojiKey:(NSString * _Nonnull)emojiKey didSelect:(BOOL)didSelect;
/// This function increases the new message count.
- (void)increaseNewMessageCount;
- (void)sendImageFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)sendVideoFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)sendDocumentFileMessageWithDocumentUrls:(NSArray<NSURL *> * _Nonnull)documentUrls;
/// If you want to use a custom channelSettingsViewController, override it and implement it.
- (void)showChannelSettings;
/// This function presents <code>SBUEmojiListViewController</code>
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object
///
- (void)showEmojiListModalWithMessage:(SBDBaseMessage * _Nonnull)message;
- (void)registerWithAdminMessageCell:(SBUBaseMessageCell * _Nonnull)adminMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithUserMessageCell:(SBUBaseMessageCell * _Nonnull)userMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithFileMessageCell:(SBUBaseMessageCell * _Nonnull)fileMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithCustomMessageCell:(SBUBaseMessageCell * _Nullable)customMessageCell nib:(UINib * _Nullable)nib;
/// This function sets the cell’s tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
- (void)setTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message;
/// This function sets the cell’s long tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
/// \param indexPath indexpath of cell
///
- (void)setLongTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message indexPath:(NSIndexPath * _Nonnull)indexPath;
/// This function sets the cell’s tap emoji gesture handling.
/// since:
/// 1.1.0
/// \param cell Message cell object
///
/// \param emojiKey emoji key
///
- (void)setTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey;
/// This function sets the cell’s long tap emoji gesture handling.
/// since:
/// 1.1.0
/// \param cell Message cell object
///
/// \param emojiKey emoji key
///
- (void)setLongTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey;
/// This is used to messageInputView state update.
/// since:
/// 1.2.0
- (void)updateMessageInputModeState;
- (BOOL)checkSameDayAsNextMessageWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)configureOffset;
/// This is used to check the loading status and control loading indicator.
/// \param loadingState Set to true when the list is loading.
///
/// \param showIndicator If true, the loading indicator is started, and if false, the indicator is stopped.
///
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator;
/// This is a function that gets the location of the message to be grouped.
/// Only successful messages can be grouped.
/// since:
/// 1.2.1
/// \param currentIndex Index of current message in the message list
///
///
/// returns:
/// Position of a message when grouped
- (enum MessageGroupPosition)getMessageGroupingPositionWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)onClickBack;
- (void)onClickSetting;
- (void)scrollToBottomWithAnimated:(BOOL)animated;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end

@class SBDFileMessage;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit))
- (void)didSelectDeleteImageWithMessage:(SBDFileMessage * _Nonnull)message;
@end

@class UIPresentationController;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIViewControllerTransitioningDelegate>
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end

@class UIDocumentPickerViewController;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIDocumentPickerDelegate>
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentAtURL:(NSURL * _Nonnull)url;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIImagePickerControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCellIdentifierBy:(SBDBaseMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP13SendBirdUIKit27SBUMessageInputViewDelegate_")
@protocol SBUMessageInputViewDelegate <NSObject>
@optional
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
- (void)messageInputViewDidStartTyping;
- (void)messageInputViewDidEndTyping;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUMessageInputViewDelegate>
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
- (void)messageInputViewDidStartTyping;
- (void)messageInputViewDidEndTyping;
@end

@class SBDReactionEvent;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate, SBDConnectionDelegate>
- (void)channel:(SBDBaseChannel * _Nonnull)sender didReceiveMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender didUpdateMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channel:(SBDBaseChannel * _Nonnull)sender updatedReaction:(SBDReactionEvent * _Nonnull)reactionEvent;
- (void)channelDidUpdateReadReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateDeliveryReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateTypingStatus:(SBDGroupChannel * _Nonnull)sender;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasMuted:(SBDUser * _Nonnull)user;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasUnmuted:(SBDUser * _Nonnull)user;
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)didSucceedReconnection;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit11SBUColorSet")
@interface SBUColorSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary100;)
+ (UIColor * _Nonnull)primary100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary200;)
+ (UIColor * _Nonnull)primary200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary300;)
+ (UIColor * _Nonnull)primary300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary400;)
+ (UIColor * _Nonnull)primary400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary500;)
+ (UIColor * _Nonnull)primary500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary100;)
+ (UIColor * _Nonnull)secondary100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary200;)
+ (UIColor * _Nonnull)secondary200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary300;)
+ (UIColor * _Nonnull)secondary300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary400;)
+ (UIColor * _Nonnull)secondary400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary500;)
+ (UIColor * _Nonnull)secondary500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background100;)
+ (UIColor * _Nonnull)background100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background200;)
+ (UIColor * _Nonnull)background200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background300;)
+ (UIColor * _Nonnull)background300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background400;)
+ (UIColor * _Nonnull)background400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background500;)
+ (UIColor * _Nonnull)background500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background600;)
+ (UIColor * _Nonnull)background600 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground600:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background700;)
+ (UIColor * _Nonnull)background700 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground700:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull overlay01;)
+ (UIColor * _Nonnull)overlay01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOverlay01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull overlay02;)
+ (UIColor * _Nonnull)overlay02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOverlay02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight01;)
+ (UIColor * _Nonnull)onlight01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight02;)
+ (UIColor * _Nonnull)onlight02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight03;)
+ (UIColor * _Nonnull)onlight03 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight03:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight04;)
+ (UIColor * _Nonnull)onlight04 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight04:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark01;)
+ (UIColor * _Nonnull)ondark01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark02;)
+ (UIColor * _Nonnull)ondark02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark03;)
+ (UIColor * _Nonnull)ondark03 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark03:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark04;)
+ (UIColor * _Nonnull)ondark04 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark04:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull error;)
+ (UIColor * _Nonnull)error SWIFT_WARN_UNUSED_RESULT;
+ (void)setError:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull information;)
+ (UIColor * _Nonnull)information SWIFT_WARN_UNUSED_RESULT;
+ (void)setInformation:(UIColor * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit17SBUComponentTheme")
@interface SBUComponentTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUComponentTheme * _Nonnull light;)
+ (SBUComponentTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUComponentTheme * _Nonnull dark;)
+ (SBUComponentTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithEmptyViewBackgroundColor:(UIColor * _Nonnull)emptyViewBackgroundColor emptyViewStatusFont:(UIFont * _Nonnull)emptyViewStatusFont emptyViewStatusTintColor:(UIColor * _Nonnull)emptyViewStatusTintColor emptyViewRetryButtonTintColor:(UIColor * _Nonnull)emptyViewRetryButtonTintColor emptyViewRetryButtonFont:(UIFont * _Nonnull)emptyViewRetryButtonFont overlayColor:(UIColor * _Nonnull)overlayColor backgroundColor:(UIColor * _Nonnull)backgroundColor highlightedColor:(UIColor * _Nonnull)highlightedColor buttonTextColor:(UIColor * _Nonnull)buttonTextColor separatorColor:(UIColor * _Nonnull)separatorColor shadowColor:(UIColor * _Nonnull)shadowColor closeBarButtonTintColor:(UIColor * _Nonnull)closeBarButtonTintColor alertTitleColor:(UIColor * _Nonnull)alertTitleColor alertTitleFont:(UIFont * _Nonnull)alertTitleFont alertDetailColor:(UIColor * _Nonnull)alertDetailColor alertDetailFont:(UIFont * _Nonnull)alertDetailFont alertPlaceholderColor:(UIColor * _Nonnull)alertPlaceholderColor alertButtonColor:(UIColor * _Nonnull)alertButtonColor alertErrorColor:(UIColor * _Nonnull)alertErrorColor alertButtonFont:(UIFont * _Nonnull)alertButtonFont alertTextFieldBackgroundColor:(UIColor * _Nonnull)alertTextFieldBackgroundColor alertTextFieldTintColor:(UIColor * _Nonnull)alertTextFieldTintColor alertTextFieldFont:(UIFont * _Nonnull)alertTextFieldFont actionSheetTextFont:(UIFont * _Nonnull)actionSheetTextFont actionSheetTextColor:(UIColor * _Nonnull)actionSheetTextColor actionSheetSubTextFont:(UIFont * _Nonnull)actionSheetSubTextFont actionSheetSubTextColor:(UIColor * _Nonnull)actionSheetSubTextColor actionSheetItemColor:(UIColor * _Nonnull)actionSheetItemColor actionSheetErrorColor:(UIColor * _Nonnull)actionSheetErrorColor actionSheetButtonFont:(UIFont * _Nonnull)actionSheetButtonFont newMessageFont:(UIFont * _Nonnull)newMessageFont newMessageTintColor:(UIColor * _Nonnull)newMessageTintColor newMessageBackground:(UIColor * _Nonnull)newMessageBackground newMessageHighlighted:(UIColor * _Nonnull)newMessageHighlighted titleOnlineStateColor:(UIColor * _Nonnull)titleOnlineStateColor titleColor:(UIColor * _Nonnull)titleColor titleFont:(UIFont * _Nonnull)titleFont titleStatusColor:(UIColor * _Nonnull)titleStatusColor titleStatusFont:(UIFont * _Nonnull)titleStatusFont menuTitleFont:(UIFont * _Nonnull)menuTitleFont userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor reactionBoxBackgroundColor:(UIColor * _Nonnull)reactionBoxBackgroundColor reactionBoxBorderLineColor:(UIColor * _Nonnull)reactionBoxBorderLineColor reactionBoxEmojiCountColor:(UIColor * _Nonnull)reactionBoxEmojiCountColor reactionBoxEmojiBackgroundColor:(UIColor * _Nonnull)reactionBoxEmojiBackgroundColor reactionBoxSelectedEmojiBackgroundColor:(UIColor * _Nonnull)reactionBoxSelectedEmojiBackgroundColor reactionBoxEmojiCountFont:(UIFont * _Nonnull)reactionBoxEmojiCountFont emojiCountColor:(UIColor * _Nonnull)emojiCountColor emojiSelectedCountColor:(UIColor * _Nonnull)emojiSelectedCountColor emojiSelectedUnderlineColor:(UIColor * _Nonnull)emojiSelectedUnderlineColor emojiCountFont:(UIFont * _Nonnull)emojiCountFont reactionMenuLineColor:(UIColor * _Nonnull)reactionMenuLineColor emojiListSelectedBackgroundColor:(UIColor * _Nonnull)emojiListSelectedBackgroundColor addReactionTintColor:(UIColor * _Nonnull)addReactionTintColor channelTypeSelectorItemTintColor:(UIColor * _Nonnull)channelTypeSelectorItemTintColor channelTypeSelectorItemTextColor:(UIColor * _Nonnull)channelTypeSelectorItemTextColor channelTypeSelectorItemFont:(UIFont * _Nonnull)channelTypeSelectorItemFont broadcastIconBackgroundColor:(UIColor * _Nonnull)broadcastIconBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull emptyViewStatusFont;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewStatusTintColor;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewRetryButtonTintColor;
@property (nonatomic, strong) UIFont * _Nonnull emptyViewRetryButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull alertTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull alertTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull alertDetailColor;
@property (nonatomic, strong) UIFont * _Nonnull alertDetailFont;
@property (nonatomic, strong) UIColor * _Nonnull alertPlaceholderColor;
@property (nonatomic, strong) UIColor * _Nonnull alertButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull alertErrorColor;
@property (nonatomic, strong) UIFont * _Nonnull alertButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull alertTextFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull alertTextFieldTintColor;
@property (nonatomic, strong) UIFont * _Nonnull alertTextFieldFont;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetTextFont;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetTextColor;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetSubTextFont;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetSubTextColor;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetItemColor;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetErrorColor;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetButtonFont;
@property (nonatomic, strong) UIFont * _Nonnull newMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull newMessageTintColor;
@property (nonatomic, strong) UIColor * _Nonnull newMessageBackground;
@property (nonatomic, strong) UIColor * _Nonnull newMessageHighlighted;
@property (nonatomic, strong) UIColor * _Nonnull titleOnlineStateColor;
@property (nonatomic, strong) UIColor * _Nonnull titleColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleStatusColor;
@property (nonatomic, strong) UIFont * _Nonnull titleStatusFont;
@property (nonatomic, strong) UIFont * _Nonnull menuTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull overlayColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull highlightedColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTextColor;
@property (nonatomic, strong) UIColor * _Nonnull separatorColor;
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
@property (nonatomic, strong) UIColor * _Nonnull closeBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxBorderLineColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxEmojiCountColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxEmojiBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxSelectedEmojiBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull reactionBoxEmojiCountFont;
@property (nonatomic, strong) UIColor * _Nonnull emojiCountColor;
@property (nonatomic, strong) UIColor * _Nonnull emojiSelectedCountColor;
@property (nonatomic, strong) UIColor * _Nonnull emojiSelectedUnderlineColor;
@property (nonatomic, strong) UIFont * _Nonnull emojiCountFont;
@property (nonatomic, strong) UIColor * _Nonnull emojiListSelectedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionMenuLineColor;
@property (nonatomic, strong) UIColor * _Nonnull addReactionTintColor;
@property (nonatomic, strong) UIColor * _Nonnull channelTypeSelectorItemTintColor;
@property (nonatomic, strong) UIColor * _Nonnull channelTypeSelectorItemTextColor;
@property (nonatomic, strong) UIFont * _Nonnull channelTypeSelectorItemFont;
@property (nonatomic, strong) UIColor * _Nonnull broadcastIconBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIStackView;
@class UILongPressGestureRecognizer;
@class UITapGestureRecognizer;

/// It is a base class used in message cell with contents.
/// since:
/// 1.2.1
SWIFT_CLASS("_TtC13SendBirdUIKit25SBUContentBaseMessageCell")
@interface SBUContentBaseMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UIStackView * _Nonnull userNameStackView;
@property (nonatomic, strong) UIStackView * _Nonnull contentsStackView;
@property (nonatomic, strong) UIView * _Nonnull userNameView;
@property (nonatomic, strong) UIView * _Nonnull profileView;
@property (nonatomic, strong) UIView * _Nonnull stateView;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView position:(enum MessagePosition)position groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)setMessageGrouping;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)onLongPressContentViewWithSender:(UILongPressGestureRecognizer * _Nullable)sender;
- (void)onTapContentViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (void)onTapProfileImageViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// This protocol is used to create a custom <code>CreateChannelTypeSelector</code>.
SWIFT_PROTOCOL("_TtP13SendBirdUIKit36SBUCreateChannelTypeSelectorProtocol_")
@protocol SBUCreateChannelTypeSelectorProtocol
/// This function shows selector view.
- (void)show;
/// This function dismisses selector view.
- (void)dismiss;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit30SBUCreateChannelViewController")
@interface SBUCreateChannelViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, readonly) enum ChannelType channelType;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUCreateChannelViewController(type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'init'");
- (nonnull instancetype)init;
/// If you have user objects, use this initialize function.
/// \param users <code>SBUUser</code> array object
///
/// \param type The type of channel to create (default: <code>.group</code>)
///
- (nonnull instancetype)initWithUsers:(NSArray<SBUUser *> * _Nullable)users type:(enum ChannelType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// Load user list.
/// If want using your custom user list, filled users with your custom user list.
/// \param reset <code>true</code> is reset user list and load new list
///
/// \param users customized <code>SBUUser</code> array for add to user list
///
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
/// Creates the channel with userIds.
/// since:
/// 1.0.9
/// \param userIds User Ids to include
///
- (void)createChannelWithUserIds:(NSArray<NSString *> * _Nonnull)userIds;
/// Creates the channel with channelParams.
/// You can create a channel by setting various properties of ChannelParams.
/// since:
/// 1.0.9
/// \param params <code>SBDGroupChannelParams</code> class object
///
- (void)createChannelWithParams:(SBDGroupChannelParams * _Nonnull)params;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUCreateChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIImageView;

SWIFT_CLASS("_TtC13SendBirdUIKit12SBUEmptyView")
@interface SBUEmptyView : UIView
@property (nonatomic) enum EmptyViewType type;
@property (nonatomic, weak) id <SBUEmptyViewDelegate> _Nullable delegate;
@property (nonatomic, strong) UIImageView * _Nonnull statusImageView;
@property (nonatomic, strong) UILabel * _Nonnull statusLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)layoutSubviews;
- (void)reloadData:(enum EmptyViewType)type;
/// Override this function to apply a custom type.
- (void)updateViews;
- (void)onClickRetry:(id _Nonnull)sender;
@end



IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUFileMessageCell")
@interface SBUFileMessageCell : SBUContentBaseMessageCell
@property (nonatomic, readonly, strong) SBDFileMessage * _Nullable fileMessage;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDFileMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUFontSet")
@interface SBUFontSet : NSObject
/// Medium, 18pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull h1;)
+ (UIFont * _Nonnull)h1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setH1:(UIFont * _Nonnull)value;
/// Bold, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull h2;)
+ (UIFont * _Nonnull)h2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setH2:(UIFont * _Nonnull)value;
/// Regular, 14pt, Line height: 20pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body1;)
+ (UIFont * _Nonnull)body1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody1:(UIFont * _Nonnull)value;
/// Regular, 14pt, Line height: 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body2;)
+ (UIFont * _Nonnull)body2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody2:(UIFont * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body3;)
+ (UIFont * _Nonnull)body3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody3:(UIFont * _Nonnull)value;
/// Semibold, 20pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button1;)
+ (UIFont * _Nonnull)button1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton1:(UIFont * _Nonnull)value;
/// Medium, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button2;)
+ (UIFont * _Nonnull)button2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton2:(UIFont * _Nonnull)value;
/// Medium, 14pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button3;)
+ (UIFont * _Nonnull)button3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton3:(UIFont * _Nonnull)value;
/// Bold, 12pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption1;)
+ (UIFont * _Nonnull)caption1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption1:(UIFont * _Nonnull)value;
/// Regular, 12pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption2;)
+ (UIFont * _Nonnull)caption2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption2:(UIFont * _Nonnull)value;
/// Regular, 11pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption3;)
+ (UIFont * _Nonnull)caption3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption3:(UIFont * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption4;)
+ (UIFont * _Nonnull)caption4 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption4:(UIFont * _Nonnull)value;
/// Medium, 16pt, Line hieght 22pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull subtitle1;)
+ (UIFont * _Nonnull)subtitle1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSubtitle1:(UIFont * _Nonnull)value;
/// Regular, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull subtitle2;)
+ (UIFont * _Nonnull)subtitle2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSubtitle2:(UIFont * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUGlobals")
@interface SBUGlobals : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ApplicationId;)
+ (NSString * _Nullable)ApplicationId SWIFT_WARN_UNUSED_RESULT;
+ (void)setApplicationId:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable AccessToken;)
+ (NSString * _Nullable)AccessToken SWIFT_WARN_UNUSED_RESULT;
+ (void)setAccessToken:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUser * _Nullable CurrentUser;)
+ (SBUUser * _Nullable)CurrentUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrentUser:(SBUUser * _Nullable)newCurrentUser;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL UsingMessageGrouping;)
+ (BOOL)UsingMessageGrouping SWIFT_WARN_UNUSED_RESULT;
+ (void)setUsingMessageGrouping:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUIconSet")
@interface SBUIconSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionLeave;)
+ (UIImage * _Nonnull)iconActionLeave SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionLeave:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionNotificationOn;)
+ (UIImage * _Nonnull)iconActionNotificationOn SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionNotificationOn:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionNotificationOff;)
+ (UIImage * _Nonnull)iconActionNotificationOff SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionNotificationOff:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconAdd;)
+ (UIImage * _Nonnull)iconAdd SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconAdd:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBack;)
+ (UIImage * _Nonnull)iconBack SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBack:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCamera;)
+ (UIImage * _Nonnull)iconCamera SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCamera:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPlus;)
+ (UIImage * _Nonnull)iconPlus SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPlus:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconChat;)
+ (UIImage * _Nonnull)iconChat SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconChat:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCheckbox;)
+ (UIImage * _Nonnull)iconCheckbox SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCheckbox:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCheckboxOff;)
+ (UIImage * _Nonnull)iconCheckboxOff SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCheckboxOff:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconClose;)
+ (UIImage * _Nonnull)iconClose SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconClose:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCopy;)
+ (UIImage * _Nonnull)iconCopy SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCopy:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCreate;)
+ (UIImage * _Nonnull)iconCreate SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCreate:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDelete;)
+ (UIImage * _Nonnull)iconDelete SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDelete:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDelivered;)
+ (UIImage * _Nonnull)iconDelivered SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDelivered:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDocument;)
+ (UIImage * _Nonnull)iconDocument SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDocument:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDownload;)
+ (UIImage * _Nonnull)iconDownload SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDownload:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDummy;)
+ (UIImage * _Nonnull)iconDummy SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDummy:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconEdit;)
+ (UIImage * _Nonnull)iconEdit SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconEdit:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconError;)
+ (UIImage * _Nonnull)iconError SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconError:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconErrorFilled;)
+ (UIImage * _Nonnull)iconErrorFilled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconErrorFilled:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconGif;)
+ (UIImage * _Nonnull)iconGif SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconGif:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconInfo;)
+ (UIImage * _Nonnull)iconInfo SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconInfo:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconLeave;)
+ (UIImage * _Nonnull)iconLeave SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconLeave:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMembers;)
+ (UIImage * _Nonnull)iconMembers SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMembers:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconModerations;)
+ (UIImage * _Nonnull)iconModerations SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconModerations:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastSmall;)
+ (UIImage * _Nonnull)iconBroadcastSmall SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastSmall:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastMedium;)
+ (UIImage * _Nonnull)iconBroadcastMedium SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastMedium:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastLarge;)
+ (UIImage * _Nonnull)iconBroadcastLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFreeze;)
+ (UIImage * _Nonnull)iconFreeze SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFreeze:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMute;)
+ (UIImage * _Nonnull)iconMute SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMute:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconNotifications;)
+ (UIImage * _Nonnull)iconNotifications SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconNotifications:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconThumbnailLight;)
+ (UIImage * _Nonnull)iconThumbnailLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconThumbnailLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconNoThumbnailLight;)
+ (UIImage * _Nonnull)iconNoThumbnailLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconNoThumbnailLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPhoto;)
+ (UIImage * _Nonnull)iconPhoto SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPhoto:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPlay;)
+ (UIImage * _Nonnull)iconPlay SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPlay:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconRead;)
+ (UIImage * _Nonnull)iconRead SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconRead:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconRefresh;)
+ (UIImage * _Nonnull)iconRefresh SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconRefresh:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconAvatarLight;)
+ (UIImage * _Nonnull)iconAvatarLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconAvatarLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSend;)
+ (UIImage * _Nonnull)iconSend SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSend:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSent;)
+ (UIImage * _Nonnull)iconSent SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSent:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFailed;)
+ (UIImage * _Nonnull)iconFailed SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFailed:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconShevronRight;)
+ (UIImage * _Nonnull)iconShevronRight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconShevronRight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconUser;)
+ (UIImage * _Nonnull)iconUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconUser:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSpinnerSmall;)
+ (UIImage * _Nonnull)iconSpinnerSmall SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSpinnerSmall:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSpinnerLarge;)
+ (UIImage * _Nonnull)iconSpinnerLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSpinnerLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFileDocument;)
+ (UIImage * _Nonnull)iconFileDocument SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFileDocument:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFileAudio;)
+ (UIImage * _Nonnull)iconFileAudio SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFileAudio:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconChevronDown;)
+ (UIImage * _Nonnull)iconChevronDown SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconChevronDown:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMore;)
+ (UIImage * _Nonnull)iconMore SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMore:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconOperator;)
+ (UIImage * _Nonnull)iconOperator SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconOperator:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMuted;)
+ (UIImage * _Nonnull)iconMuted SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMuted:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBanned;)
+ (UIImage * _Nonnull)iconBanned SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBanned:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMessage;)
+ (UIImage * _Nonnull)iconMessage SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMessage:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeGroup;)
+ (UIImage * _Nonnull)channelTypeGroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeGroup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeSupergroup;)
+ (UIImage * _Nonnull)channelTypeSupergroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeSupergroup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeBroadcast;)
+ (UIImage * _Nonnull)channelTypeBroadcast SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeBroadcast:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiHeartEyes;)
+ (UIImage * _Nonnull)emojiHeartEyes SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiHeartEyes:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiLaughing;)
+ (UIImage * _Nonnull)emojiLaughing SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiLaughing:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiSweatSmile;)
+ (UIImage * _Nonnull)emojiSweatSmile SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiSweatSmile:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiSob;)
+ (UIImage * _Nonnull)emojiSob SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiSob:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiRage;)
+ (UIImage * _Nonnull)emojiRage SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiRage:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiMoreLarge;)
+ (UIImage * _Nonnull)emojiMoreLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiMoreLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiThumbsup;)
+ (UIImage * _Nonnull)emojiThumbsup SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiThumbsup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiThubsdown;)
+ (UIImage * _Nonnull)emojiThubsdown SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiThubsdown:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiFail;)
+ (UIImage * _Nonnull)emojiFail SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiFail:(UIImage * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC13SendBirdUIKit27SBUInviteUserViewController")
@interface SBUInviteUserViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, readonly) enum ChannelInviteListType inviteListType;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController.init(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channel and users objects, use this initialize function.
/// \param channel Channel object
///
/// \param users <code>SBUUser</code> object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and users objects, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param users <code>SBUUser</code> object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// Load user list.
/// If want using your custom user list, filled users with your custom user list.
/// \param reset <code>true</code> is reset user list and load new list
///
/// \param users customized <code>SBUUser</code> array for add to user list
///
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// Make this function return the next list each time it is called.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
/// Invites users in the channel with selected userIds.
/// since:
/// 1.0.9
- (void)inviteUsers;
/// Invites users in the channel with directly generated userIds.
/// since:
/// 1.0.9
/// \param userIds User IDs to invite
///
- (void)inviteUsersWithUserIds:(NSArray<NSString *> * _Nonnull)userIds;
/// Promotes members as operator with selected userIds.
/// since:
/// 1.2.0
- (void)promoteToOperators;
/// Promotes members as operator with directly generated memberIds.
/// since:
/// 1.2.0
/// \param userIds member IDs to invite
///
- (void)promoteToOperatorsWithMemberIds:(NSArray<NSString *> * _Nonnull)memberIds;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
- (void)selectUserWithUser:(SBUUser * _Nonnull)user;
- (void)popToChannel;
- (void)popToPrevious;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUInviteUserViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class SBDError;

SWIFT_CLASS("_TtC13SendBirdUIKit7SBUMain")
@interface SBUMain : NSObject
+ (void)initializeWithApplicationId:(NSString * _Nonnull)applicationId;
+ (void)connectWithCompletionHandler:(void (^ _Nonnull)(SBDUser * _Nullable, SBDError * _Nullable))completionHandler;
+ (void)connectionCheckWithCompletionHandler:(void (^ _Nonnull)(SBDUser * _Nullable, SBDError * _Nullable))completionHandler;
+ (void)disconnectWithCompletionHandler:(void (^ _Nullable)(void))completionHandler;
+ (void)updateUserInfoWithNickname:(NSString * _Nullable)nickname profileUrl:(NSString * _Nullable)profileUrl completionHandler:(void (^ _Nullable)(SBDError * _Nullable))completionHandler;
+ (NSString * _Nonnull)getUIKitVersion SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("", "shortVersionString");
+ (NSString * _Nullable)versionString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)shortVersionString SWIFT_WARN_UNUSED_RESULT;
+ (void)registerPushWithDeviceToken:(NSData * _Nonnull)deviceToken completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)unregisterPushTokenWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)unregisterAllPushTokenWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)openChannelWithChannelUrl:(NSString * _Nonnull)channelUrl basedOnChannelList:(BOOL)basedOnChannelList;
/// You can activate log information for debugging.
/// <ul>
///   <li>
///     <code>Objective-C</code> uses bit masking. (e,g, <code>.error|.info</code>)
///   </li>
///   <li>
///     <code>Swift</code> uses a single type in this function.
///   </li>
///   <li>
///     default type: .none
///   </li>
/// </ul>
/// \param type LogType
///
+ (void)setLogLevel:(enum LogType)type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit27SBUMemberListViewController")
@interface SBUMemberListViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable emptyView;
@property (nonatomic, readonly) enum ChannelMemberListType memberListType;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull memberList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController(channelUrl:type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channel and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channel Channel object
///
/// \param members <code>SBUUser</code> array object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channelUrl Channel url string
///
/// \param members <code>SBUUser</code> array object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function to load the member list.
/// This requests the required list according to <code>memberListType</code>.
/// If you want using your custom member list, filled members with your custom member list.
/// since:
/// 1.2.0
/// \param reset <code>true</code> is reset member list and load new list
///
/// \param members customized <code>SBUUser</code> array for add to member list
///
- (void)loadNextMemberListWithReset:(BOOL)reset members:(NSArray<SBUUser *> * _Nullable)members;
/// When creating and using a member list directly, overriding this function and return the next member list.
/// Make this function return the next list each time it is called.
/// since:
/// 1.2.0
///
/// returns:
/// next member list
- (NSArray<SBUUser *> * _Nullable)nextMemberList SWIFT_WARN_UNUSED_RESULT;
/// This function to get member information directly from the channel in the case of GroupChannel.
/// If you use it in SuperGroup, Broadcast channel, only some member information can be loaded.
/// since:
/// 1.2.0
- (void)loadMembers;
/// This function promotes the member as an operator.
/// since:
/// 1.2.0
/// \param member A member to be promoted
///
- (void)promoteToOperatorWithMember:(SBUUser * _Nonnull)member;
/// This function dismiss the operator as a member.
/// since:
/// 1.2.0
/// \param member A member to be dismissed
///
- (void)dismissOperatorWithMember:(SBUUser * _Nonnull)member;
/// This function mutes the member.
/// since:
/// 1.2.0
/// \param member A member to be muted
///
- (void)muteWithMember:(SBUUser * _Nonnull)member;
/// This function unmutes the member.
/// since:
/// 1.2.0
/// \param member A member to be unmuted
///
- (void)unmuteWithMember:(SBUUser * _Nonnull)member;
/// This function bans the member.
/// since:
/// 1.2.0
/// \param member A member to be banned
///
- (void)banWithMember:(SBUUser * _Nonnull)member;
/// This function unbans the member.
/// since:
/// 1.2.0
/// \param member A member to be unbanned
///
- (void)unbanWithMember:(SBUUser * _Nonnull)member;
/// If you want to use a custom inviteChannelViewController, override it and implement it.
- (void)showInviteUser;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
/// This function reloads the member list.
/// since:
/// 1.2.0
- (void)reloadMemberList;
- (void)onClickInviteUser;
/// /// This function sets the cell’s more menu button action handling.
/// since:
/// 1.2.0
/// \param member <code>SBUUser</code> obejct
///
- (void)setMoreMenuActionHandler:(SBUUser * _Nonnull)member;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate>
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit19SBUMessageCellTheme")
@interface SBUMessageCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageCellTheme * _Nonnull light;)
+ (SBUMessageCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageCellTheme * _Nonnull dark;)
+ (SBUMessageCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor leftBackgroundColor:(UIColor * _Nonnull)leftBackgroundColor leftPressedBackgroundColor:(UIColor * _Nonnull)leftPressedBackgroundColor rightBackgroundColor:(UIColor * _Nonnull)rightBackgroundColor rightPressedBackgroundColor:(UIColor * _Nonnull)rightPressedBackgroundColor dateFont:(UIFont * _Nonnull)dateFont dateTextColor:(UIColor * _Nonnull)dateTextColor dateBackgroundColor:(UIColor * _Nonnull)dateBackgroundColor userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor userNameFont:(UIFont * _Nonnull)userNameFont userNameTextColor:(UIColor * _Nonnull)userNameTextColor timeFont:(UIFont * _Nonnull)timeFont timeTextColor:(UIColor * _Nonnull)timeTextColor pendingStateColor:(UIColor * _Nonnull)pendingStateColor failedStateColor:(UIColor * _Nonnull)failedStateColor succeededStateColor:(UIColor * _Nonnull)succeededStateColor readReceiptStateColor:(UIColor * _Nonnull)readReceiptStateColor deliveryReceiptStateColor:(UIColor * _Nonnull)deliveryReceiptStateColor userMessageFont:(UIFont * _Nonnull)userMessageFont userMessageLeftTextColor:(UIColor * _Nonnull)userMessageLeftTextColor userMessageLeftEditTextColor:(UIColor * _Nonnull)userMessageLeftEditTextColor userMessageRightTextColor:(UIColor * _Nonnull)userMessageRightTextColor userMessageRightEditTextColor:(UIColor * _Nonnull)userMessageRightEditTextColor fileIconBackgroundColor:(UIColor * _Nonnull)fileIconBackgroundColor fileIconColor:(UIColor * _Nonnull)fileIconColor fileMessageNameFont:(UIFont * _Nonnull)fileMessageNameFont fileMessageLeftTextColor:(UIColor * _Nonnull)fileMessageLeftTextColor fileMessageRightTextColor:(UIColor * _Nonnull)fileMessageRightTextColor fileMessagePlaceholderColor:(UIColor * _Nonnull)fileMessagePlaceholderColor adminMessageFont:(UIFont * _Nonnull)adminMessageFont adminMessageTextColor:(UIColor * _Nonnull)adminMessageTextColor unknownMessageDescFont:(UIFont * _Nonnull)unknownMessageDescFont unknownMessageDescTextColor:(UIColor * _Nonnull)unknownMessageDescTextColor ogTitleFont:(UIFont * _Nonnull)ogTitleFont ogTitleColor:(UIColor * _Nonnull)ogTitleColor ogDescriptionFont:(UIFont * _Nonnull)ogDescriptionFont ogDescriptionColor:(UIColor * _Nonnull)ogDescriptionColor ogURLAddressFont:(UIFont * _Nonnull)ogURLAddressFont ogURLAddressColor:(UIColor * _Nonnull)ogURLAddressColor contentBackgroundColor:(UIColor * _Nonnull)contentBackgroundColor pressedContentBackgroundColor:(UIColor * _Nonnull)pressedContentBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leftPressedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull rightPressedBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull dateFont;
@property (nonatomic, strong) UIColor * _Nonnull dateTextColor;
@property (nonatomic, strong) UIColor * _Nonnull dateBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIFont * _Nonnull timeFont;
@property (nonatomic, strong) UIColor * _Nonnull timeTextColor;
@property (nonatomic, strong) UIColor * _Nonnull pendingStateColor;
@property (nonatomic, strong) UIColor * _Nonnull failedStateColor;
@property (nonatomic, strong) UIColor * _Nonnull succeededStateColor;
@property (nonatomic, strong) UIColor * _Nonnull readReceiptStateColor;
@property (nonatomic, strong) UIColor * _Nonnull deliveryReceiptStateColor;
@property (nonatomic, strong) UIColor * _Nonnull contentBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull pressedContentBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull userMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull userMessageLeftTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageLeftEditTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageRightTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageRightEditTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileIconBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull fileIconColor;
@property (nonatomic, strong) UIFont * _Nonnull fileMessageNameFont;
@property (nonatomic, strong) UIColor * _Nonnull fileMessageLeftTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileMessageRightTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileMessagePlaceholderColor;
@property (nonatomic, strong) UIFont * _Nonnull adminMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull adminMessageTextColor;
@property (nonatomic, strong) UIFont * _Nonnull unknownMessageDescFont;
@property (nonatomic, strong) UIColor * _Nonnull unknownMessageDescTextColor;
@property (nonatomic, strong) UIFont * _Nonnull ogTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull ogTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull ogDescriptionFont;
@property (nonatomic, strong) UIColor * _Nonnull ogDescriptionColor;
@property (nonatomic, strong) UIFont * _Nonnull ogURLAddressFont;
@property (nonatomic, strong) UIColor * _Nonnull ogURLAddressColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit20SBUMessageInputTheme")
@interface SBUMessageInputTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageInputTheme * _Nonnull light;)
+ (SBUMessageInputTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageInputTheme * _Nonnull dark;)
+ (SBUMessageInputTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor textFieldBackgroundColor:(UIColor * _Nonnull)textFieldBackgroundColor textFieldPlaceholderColor:(UIColor * _Nonnull)textFieldPlaceholderColor textFieldPlaceholderFont:(UIFont * _Nonnull)textFieldPlaceholderFont textFieldDisabledColor:(UIColor * _Nonnull)textFieldDisabledColor textFieldTintColor:(UIColor * _Nonnull)textFieldTintColor textFieldTextColor:(UIColor * _Nonnull)textFieldTextColor textFieldBorderColor:(UIColor * _Nonnull)textFieldBorderColor buttonTintColor:(UIColor * _Nonnull)buttonTintColor buttonDisabledTintColor:(UIColor * _Nonnull)buttonDisabledTintColor cancelButtonFont:(UIFont * _Nonnull)cancelButtonFont saveButtonFont:(UIFont * _Nonnull)saveButtonFont saveButtonTextColor:(UIColor * _Nonnull)saveButtonTextColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldPlaceholderColor;
@property (nonatomic, strong) UIFont * _Nonnull textFieldPlaceholderFont;
@property (nonatomic, strong) UIColor * _Nonnull textFieldDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldTintColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldTextColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldBorderColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonDisabledTintColor;
@property (nonatomic, strong) UIFont * _Nonnull cancelButtonFont;
@property (nonatomic, strong) UIFont * _Nonnull saveButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull saveButtonTextColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIButton;
@class UITextView;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit19SBUMessageInputView")
@interface SBUMessageInputView : UIView <UITextViewDelegate>
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified addButton;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified placeholderLabel;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified textView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified sendButton;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified editView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified cancelButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified saveButton;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageInputView.sbu_loadViewFromNib()'");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageInputView.sbu_loadViewFromNib()'");
- (void)awakeFromNib;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
- (void)startEditModeWithText:(NSString * _Nonnull)text;
- (void)endEditMode;
/// Sets frozen mode state.
/// \param isFrozen <code>true</code> is frozen mode, <code>false</code> is unfrozen mode
///
- (void)setFrozenModeState:(BOOL)isFrozen;
/// Sets frozen mode state.
/// \param isMuted <code>true</code> is muted mode, <code>false</code> is unmuted mode
///
- (void)setMutedModeState:(BOOL)isMuted;
- (void)endTypingMode;
- (void)updateTextViewHeight;
- (IBAction)onClickAddButton:(id _Nonnull)sender;
- (IBAction)onClickSendButton:(id _Nonnull)sender;
- (IBAction)onClickCancelButton:(id _Nonnull)sender;
- (IBAction)onClickSaveButton:(id _Nonnull)sender;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM(NSInteger, SBUMessageReceiptState, open) {
  SBUMessageReceiptStateNone = 0,
  SBUMessageReceiptStateReadReceipt = 1,
  SBUMessageReceiptStateDeliveryReceipt = 2,
};


SWIFT_CLASS("_TtC13SendBirdUIKit28SBUModerationsViewController")
@interface SBUModerationsViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
/// One of two must be set.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUModerationsViewController(channel:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function freezes the channel.
/// \param completionHandler completion handler of freeze status change
///
- (void)freezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This function unfreezes the channel.
/// \param completionHandler completion handler of freeze status change
///
- (void)unfreezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the operator List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showOperatorList;
/// This is a function that shows the muted member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showMutedMeberList;
/// This is a function that shows the banned member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showBannedMeberList;
/// Changes freeze status on channel.
/// \param freeze freeze status
///
/// \param completionHandler completion handler of freeze status change
///
- (void)changeFreeze:(BOOL)freeze :(void (^ _Nullable)(BOOL))completionHandler;
- (void)didReceiveError:(NSString * _Nullable)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SBUModerationsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit17SBUNewMessageInfo")
@interface SBUNewMessageInfo : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
- (void)onClickNewMessageInfo;
@end

@class SBDMember;

SWIFT_CLASS("_TtC13SendBirdUIKit12SBUStringSet")
@interface SBUStringSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Cancel;)
+ (NSString * _Nonnull)Cancel SWIFT_WARN_UNUSED_RESULT;
+ (void)setCancel:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull OK;)
+ (NSString * _Nonnull)OK SWIFT_WARN_UNUSED_RESULT;
+ (void)setOK:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Retry;)
+ (NSString * _Nonnull)Retry SWIFT_WARN_UNUSED_RESULT;
+ (void)setRetry:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Save;)
+ (NSString * _Nonnull)Save SWIFT_WARN_UNUSED_RESULT;
+ (void)setSave:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Copy;)
+ (NSString * _Nonnull)Copy SWIFT_WARN_UNUSED_RESULT;
+ (void)setCopy:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Delete;)
+ (NSString * _Nonnull)Delete SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelete:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Edit;)
+ (NSString * _Nonnull)Edit SWIFT_WARN_UNUSED_RESULT;
+ (void)setEdit:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Remove;)
+ (NSString * _Nonnull)Remove SWIFT_WARN_UNUSED_RESULT;
+ (void)setRemove:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Camera;)
+ (NSString * _Nonnull)Camera SWIFT_WARN_UNUSED_RESULT;
+ (void)setCamera:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull PhotoVideoLibrary;)
+ (NSString * _Nonnull)PhotoVideoLibrary SWIFT_WARN_UNUSED_RESULT;
+ (void)setPhotoVideoLibrary:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Document;)
+ (NSString * _Nonnull)Document SWIFT_WARN_UNUSED_RESULT;
+ (void)setDocument:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Loading;)
+ (NSString * _Nonnull)Loading SWIFT_WARN_UNUSED_RESULT;
+ (void)setLoading:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Invite;)
+ (NSString * _Nonnull)Invite SWIFT_WARN_UNUSED_RESULT;
+ (void)setInvite:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Alert_Delete;)
+ (NSString * _Nonnull)Alert_Delete SWIFT_WARN_UNUSED_RESULT;
+ (void)setAlert_Delete:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_Yesterday;)
+ (NSString * _Nonnull)Date_Yesterday SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Yesterday:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Year)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Year SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Year:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Day)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Day SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Day:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Month)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Month SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Month:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Hour)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Hour SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Hour:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Min)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Min SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Min:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_Ago;)
+ (NSString * _Nonnull)Date_Ago SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Ago:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_On;)
+ (NSString * _Nonnull)Date_On SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_On:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelList_Header_Title;)
+ (NSString * _Nonnull)ChannelList_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelList_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelList_Last_File_Message;)
+ (NSString * _Nonnull)ChannelList_Last_File_Message SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelList_Last_File_Message:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Name_Default;)
+ (NSString * _Nonnull)Channel_Name_Default SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Name_Default:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Name_No_Members;)
+ (NSString * _Nonnull)Channel_Name_No_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Name_No_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Header_LastSeen;)
+ (NSString * _Nonnull)Channel_Header_LastSeen SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Header_LastSeen:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Channel_Header_Typing)(NSArray<SBDMember *> * _Nonnull);)
+ (NSString * _Nonnull (^ _Nonnull)(NSArray<SBDMember *> * _Nonnull))Channel_Header_Typing SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Header_Typing:(NSString * _Nonnull (^ _Nonnull)(NSArray<SBDMember *> * _Nonnull))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Success_Download_file;)
+ (NSString * _Nonnull)Channel_Success_Download_file SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Success_Download_file:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_New_Message_File;)
+ (NSString * _Nonnull)Channel_New_Message_File SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_New_Message_File:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Channel_New_Message)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Channel_New_Message SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_New_Message:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_State_Banner_Frozen;)
+ (NSString * _Nonnull)Channel_State_Banner_Frozen SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_State_Banner_Frozen:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Header_Title;)
+ (NSString * _Nonnull)ChannelSettings_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Change_Name;)
+ (NSString * _Nonnull)ChannelSettings_Change_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Change_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Change_Image;)
+ (NSString * _Nonnull)ChannelSettings_Change_Image SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Change_Image:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Enter_New_Name;)
+ (NSString * _Nonnull)ChannelSettings_Enter_New_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Enter_New_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Notifications;)
+ (NSString * _Nonnull)ChannelSettings_Notifications SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Notifications:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Members_Title;)
+ (NSString * _Nonnull)ChannelSettings_Members_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Members_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull ChannelSettings_Members)(NSUInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSUInteger))ChannelSettings_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Members:(NSString * _Nonnull (^ _Nonnull)(NSUInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Leave;)
+ (NSString * _Nonnull)ChannelSettings_Leave SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Leave:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Moderations;)
+ (NSString * _Nonnull)ChannelSettings_Moderations SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Moderations:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Operators;)
+ (NSString * _Nonnull)ChannelSettings_Operators SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Operators:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Muted_Members;)
+ (NSString * _Nonnull)ChannelSettings_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Banned_Members;)
+ (NSString * _Nonnull)ChannelSettings_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Freeze_Channel;)
+ (NSString * _Nonnull)ChannelSettings_Freeze_Channel SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Freeze_Channel:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Placeholder;)
+ (NSString * _Nonnull)MessageInput_Text_Placeholder SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Placeholder:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Unavailable;)
+ (NSString * _Nonnull)MessageInput_Text_Unavailable SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Unavailable:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Muted;)
+ (NSString * _Nonnull)MessageInput_Text_Muted SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Muted:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Edited;)
+ (NSString * _Nonnull)Message_Edited SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Edited:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_System;)
+ (NSString * _Nonnull)Message_System SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_System:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Unknown_Title;)
+ (NSString * _Nonnull)Message_Unknown_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Unknown_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Unknown_Desctiption;)
+ (NSString * _Nonnull)Message_Unknown_Desctiption SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Unknown_Desctiption:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Channels;)
+ (NSString * _Nonnull)Empty_No_Channels SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Channels:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Messages;)
+ (NSString * _Nonnull)Empty_No_Messages SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Messages:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Users;)
+ (NSString * _Nonnull)Empty_No_Users SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Users:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Muted_Members;)
+ (NSString * _Nonnull)Empty_No_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Banned_Members;)
+ (NSString * _Nonnull)Empty_No_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_Wrong;)
+ (NSString * _Nonnull)Empty_Wrong SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_Wrong:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull CreateChannel_Create)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))CreateChannel_Create SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Create:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CreateChannel_Header_Title;)
+ (NSString * _Nonnull)CreateChannel_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CreateChannel_Header_Select_Members;)
+ (NSString * _Nonnull)CreateChannel_Header_Select_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Header_Select_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull InviteChannel_Header_Title;)
+ (NSString * _Nonnull)InviteChannel_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull InviteChannel_Header_Select_Members;)
+ (NSString * _Nonnull)InviteChannel_Header_Select_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Header_Select_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull InviteChannel_Invite)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))InviteChannel_Invite SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Invite:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull InviteChannel_Add)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))InviteChannel_Add SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Add:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Header_Title;)
+ (NSString * _Nonnull)MemberList_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Me;)
+ (NSString * _Nonnull)MemberList_Me SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Me:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Ban;)
+ (NSString * _Nonnull)MemberList_Ban SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Ban:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Unban;)
+ (NSString * _Nonnull)MemberList_Unban SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Unban:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Mute;)
+ (NSString * _Nonnull)MemberList_Mute SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Mute:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Unmute;)
+ (NSString * _Nonnull)MemberList_Unmute SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Unmute:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Dismiss_Operator;)
+ (NSString * _Nonnull)MemberList_Dismiss_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Dismiss_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Promote_Operator;)
+ (NSString * _Nonnull)MemberList_Promote_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Promote_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Members;)
+ (NSString * _Nonnull)MemberList_Title_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Operators;)
+ (NSString * _Nonnull)MemberList_Title_Operators SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Operators:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Muted_Members;)
+ (NSString * _Nonnull)MemberList_Title_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Banned_Members;)
+ (NSString * _Nonnull)MemberList_Title_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull User_No_Name;)
+ (NSString * _Nonnull)User_No_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setUser_No_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull User_Operator;)
+ (NSString * _Nonnull)User_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setUser_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_Group;)
+ (NSString * _Nonnull)ChannelType_Group SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_Group:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_SuperGroup;)
+ (NSString * _Nonnull)ChannelType_SuperGroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_SuperGroup:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_Broadcast;)
+ (NSString * _Nonnull)ChannelType_Broadcast SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_Broadcast:(NSString * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SBUUserListTheme;
@class SBUUserCellTheme;

SWIFT_CLASS("_TtC13SendBirdUIKit8SBUTheme")
@interface SBUTheme : NSObject
- (nonnull instancetype)initWithChannelListTheme:(SBUChannelListTheme * _Nonnull)channelListTheme channelCellTheme:(SBUChannelCellTheme * _Nonnull)channelCellTheme channelTheme:(SBUChannelTheme * _Nonnull)channelTheme messageInputTheme:(SBUMessageInputTheme * _Nonnull)messageInputTheme messageCellTheme:(SBUMessageCellTheme * _Nonnull)messageCellTheme userListTheme:(SBUUserListTheme * _Nonnull)userListTheme userCellTheme:(SBUUserCellTheme * _Nonnull)userCellTheme channelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme componentTheme:(SBUComponentTheme * _Nonnull)componentTheme OBJC_DESIGNATED_INITIALIZER;
+ (void)setWithTheme:(SBUTheme * _Nonnull)theme;
+ (void)setChannelListWithChannelListTheme:(SBUChannelListTheme * _Nonnull)channelListTheme channelCellTheme:(SBUChannelCellTheme * _Nonnull)channelCellTheme;
+ (void)setChannelWithChannelTheme:(SBUChannelTheme * _Nonnull)channelTheme messageCellTheme:(SBUMessageCellTheme * _Nonnull)messageCellTheme messageInputTheme:(SBUMessageInputTheme * _Nonnull)messageInputTheme componentTheme:(SBUComponentTheme * _Nonnull)componentTheme;
+ (void)setUserListWithUserListTheme:(SBUUserListTheme * _Nonnull)userListTheme userCellTheme:(SBUUserCellTheme * _Nonnull)userCellTheme;
+ (void)setChannelSettingsWithChannelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUTheme * _Nonnull dark;)
+ (SBUTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUTheme * _Nonnull light;)
+ (SBUTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelListTheme * _Nonnull channelListTheme;)
+ (SBUChannelListTheme * _Nonnull)channelListTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelListTheme:(SBUChannelListTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelCellTheme * _Nonnull channelCellTheme;)
+ (SBUChannelCellTheme * _Nonnull)channelCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelCellTheme:(SBUChannelCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelTheme * _Nonnull channelTheme;)
+ (SBUChannelTheme * _Nonnull)channelTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTheme:(SBUChannelTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUMessageInputTheme * _Nonnull messageInputTheme;)
+ (SBUMessageInputTheme * _Nonnull)messageInputTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInputTheme:(SBUMessageInputTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUMessageCellTheme * _Nonnull messageCellTheme;)
+ (SBUMessageCellTheme * _Nonnull)messageCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageCellTheme:(SBUMessageCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUserListTheme * _Nonnull userListTheme;)
+ (SBUUserListTheme * _Nonnull)userListTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserListTheme:(SBUUserListTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUserCellTheme * _Nonnull userCellTheme;)
+ (SBUUserCellTheme * _Nonnull)userCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserCellTheme:(SBUUserCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelSettingsTheme * _Nonnull channelSettingsTheme;)
+ (SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUComponentTheme * _Nonnull componentTheme;)
+ (SBUComponentTheme * _Nonnull)componentTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setComponentTheme:(SBUComponentTheme * _Nonnull)newValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit7SBUUser")
@interface SBUUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
@property (nonatomic, readonly, copy) NSString * _Nullable nickname;
@property (nonatomic, readonly, copy) NSString * _Nullable profileUrl;
/// This is an operator state property.
/// since:
/// 1.2.0
@property (nonatomic, readonly) BOOL isOperator;
/// This is a muted state property.
/// since:
/// 1.2.0
@property (nonatomic, readonly) BOOL isMuted;
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId nickname:(NSString * _Nullable)nickname profileUrl:(NSString * _Nullable)profileUrl OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUser:(SBDUser * _Nonnull)user OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUser:(SBUUser * _Nonnull)user isOperator:(BOOL)isOperator isMuted:(BOOL)isMuted OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMember:(SBDMember * _Nonnull)member OBJC_DESIGNATED_INITIALIZER;
/// This method returns the default value if there is no alias value.
/// since:
/// 1.0.1
- (NSString * _Nonnull)refinedNickname SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit11SBUUserCell")
@interface SBUUserCell : UITableViewCell
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)onClickMoreMenu;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16SBUUserCellTheme")
@interface SBUUserCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserCellTheme * _Nonnull light;)
+ (SBUUserCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserCellTheme * _Nonnull dark;)
+ (SBUUserCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor checkboxOnColor:(UIColor * _Nonnull)checkboxOnColor checkboxOffColor:(UIColor * _Nonnull)checkboxOffColor userNameTextColor:(UIColor * _Nonnull)userNameTextColor userNameFont:(UIFont * _Nonnull)userNameFont userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor mutedStateBackgroundColor:(UIColor * _Nonnull)mutedStateBackgroundColor mutedStateIconColor:(UIColor * _Nonnull)mutedStateIconColor subInfoTextColor:(UIColor * _Nonnull)subInfoTextColor subInfoFont:(UIFont * _Nonnull)subInfoFont moreButtonColor:(UIColor * _Nonnull)moreButtonColor moreButtonDisabledColor:(UIColor * _Nonnull)moreButtonDisabledColor separateColor:(UIColor * _Nonnull)separateColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull checkboxOnColor;
@property (nonatomic, strong) UIColor * _Nonnull checkboxOffColor;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull mutedStateBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull mutedStateIconColor;
@property (nonatomic, strong) UIColor * _Nonnull subInfoTextColor;
@property (nonatomic, strong) UIFont * _Nonnull subInfoFont;
@property (nonatomic, strong) UIColor * _Nonnull moreButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull moreButtonDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull separateColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16SBUUserListTheme")
@interface SBUUserListTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserListTheme * _Nonnull light;)
+ (SBUUserListTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserListTheme * _Nonnull dark;)
+ (SBUUserListTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationShadowColor:(UIColor * _Nonnull)navigationShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor rightBarButtonSelectedTintColor:(UIColor * _Nonnull)rightBarButtonSelectedTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonSelectedTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUUserMessageCell")
@interface SBUUserMessageCell : SBUContentBaseMessageCell
@property (nonatomic, strong) UIView * _Nonnull messageTextView;
@property (nonatomic, readonly, strong) SBDUserMessage * _Nullable userMessage;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDUserMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView receiptState:(enum SBUMessageReceiptState)receiptState groupPosition:(enum MessageGroupPosition)groupPosition withTextView:(BOOL)withTextView;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface UIImage (SWIFT_EXTENSION(SendBirdUIKit))
- (UIImage * _Nonnull)sbu_withTintColor:(UIColor * _Nullable)tintColor SWIFT_WARN_UNUSED_RESULT;
@end










@interface UINavigationController (SWIFT_EXTENSION(SendBirdUIKit))
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
@end




@interface UIView (SWIFT_EXTENSION(SendBirdUIKit))
+ (UINib * _Nonnull)sbu_loadNib SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nonnull)sbu_loadViewFromNib SWIFT_WARN_UNUSED_RESULT;
@end





/// This is an enumeration used to display <code>UserCell</code> by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, UserListType, open) {
  UserListTypeNone = 0,
  UserListTypeCreateChannel = 1,
  UserListTypeChannelMembers = 2,
  UserListTypeInviteUser = 3,
  UserListTypeReaction = 4,
  UserListTypeOperators = 5,
  UserListTypeMutedMembers = 6,
  UserListTypeBannedMembers = 7,
};


SWIFT_CLASS("_TtC13SendBirdUIKit12UserNameView")
@interface UserNameView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import SendBirdSDK;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SendBirdUIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, ChannelEditType, open) {
  ChannelEditTypeName = 0,
  ChannelEditTypeImage = 1,
};

/// This is an enumeration used in <code>InviteUserViewController</code> to load user list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelInviteListType, open) {
  ChannelInviteListTypeNone = 0,
  ChannelInviteListTypeUsers = 1,
  ChannelInviteListTypeOperators = 2,
};

/// This is an enumeration used in <code>MemberListViewController</code> to load member list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelMemberListType, open) {
  ChannelMemberListTypeNone = 0,
  ChannelMemberListTypeChannelMembers = 1,
  ChannelMemberListTypeOperators = 2,
  ChannelMemberListTypeMutedMembers = 3,
  ChannelMemberListTypeBannedMembers = 4,
};

/// This is an enumeration used to handling action and display by type in <code>ChannelSettingsViewController</code> and <code>ChannelSettingCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelSettingItemType, open) {
  ChannelSettingItemTypeModerations = 0,
  ChannelSettingItemTypeNotifications = 1,
  ChannelSettingItemTypeMembers = 2,
  ChannelSettingItemTypeLeave = 3,
};

/// This is an enumeration for channel type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelType, open) {
  ChannelTypeGroup = 0,
  ChannelTypeSupergroup = 1,
  ChannelTypeBroadcast = 2,
};

typedef SWIFT_ENUM(NSInteger, EmptyViewType, open) {
  EmptyViewTypeNone = 0,
  EmptyViewTypeNoChannels = 1,
  EmptyViewTypeNoMessages = 2,
  EmptyViewTypeNoMutedMembers = 3,
  EmptyViewTypeNoBannedMembers = 4,
  EmptyViewTypeError = 5,
};

typedef SWIFT_ENUM(NSInteger, FailedMessageOption, open) {
  FailedMessageOptionRetry = 0,
  FailedMessageOptionRemove = 1,
};

typedef SWIFT_ENUM(uint8_t, LogType, open) {
  LogTypeNone = 0b00000000,
  LogTypeError = 0b00000001,
  LogTypeWarning = 0b00000010,
  LogTypeInfo = 0b00000100,
  LogTypeAll = 0b00000111,
};

typedef SWIFT_ENUM(NSInteger, MediaResourceType, open) {
  MediaResourceTypeCamera = 0,
  MediaResourceTypeLibrary = 1,
  MediaResourceTypeDocument = 2,
  MediaResourceTypeUnknown = 3,
};

typedef SWIFT_ENUM(NSInteger, MemberListType, open) {
  MemberListTypeNone = 0,
  MemberListTypeCreateChannel = 1,
  MemberListTypeChannelMembers = 2,
  MemberListTypeInviteUser = 3,
  MemberListTypeReaction = 4,
};

typedef SWIFT_ENUM(NSInteger, MessageEditItem, open) {
  MessageEditItemCopy = 0,
  MessageEditItemEdit = 1,
  MessageEditItemDelete = 2,
};

typedef SWIFT_ENUM(NSInteger, MessageFileType, open) {
  MessageFileTypeImage = 0,
  MessageFileTypeVideo = 1,
  MessageFileTypeAudio = 2,
  MessageFileTypePdf = 3,
  MessageFileTypeEtc = 4,
};

typedef SWIFT_ENUM(NSInteger, MessageGroupPosition, open) {
  MessageGroupPositionNone = 0,
  MessageGroupPositionTop = 1,
  MessageGroupPositionMiddle = 2,
  MessageGroupPositionBottom = 3,
};

typedef SWIFT_ENUM(NSInteger, MessagePosition, open) {
  MessagePositionLeft = 0,
  MessagePositionRight = 1,
  MessagePositionCenter = 2,
};

@class NSCoder;

SWIFT_CLASS("_TtC13SendBirdUIKit18MessageProfileView")
@interface MessageProfileView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16MessageStateView")
@interface MessageStateView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end

/// This is an enumeration used to handling action and display by type in <code>MederationsViewController</code> and <code>ModerationCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ModerationItemType, open) {
  ModerationItemTypeOperators = 0,
  ModerationItemTypeMutedMembers = 1,
  ModerationItemTypeBannedMembers = 2,
  ModerationItemTypeFreezeChannel = 3,
};

@class SBUUser;

@interface NSArray<ObjectType> (SWIFT_EXTENSION(SendBirdUIKit))
- (NSArray<NSString *> * _Nonnull)sbu_getUserIds SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)sbu_getUserNicknames SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SBUUser *> * _Nonnull)sbu_convertUserList SWIFT_WARN_UNUSED_RESULT;
@end




@interface NSObject (SWIFT_EXTENSION(SendBirdUIKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sbu_className;)
+ (NSString * _Nonnull)sbu_className SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull sbu_className;
@end

@class SBDBaseMessage;
enum SBUMessageReceiptState : NSInteger;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUBaseMessageCell")
@interface SBUBaseMessageCell : UITableViewCell
@property (nonatomic, strong) SBDBaseMessage * _Nonnull message;
@property (nonatomic) enum MessagePosition position;
@property (nonatomic) enum MessageGroupPosition groupPosition;
@property (nonatomic) enum SBUMessageReceiptState receiptState;
@property (nonatomic, strong) UIView * _Nonnull messageContentView;
@property (nonatomic, strong) UIView * _Nonnull dateView;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
/// This function configure a cell using informations.
/// \param message Message object
///
/// \param position Cell position (left / right / center)
///
/// \param hideDateView Hide or expose date information
///
/// \param receiptState ReadReceipt state
///
- (void)configureWithMessage:(SBDBaseMessage * _Nonnull)message position:(enum MessagePosition)position hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)prepareForReuse;
@end

@class UILabel;
@class SBDAdminMessage;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit19SBUAdminMessageCell")
@interface SBUAdminMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UILabel * _Nonnull messageLabel;
- (void)setupViews;
- (void)setupAutolayout;
- (void)layoutSubviews;
- (void)configure:(SBDAdminMessage * _Nonnull)message hideDateView:(BOOL)hideDateView;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit12SBUAvailable")
@interface SBUAvailable : NSObject
/// This method checks if the application support super group channel.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if super group channel can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportSuperGroupChannel SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support broadcast channel.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if broadcast channel can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportBroadcastChannel SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support reactions.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if the reaction operation can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportReactions SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support og metadata.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if the og metadata can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportOgTag SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit18SBUBaseChannelCell")
@interface SBUBaseChannelCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC13SendBirdUIKit19SBUChannelCellTheme")
@interface SBUChannelCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelCellTheme * _Nonnull light;)
+ (SBUChannelCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelCellTheme * _Nonnull dark;)
+ (SBUChannelCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor titleFont:(UIFont * _Nonnull)titleFont titleTextColor:(UIColor * _Nonnull)titleTextColor memberCountFont:(UIFont * _Nonnull)memberCountFont memberCountTextColor:(UIColor * _Nonnull)memberCountTextColor lastUpdatedTimeFont:(UIFont * _Nonnull)lastUpdatedTimeFont lastUpdatedTimeTextColor:(UIColor * _Nonnull)lastUpdatedTimeTextColor messageFont:(UIFont * _Nonnull)messageFont messageTextColor:(UIColor * _Nonnull)messageTextColor broadcastMarkTintColor:(UIColor * _Nonnull)broadcastMarkTintColor freezeStateTintColor:(UIColor * _Nonnull)freezeStateTintColor unreadCountBackgroundColor:(UIColor * _Nonnull)unreadCountBackgroundColor unreadCountTextColor:(UIColor * _Nonnull)unreadCountTextColor unreadCountFont:(UIFont * _Nonnull)unreadCountFont separatorLineColor:(UIColor * _Nonnull)separatorLineColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleTextColor;
@property (nonatomic, strong) UIFont * _Nonnull memberCountFont;
@property (nonatomic, strong) UIColor * _Nonnull memberCountTextColor;
@property (nonatomic, strong) UIFont * _Nonnull lastUpdatedTimeFont;
@property (nonatomic, strong) UIColor * _Nonnull lastUpdatedTimeTextColor;
@property (nonatomic, strong) UIFont * _Nonnull messageFont;
@property (nonatomic, strong) UIColor * _Nonnull messageTextColor;
@property (nonatomic, strong) UIColor * _Nonnull broadcastMarkTintColor;
@property (nonatomic, strong) UIColor * _Nonnull freezeStateTintColor;
@property (nonatomic, strong) UIColor * _Nonnull unreadCountBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull unreadCountTextColor;
@property (nonatomic, strong) UIFont * _Nonnull unreadCountFont;
@property (nonatomic, strong) UIColor * _Nonnull separatorLineColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit19SBUChannelListTheme")
@interface SBUChannelListTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelListTheme * _Nonnull light;)
+ (SBUChannelListTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelListTheme * _Nonnull dark;)
+ (SBUChannelListTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationBarShadowColor:(UIColor * _Nonnull)navigationBarShadowColor backgroundColor:(UIColor * _Nonnull)backgroundColor notificationOnBackgroundColor:(UIColor * _Nonnull)notificationOnBackgroundColor notificationOnTintColor:(UIColor * _Nonnull)notificationOnTintColor notificationOffBackgroundColor:(UIColor * _Nonnull)notificationOffBackgroundColor notificationOffTintColor:(UIColor * _Nonnull)notificationOffTintColor leaveBackgroundColor:(UIColor * _Nonnull)leaveBackgroundColor leaveTintColor:(UIColor * _Nonnull)leaveTintColor alertBackgroundColor:(UIColor * _Nonnull)alertBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOnBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOnTintColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOffBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOffTintColor;
@property (nonatomic, strong) UIColor * _Nonnull leaveBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leaveTintColor;
@property (nonatomic, strong) UIColor * _Nonnull alertBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIBarButtonItem;
@class SBDGroupChannel;
@class SBDGroupChannelListQuery;
@class NSBundle;
@class UINib;

SWIFT_CLASS("_TtC13SendBirdUIKit28SBUChannelListViewController")
@interface SBUChannelListViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// This is a function that allows you to select the channel type when creating a channel.
/// If set to the nil value, it is moved to groupChannel creation.
/// note:
/// Type: GroupChannel / SuperGroupChannel / BroadcastChannel
/// since:
/// 1.2.0
@property (nonatomic, strong) UIView * _Nullable createChannelTypeSelector;
/// This object has a list of all channels.
@property (nonatomic, readonly, copy) NSArray<SBDGroupChannel *> * _Nonnull channelList;
/// This is a query used to get a list of channels. Only getter is provided, please use initialization function to set query directly.
/// note:
/// For query properties, see <code>SBDGroupChannelListQuery</code> class.
/// since:
/// 1.0.11
@property (nonatomic, readonly, strong) SBDGroupChannelListQuery * _Nullable channelListQuery;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelListViewController()'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
/// You can initialize the class through this function.
/// If you have <code>channelListQuery</code>, please set it. If not set, it is used as default value.
/// See the example below for query generation.
/// \code
///     let query = SBDGroupChannel.createMyGroupChannelListQuery()
///     query?.includeEmptyChannel = false
///     query?.includeFrozenChannel = true
///     ...
///
/// \endcodesince:
/// 1.0.11
/// \param channelListQuery Your own <code>SBDGroupChannelListQuery</code> object
///
- (nonnull instancetype)initWithChannelListQuery:(SBDGroupChannelListQuery * _Nullable)channelListQuery OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// Changes push trigger option on a channel.
/// since:
/// 1.0.9
/// \param option Push trigger option to change
///
/// \param channel Channel to change option
///
/// \param completionHandler Completion handler
///
- (void)changePushTriggerOptionWithOption:(SBDGroupChannelPushTriggerOption)option channel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// Leaves the channel.
/// since:
/// 1.0.9
/// \param channel Channel to leave
///
/// \param completionHandler Completion handler
///
- (void)leaveChannel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the channelViewController.
/// If you want to use a custom channelViewController, override it and implement it.
/// \param channelUrl channel url for use in channelViewController.
///
- (void)showChannelWithChannelUrl:(NSString * _Nonnull)channelUrl;
/// This is a function that shows the channel type selector when a supergroup/broadcast channel can be set.
/// <ul>
///   <li>
///     If both types cannot be set, it moves directly to the group channel creation viewController.
///   </li>
///   <li>
///     If you want to use a custom createChannelTypeSelector or createChannel action, override it and implement it.
///   </li>
/// </ul>
/// since:
/// 1.2.0
- (void)showCreateChannelTypeSelector;
/// This is a function that shows the channel creation viewController with channel type.
/// If you want to use a custom createChannelViewController, override it and implement it.
/// \param type Using the Specified Type in CreateChannelViewController (default: <code>.group</code>)
///
- (void)showCreateChannelWithType:(enum ChannelType)type;
/// Used to register a custom cell as a base cell based on SBUBaseChannelCell.
/// \param channelCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithChannelCell:(SBUBaseChannelCell * _Nonnull)channelCell nib:(UINib * _Nullable)nib;
/// Used to register a custom cell as a additional cell based on SBUBaseChannelCell.
/// \param customCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithCustomCell:(SBUBaseChannelCell * _Nullable)customCell nib:(UINib * _Nullable)nib;
/// This is used to check the loading status and control loading indicator.
/// \param loadingState Set to true when the list is loading.
///
/// \param showIndicator If true, the loading indicator is started, and if false, the indicator is stopped.
///
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator;
/// If an error occurs in viewController, a message is sent through here.
/// If necessary, override to handle errors.
/// \param message error message
///
- (void)didReceiveError:(NSString * _Nullable)message;
@end


SWIFT_PROTOCOL("_TtP13SendBirdUIKit20SBUEmptyViewDelegate_")
@protocol SBUEmptyViewDelegate <NSObject>
- (void)didSelectRetry;
@end


@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end


/// This delegate is used in the class to handle the action.
SWIFT_PROTOCOL("_TtP13SendBirdUIKit36SBUCreateChannelTypeSelectorDelegate_")
@protocol SBUCreateChannelTypeSelectorDelegate
/// This function notifies the <code>SBUchannelListViewController</code> when closing the selector.
- (void)didSelectCloseSelector;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create group channel menu.
- (void)didSelectCreateGroupChannel;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create super group channel menu.
- (void)didSelectCreateSuperGroupChannel;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create broadcast channel menu.
- (void)didSelectCreateBroadcastChannel;
@end


@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUCreateChannelTypeSelectorDelegate>
- (void)didSelectCloseSelector;
- (void)didSelectCreateGroupChannel;
- (void)didSelectCreateSuperGroupChannel;
- (void)didSelectCreateBroadcastChannel;
@end

@class UITableView;
@class UISwipeActionsConfiguration;
@class UITableViewRowAction;

@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
- (NSArray<UITableViewRowAction *> * _Nullable)tableView:(UITableView * _Nonnull)tableView editActionsForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,deprecated=13.0);
@end

@class SBDUser;
@class SBDBaseChannel;

@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate, SBDConnectionDelegate>
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)didSucceedReconnection;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit23SBUChannelSettingsTheme")
@interface SBUChannelSettingsTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelSettingsTheme * _Nonnull light;)
+ (SBUChannelSettingsTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelSettingsTheme * _Nonnull dark;)
+ (SBUChannelSettingsTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationShadowColor:(UIColor * _Nonnull)navigationShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor cellTextFont:(UIFont * _Nonnull)cellTextFont cellTextColor:(UIColor * _Nonnull)cellTextColor cellSubTextFont:(UIFont * _Nonnull)cellSubTextFont cellSubTextColor:(UIColor * _Nonnull)cellSubTextColor cellSwitchColor:(UIColor * _Nonnull)cellSwitchColor cellSeparateColor:(UIColor * _Nonnull)cellSeparateColor cellTypeIconTintColor:(UIColor * _Nonnull)cellTypeIconTintColor cellArrowIconTintColor:(UIColor * _Nonnull)cellArrowIconTintColor cellLeaveIconColor:(UIColor * _Nonnull)cellLeaveIconColor userNameFont:(UIFont * _Nonnull)userNameFont userNameTextColor:(UIColor * _Nonnull)userNameTextColor itemTextColor:(UIColor * _Nonnull)itemTextColor itemColor:(UIColor * _Nonnull)itemColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull cellTextFont;
@property (nonatomic, strong) UIColor * _Nonnull cellTextColor;
@property (nonatomic, strong) UIFont * _Nonnull cellSubTextFont;
@property (nonatomic, strong) UIColor * _Nonnull cellSubTextColor;
@property (nonatomic, strong) UIColor * _Nonnull cellSwitchColor;
@property (nonatomic, strong) UIColor * _Nonnull cellSeparateColor;
@property (nonatomic, strong) UIColor * _Nonnull cellTypeIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull cellArrowIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull cellLeaveIconColor;
@property (nonatomic, strong) UIColor * _Nonnull cellNotificationIconColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellTypeIconTintColor");
@property (nonatomic, strong) UIColor * _Nonnull cellMemberIconColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellTypeIconTintColor");
@property (nonatomic, strong) UIColor * _Nonnull cellMemberButtonColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellArrowIconTintColor");
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIColor * _Nonnull itemTextColor;
@property (nonatomic, strong) UIColor * _Nonnull itemColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;
@class SBDGroupChannelParams;

SWIFT_CLASS("_TtC13SendBirdUIKit32SBUChannelSettingsViewController")
@interface SBUChannelSettingsViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, strong) UIView * _Nullable userInfoView;
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
/// One of two must be set.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithChannelUrl:'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithChannelUrl:'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
- (void)updateChannelInfoWithChannelName:(NSString * _Nullable)channelName SWIFT_DEPRECATED_MSG("deprecated in 1.0.9", "updateChannelWithChannelName:coverImage:");
/// Used to update the channel name or cover image. <code>channelName</code> and<code> coverImage</code> are used for updating only the set values.
/// since:
/// 1.0.9
/// \param channelName Channel name to update
///
/// \param coverImage Cover image to update
///
- (void)updateChannelWithChannelName:(NSString * _Nullable)channelName coverImage:(UIImage * _Nullable)coverImage;
/// Updates the channel with channelParams.
/// You can update a channel by setting various properties of ChannelParams.
/// since:
/// 1.0.9
/// \param params <code>SBDGroupChannelParams</code> class object
///
- (void)updateChannelWithParams:(SBDGroupChannelParams * _Nonnull)params;
/// Changes push trigger option on channel.
/// \param isOn notification status
///
- (void)changeNotificationWithIsOn:(BOOL)isOn;
/// Leaves the channel.
- (void)leaveChannel;
/// If you want to use a custom memberListViewController, override it and implement it.
- (void)showMemberList;
/// If you want to use a custom moderationsViewController, override it and implement it.
/// since:
/// 1.2.0
- (void)showModerationList;
/// Open the channel image selection menu.
- (void)selectChannelImage;
/// Open the channel name change popup.
- (void)changeChannelName;
/// If an error occurs in viewController, a message is sent through here.
/// If necessary, override to handle errors.
/// \param message error message
///
- (void)didReceiveError:(NSString * _Nullable)message;
@end



@class UIImagePickerController;

@interface SBUChannelSettingsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIImagePickerControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
@end


@interface SBUChannelSettingsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit15SBUChannelTheme")
@interface SBUChannelTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelTheme * _Nonnull light;)
+ (SBUChannelTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelTheme * _Nonnull dark;)
+ (SBUChannelTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationBarShadowColor:(UIColor * _Nonnull)navigationBarShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor removeItemColor:(UIColor * _Nonnull)removeItemColor cancelItemColor:(UIColor * _Nonnull)cancelItemColor alertRemoveColor:(UIColor * _Nonnull)alertRemoveColor alertCancelColor:(UIColor * _Nonnull)alertCancelColor menuTextColor:(UIColor * _Nonnull)menuTextColor channelStateBannerFont:(UIFont * _Nonnull)channelStateBannerFont channelStateBannerTextColor:(UIColor * _Nonnull)channelStateBannerTextColor channelStateBannerBackgroundColor:(UIColor * _Nonnull)channelStateBannerBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull removeItemColor;
@property (nonatomic, strong) UIColor * _Nonnull cancelItemColor;
@property (nonatomic, strong) UIColor * _Nonnull alertRemoveColor;
@property (nonatomic, strong) UIColor * _Nonnull alertCancelColor;
@property (nonatomic, strong) UIColor * _Nonnull menuTextColor;
@property (nonatomic, strong) UIFont * _Nonnull channelStateBannerFont;
@property (nonatomic, strong) UIColor * _Nonnull channelStateBannerTextColor;
@property (nonatomic, strong) UIColor * _Nonnull channelStateBannerBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SBUMessageInputView;
@class SBDMessageListParams;
@class SBDUserMessageParams;
@class SBDFileMessageParams;
@class SBDUserMessage;
@class UIScrollView;

SWIFT_CLASS("_TtC13SendBirdUIKit24SBUChannelViewController")
@interface SBUChannelViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, strong) UIView * _Nullable newMessageInfoView;
@property (nonatomic, strong) SBUMessageInputView * _Nonnull messageInputView;
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable channelStateBanner;
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// This object is used to import a list of messages, send messages, modify messages, and so on, and is created during initialization.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
/// This object has a list of all success messages synchronized with the server.
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull messageList;
/// This object that has resendable messages, including <code>pending messages</code> and <code>failed messages</code>.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, SBDBaseMessage *> * _Nonnull resendableMessages;
/// This is a params used to get a list of messages. Only getter is provided, please use initialization function to set params directly.
/// note:
/// For params properties, see <code>SBDMessageListParams</code> class.
/// since:
/// 1.0.11
@property (nonatomic, readonly, strong) SBDMessageListParams * _Nonnull messageListParams;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelViewController.init(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeReplies = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>nextResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeReplies = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>nextResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
/// Sends a user message with only text.
/// since:
/// 1.0.9
/// \param text String value
///
- (void)sendUserMessageWithText:(NSString * _Nonnull)text;
/// Sends a user messag with messageParams.
/// You can send a message by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param messageParams <code>SBDUserMessageParams</code> class object
///
- (void)sendUserMessageWithMessageParams:(SBDUserMessageParams * _Nonnull)messageParams;
/// Sends a file message with file data, file name, mime type.
/// since:
/// 1.0.9
/// \param fileData <code>Data</code> class object
///
/// \param fileName file name. Used when displayed in channel list.
///
/// \param mimeType file’s mime type.
///
- (void)sendFileMessageWithFileData:(NSData * _Nonnull)fileData fileName:(NSString * _Nonnull)fileName mimeType:(NSString * _Nonnull)mimeType;
/// Sends a file message with messageParams.
/// You can send a file message by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param messageParams <code>SBDFileMessageParams</code> class object
///
- (void)sendFileMessageWithMessageParams:(SBDFileMessageParams * _Nonnull)messageParams;
/// Resends a message with failedMessage object.
/// since:
/// 1.0.9
/// \param failedMessage <code>SBDBaseMessage</code> class based failed object
///
- (void)resendMessageWithFailedMessage:(SBDBaseMessage * _Nonnull)failedMessage;
/// Updates a user message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDUserMessage</code> object to update
///
/// \param text String to be updated
///
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message text:(NSString * _Nonnull)text;
/// Updates a user message with message object and messageParams.
/// You can update messages by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param message <code>SBDUserMessage</code> object to update
///
/// \param messageParams <code>SBDUserMessageParams</code> class object
///
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message messageParams:(SBDUserMessageParams * _Nonnull)messageParams;
/// Deletes a message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDBaseMessage</code> based class object
///
- (void)deleteMessageWithMessage:(SBDBaseMessage * _Nonnull)message;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function is used to add or delete reactions.
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object to update
///
/// \param emojiKey set emoji key
///
/// \param didSelect set reaction state
///
- (void)setReactionWithMessage:(SBDBaseMessage * _Nonnull)message emojiKey:(NSString * _Nonnull)emojiKey didSelect:(BOOL)didSelect;
/// This function increases the new message count.
- (void)increaseNewMessageCount;
- (void)sendImageFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)sendVideoFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)sendDocumentFileMessageWithDocumentUrls:(NSArray<NSURL *> * _Nonnull)documentUrls;
/// If you want to use a custom channelSettingsViewController, override it and implement it.
- (void)showChannelSettings;
/// This function presents <code>SBUEmojiListViewController</code>
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object
///
- (void)showEmojiListModalWithMessage:(SBDBaseMessage * _Nonnull)message;
- (void)registerWithAdminMessageCell:(SBUBaseMessageCell * _Nonnull)adminMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithUserMessageCell:(SBUBaseMessageCell * _Nonnull)userMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithFileMessageCell:(SBUBaseMessageCell * _Nonnull)fileMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithCustomMessageCell:(SBUBaseMessageCell * _Nullable)customMessageCell nib:(UINib * _Nullable)nib;
/// This function sets the cell’s tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
- (void)setTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message;
/// This function sets the cell’s long tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
/// \param indexPath indexpath of cell
///
- (void)setLongTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message indexPath:(NSIndexPath * _Nonnull)indexPath;
/// This function sets the cell’s tap emoji gesture handling.
/// since:
/// 1.1.0
/// \param cell Message cell object
///
/// \param emojiKey emoji key
///
- (void)setTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey;
/// This function sets the cell’s long tap emoji gesture handling.
/// since:
/// 1.1.0
/// \param cell Message cell object
///
/// \param emojiKey emoji key
///
- (void)setLongTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey;
/// This is used to messageInputView state update.
/// since:
/// 1.2.0
- (void)updateMessageInputModeState;
- (BOOL)checkSameDayAsNextMessageWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)configureOffset;
/// This is used to check the loading status and control loading indicator.
/// \param loadingState Set to true when the list is loading.
///
/// \param showIndicator If true, the loading indicator is started, and if false, the indicator is stopped.
///
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator;
/// This is a function that gets the location of the message to be grouped.
/// Only successful messages can be grouped.
/// since:
/// 1.2.1
/// \param currentIndex Index of current message in the message list
///
///
/// returns:
/// Position of a message when grouped
- (enum MessageGroupPosition)getMessageGroupingPositionWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)onClickBack;
- (void)onClickSetting;
- (void)scrollToBottomWithAnimated:(BOOL)animated;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end

@class SBDFileMessage;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit))
- (void)didSelectDeleteImageWithMessage:(SBDFileMessage * _Nonnull)message;
@end

@class UIPresentationController;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIViewControllerTransitioningDelegate>
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end

@class UIDocumentPickerViewController;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIDocumentPickerDelegate>
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentAtURL:(NSURL * _Nonnull)url;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIImagePickerControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCellIdentifierBy:(SBDBaseMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP13SendBirdUIKit27SBUMessageInputViewDelegate_")
@protocol SBUMessageInputViewDelegate <NSObject>
@optional
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
- (void)messageInputViewDidStartTyping;
- (void)messageInputViewDidEndTyping;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUMessageInputViewDelegate>
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
- (void)messageInputViewDidStartTyping;
- (void)messageInputViewDidEndTyping;
@end

@class SBDReactionEvent;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate, SBDConnectionDelegate>
- (void)channel:(SBDBaseChannel * _Nonnull)sender didReceiveMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender didUpdateMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channel:(SBDBaseChannel * _Nonnull)sender updatedReaction:(SBDReactionEvent * _Nonnull)reactionEvent;
- (void)channelDidUpdateReadReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateDeliveryReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateTypingStatus:(SBDGroupChannel * _Nonnull)sender;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasMuted:(SBDUser * _Nonnull)user;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasUnmuted:(SBDUser * _Nonnull)user;
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)didSucceedReconnection;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit11SBUColorSet")
@interface SBUColorSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary100;)
+ (UIColor * _Nonnull)primary100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary200;)
+ (UIColor * _Nonnull)primary200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary300;)
+ (UIColor * _Nonnull)primary300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary400;)
+ (UIColor * _Nonnull)primary400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary500;)
+ (UIColor * _Nonnull)primary500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary100;)
+ (UIColor * _Nonnull)secondary100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary200;)
+ (UIColor * _Nonnull)secondary200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary300;)
+ (UIColor * _Nonnull)secondary300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary400;)
+ (UIColor * _Nonnull)secondary400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary500;)
+ (UIColor * _Nonnull)secondary500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background100;)
+ (UIColor * _Nonnull)background100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background200;)
+ (UIColor * _Nonnull)background200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background300;)
+ (UIColor * _Nonnull)background300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background400;)
+ (UIColor * _Nonnull)background400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background500;)
+ (UIColor * _Nonnull)background500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background600;)
+ (UIColor * _Nonnull)background600 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground600:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background700;)
+ (UIColor * _Nonnull)background700 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground700:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull overlay01;)
+ (UIColor * _Nonnull)overlay01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOverlay01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull overlay02;)
+ (UIColor * _Nonnull)overlay02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOverlay02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight01;)
+ (UIColor * _Nonnull)onlight01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight02;)
+ (UIColor * _Nonnull)onlight02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight03;)
+ (UIColor * _Nonnull)onlight03 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight03:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight04;)
+ (UIColor * _Nonnull)onlight04 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight04:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark01;)
+ (UIColor * _Nonnull)ondark01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark02;)
+ (UIColor * _Nonnull)ondark02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark03;)
+ (UIColor * _Nonnull)ondark03 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark03:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark04;)
+ (UIColor * _Nonnull)ondark04 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark04:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull error;)
+ (UIColor * _Nonnull)error SWIFT_WARN_UNUSED_RESULT;
+ (void)setError:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull information;)
+ (UIColor * _Nonnull)information SWIFT_WARN_UNUSED_RESULT;
+ (void)setInformation:(UIColor * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit17SBUComponentTheme")
@interface SBUComponentTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUComponentTheme * _Nonnull light;)
+ (SBUComponentTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUComponentTheme * _Nonnull dark;)
+ (SBUComponentTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithEmptyViewBackgroundColor:(UIColor * _Nonnull)emptyViewBackgroundColor emptyViewStatusFont:(UIFont * _Nonnull)emptyViewStatusFont emptyViewStatusTintColor:(UIColor * _Nonnull)emptyViewStatusTintColor emptyViewRetryButtonTintColor:(UIColor * _Nonnull)emptyViewRetryButtonTintColor emptyViewRetryButtonFont:(UIFont * _Nonnull)emptyViewRetryButtonFont overlayColor:(UIColor * _Nonnull)overlayColor backgroundColor:(UIColor * _Nonnull)backgroundColor highlightedColor:(UIColor * _Nonnull)highlightedColor buttonTextColor:(UIColor * _Nonnull)buttonTextColor separatorColor:(UIColor * _Nonnull)separatorColor shadowColor:(UIColor * _Nonnull)shadowColor closeBarButtonTintColor:(UIColor * _Nonnull)closeBarButtonTintColor alertTitleColor:(UIColor * _Nonnull)alertTitleColor alertTitleFont:(UIFont * _Nonnull)alertTitleFont alertDetailColor:(UIColor * _Nonnull)alertDetailColor alertDetailFont:(UIFont * _Nonnull)alertDetailFont alertPlaceholderColor:(UIColor * _Nonnull)alertPlaceholderColor alertButtonColor:(UIColor * _Nonnull)alertButtonColor alertErrorColor:(UIColor * _Nonnull)alertErrorColor alertButtonFont:(UIFont * _Nonnull)alertButtonFont alertTextFieldBackgroundColor:(UIColor * _Nonnull)alertTextFieldBackgroundColor alertTextFieldTintColor:(UIColor * _Nonnull)alertTextFieldTintColor alertTextFieldFont:(UIFont * _Nonnull)alertTextFieldFont actionSheetTextFont:(UIFont * _Nonnull)actionSheetTextFont actionSheetTextColor:(UIColor * _Nonnull)actionSheetTextColor actionSheetSubTextFont:(UIFont * _Nonnull)actionSheetSubTextFont actionSheetSubTextColor:(UIColor * _Nonnull)actionSheetSubTextColor actionSheetItemColor:(UIColor * _Nonnull)actionSheetItemColor actionSheetErrorColor:(UIColor * _Nonnull)actionSheetErrorColor actionSheetButtonFont:(UIFont * _Nonnull)actionSheetButtonFont newMessageFont:(UIFont * _Nonnull)newMessageFont newMessageTintColor:(UIColor * _Nonnull)newMessageTintColor newMessageBackground:(UIColor * _Nonnull)newMessageBackground newMessageHighlighted:(UIColor * _Nonnull)newMessageHighlighted titleOnlineStateColor:(UIColor * _Nonnull)titleOnlineStateColor titleColor:(UIColor * _Nonnull)titleColor titleFont:(UIFont * _Nonnull)titleFont titleStatusColor:(UIColor * _Nonnull)titleStatusColor titleStatusFont:(UIFont * _Nonnull)titleStatusFont menuTitleFont:(UIFont * _Nonnull)menuTitleFont userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor reactionBoxBackgroundColor:(UIColor * _Nonnull)reactionBoxBackgroundColor reactionBoxBorderLineColor:(UIColor * _Nonnull)reactionBoxBorderLineColor reactionBoxEmojiCountColor:(UIColor * _Nonnull)reactionBoxEmojiCountColor reactionBoxEmojiBackgroundColor:(UIColor * _Nonnull)reactionBoxEmojiBackgroundColor reactionBoxSelectedEmojiBackgroundColor:(UIColor * _Nonnull)reactionBoxSelectedEmojiBackgroundColor reactionBoxEmojiCountFont:(UIFont * _Nonnull)reactionBoxEmojiCountFont emojiCountColor:(UIColor * _Nonnull)emojiCountColor emojiSelectedCountColor:(UIColor * _Nonnull)emojiSelectedCountColor emojiSelectedUnderlineColor:(UIColor * _Nonnull)emojiSelectedUnderlineColor emojiCountFont:(UIFont * _Nonnull)emojiCountFont reactionMenuLineColor:(UIColor * _Nonnull)reactionMenuLineColor emojiListSelectedBackgroundColor:(UIColor * _Nonnull)emojiListSelectedBackgroundColor addReactionTintColor:(UIColor * _Nonnull)addReactionTintColor channelTypeSelectorItemTintColor:(UIColor * _Nonnull)channelTypeSelectorItemTintColor channelTypeSelectorItemTextColor:(UIColor * _Nonnull)channelTypeSelectorItemTextColor channelTypeSelectorItemFont:(UIFont * _Nonnull)channelTypeSelectorItemFont broadcastIconBackgroundColor:(UIColor * _Nonnull)broadcastIconBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull emptyViewStatusFont;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewStatusTintColor;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewRetryButtonTintColor;
@property (nonatomic, strong) UIFont * _Nonnull emptyViewRetryButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull alertTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull alertTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull alertDetailColor;
@property (nonatomic, strong) UIFont * _Nonnull alertDetailFont;
@property (nonatomic, strong) UIColor * _Nonnull alertPlaceholderColor;
@property (nonatomic, strong) UIColor * _Nonnull alertButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull alertErrorColor;
@property (nonatomic, strong) UIFont * _Nonnull alertButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull alertTextFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull alertTextFieldTintColor;
@property (nonatomic, strong) UIFont * _Nonnull alertTextFieldFont;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetTextFont;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetTextColor;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetSubTextFont;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetSubTextColor;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetItemColor;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetErrorColor;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetButtonFont;
@property (nonatomic, strong) UIFont * _Nonnull newMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull newMessageTintColor;
@property (nonatomic, strong) UIColor * _Nonnull newMessageBackground;
@property (nonatomic, strong) UIColor * _Nonnull newMessageHighlighted;
@property (nonatomic, strong) UIColor * _Nonnull titleOnlineStateColor;
@property (nonatomic, strong) UIColor * _Nonnull titleColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleStatusColor;
@property (nonatomic, strong) UIFont * _Nonnull titleStatusFont;
@property (nonatomic, strong) UIFont * _Nonnull menuTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull overlayColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull highlightedColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTextColor;
@property (nonatomic, strong) UIColor * _Nonnull separatorColor;
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
@property (nonatomic, strong) UIColor * _Nonnull closeBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxBorderLineColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxEmojiCountColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxEmojiBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxSelectedEmojiBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull reactionBoxEmojiCountFont;
@property (nonatomic, strong) UIColor * _Nonnull emojiCountColor;
@property (nonatomic, strong) UIColor * _Nonnull emojiSelectedCountColor;
@property (nonatomic, strong) UIColor * _Nonnull emojiSelectedUnderlineColor;
@property (nonatomic, strong) UIFont * _Nonnull emojiCountFont;
@property (nonatomic, strong) UIColor * _Nonnull emojiListSelectedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionMenuLineColor;
@property (nonatomic, strong) UIColor * _Nonnull addReactionTintColor;
@property (nonatomic, strong) UIColor * _Nonnull channelTypeSelectorItemTintColor;
@property (nonatomic, strong) UIColor * _Nonnull channelTypeSelectorItemTextColor;
@property (nonatomic, strong) UIFont * _Nonnull channelTypeSelectorItemFont;
@property (nonatomic, strong) UIColor * _Nonnull broadcastIconBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIStackView;
@class UILongPressGestureRecognizer;
@class UITapGestureRecognizer;

/// It is a base class used in message cell with contents.
/// since:
/// 1.2.1
SWIFT_CLASS("_TtC13SendBirdUIKit25SBUContentBaseMessageCell")
@interface SBUContentBaseMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UIStackView * _Nonnull userNameStackView;
@property (nonatomic, strong) UIStackView * _Nonnull contentsStackView;
@property (nonatomic, strong) UIView * _Nonnull userNameView;
@property (nonatomic, strong) UIView * _Nonnull profileView;
@property (nonatomic, strong) UIView * _Nonnull stateView;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView position:(enum MessagePosition)position groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)setMessageGrouping;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)onLongPressContentViewWithSender:(UILongPressGestureRecognizer * _Nullable)sender;
- (void)onTapContentViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (void)onTapProfileImageViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// This protocol is used to create a custom <code>CreateChannelTypeSelector</code>.
SWIFT_PROTOCOL("_TtP13SendBirdUIKit36SBUCreateChannelTypeSelectorProtocol_")
@protocol SBUCreateChannelTypeSelectorProtocol
/// This function shows selector view.
- (void)show;
/// This function dismisses selector view.
- (void)dismiss;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit30SBUCreateChannelViewController")
@interface SBUCreateChannelViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, readonly) enum ChannelType channelType;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUCreateChannelViewController(type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'init'");
- (nonnull instancetype)init;
/// If you have user objects, use this initialize function.
/// \param users <code>SBUUser</code> array object
///
/// \param type The type of channel to create (default: <code>.group</code>)
///
- (nonnull instancetype)initWithUsers:(NSArray<SBUUser *> * _Nullable)users type:(enum ChannelType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// Load user list.
/// If want using your custom user list, filled users with your custom user list.
/// \param reset <code>true</code> is reset user list and load new list
///
/// \param users customized <code>SBUUser</code> array for add to user list
///
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
/// Creates the channel with userIds.
/// since:
/// 1.0.9
/// \param userIds User Ids to include
///
- (void)createChannelWithUserIds:(NSArray<NSString *> * _Nonnull)userIds;
/// Creates the channel with channelParams.
/// You can create a channel by setting various properties of ChannelParams.
/// since:
/// 1.0.9
/// \param params <code>SBDGroupChannelParams</code> class object
///
- (void)createChannelWithParams:(SBDGroupChannelParams * _Nonnull)params;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUCreateChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIImageView;

SWIFT_CLASS("_TtC13SendBirdUIKit12SBUEmptyView")
@interface SBUEmptyView : UIView
@property (nonatomic) enum EmptyViewType type;
@property (nonatomic, weak) id <SBUEmptyViewDelegate> _Nullable delegate;
@property (nonatomic, strong) UIImageView * _Nonnull statusImageView;
@property (nonatomic, strong) UILabel * _Nonnull statusLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)layoutSubviews;
- (void)reloadData:(enum EmptyViewType)type;
/// Override this function to apply a custom type.
- (void)updateViews;
- (void)onClickRetry:(id _Nonnull)sender;
@end



IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUFileMessageCell")
@interface SBUFileMessageCell : SBUContentBaseMessageCell
@property (nonatomic, readonly, strong) SBDFileMessage * _Nullable fileMessage;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDFileMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUFontSet")
@interface SBUFontSet : NSObject
/// Medium, 18pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull h1;)
+ (UIFont * _Nonnull)h1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setH1:(UIFont * _Nonnull)value;
/// Bold, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull h2;)
+ (UIFont * _Nonnull)h2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setH2:(UIFont * _Nonnull)value;
/// Regular, 14pt, Line height: 20pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body1;)
+ (UIFont * _Nonnull)body1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody1:(UIFont * _Nonnull)value;
/// Regular, 14pt, Line height: 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body2;)
+ (UIFont * _Nonnull)body2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody2:(UIFont * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body3;)
+ (UIFont * _Nonnull)body3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody3:(UIFont * _Nonnull)value;
/// Semibold, 20pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button1;)
+ (UIFont * _Nonnull)button1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton1:(UIFont * _Nonnull)value;
/// Medium, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button2;)
+ (UIFont * _Nonnull)button2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton2:(UIFont * _Nonnull)value;
/// Medium, 14pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button3;)
+ (UIFont * _Nonnull)button3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton3:(UIFont * _Nonnull)value;
/// Bold, 12pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption1;)
+ (UIFont * _Nonnull)caption1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption1:(UIFont * _Nonnull)value;
/// Regular, 12pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption2;)
+ (UIFont * _Nonnull)caption2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption2:(UIFont * _Nonnull)value;
/// Regular, 11pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption3;)
+ (UIFont * _Nonnull)caption3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption3:(UIFont * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption4;)
+ (UIFont * _Nonnull)caption4 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption4:(UIFont * _Nonnull)value;
/// Medium, 16pt, Line hieght 22pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull subtitle1;)
+ (UIFont * _Nonnull)subtitle1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSubtitle1:(UIFont * _Nonnull)value;
/// Regular, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull subtitle2;)
+ (UIFont * _Nonnull)subtitle2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSubtitle2:(UIFont * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUGlobals")
@interface SBUGlobals : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ApplicationId;)
+ (NSString * _Nullable)ApplicationId SWIFT_WARN_UNUSED_RESULT;
+ (void)setApplicationId:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable AccessToken;)
+ (NSString * _Nullable)AccessToken SWIFT_WARN_UNUSED_RESULT;
+ (void)setAccessToken:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUser * _Nullable CurrentUser;)
+ (SBUUser * _Nullable)CurrentUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrentUser:(SBUUser * _Nullable)newCurrentUser;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL UsingMessageGrouping;)
+ (BOOL)UsingMessageGrouping SWIFT_WARN_UNUSED_RESULT;
+ (void)setUsingMessageGrouping:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUIconSet")
@interface SBUIconSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionLeave;)
+ (UIImage * _Nonnull)iconActionLeave SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionLeave:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionNotificationOn;)
+ (UIImage * _Nonnull)iconActionNotificationOn SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionNotificationOn:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionNotificationOff;)
+ (UIImage * _Nonnull)iconActionNotificationOff SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionNotificationOff:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconAdd;)
+ (UIImage * _Nonnull)iconAdd SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconAdd:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBack;)
+ (UIImage * _Nonnull)iconBack SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBack:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCamera;)
+ (UIImage * _Nonnull)iconCamera SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCamera:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPlus;)
+ (UIImage * _Nonnull)iconPlus SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPlus:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconChat;)
+ (UIImage * _Nonnull)iconChat SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconChat:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCheckbox;)
+ (UIImage * _Nonnull)iconCheckbox SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCheckbox:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCheckboxOff;)
+ (UIImage * _Nonnull)iconCheckboxOff SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCheckboxOff:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconClose;)
+ (UIImage * _Nonnull)iconClose SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconClose:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCopy;)
+ (UIImage * _Nonnull)iconCopy SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCopy:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCreate;)
+ (UIImage * _Nonnull)iconCreate SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCreate:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDelete;)
+ (UIImage * _Nonnull)iconDelete SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDelete:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDelivered;)
+ (UIImage * _Nonnull)iconDelivered SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDelivered:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDocument;)
+ (UIImage * _Nonnull)iconDocument SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDocument:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDownload;)
+ (UIImage * _Nonnull)iconDownload SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDownload:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDummy;)
+ (UIImage * _Nonnull)iconDummy SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDummy:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconEdit;)
+ (UIImage * _Nonnull)iconEdit SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconEdit:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconError;)
+ (UIImage * _Nonnull)iconError SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconError:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconErrorFilled;)
+ (UIImage * _Nonnull)iconErrorFilled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconErrorFilled:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconGif;)
+ (UIImage * _Nonnull)iconGif SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconGif:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconInfo;)
+ (UIImage * _Nonnull)iconInfo SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconInfo:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconLeave;)
+ (UIImage * _Nonnull)iconLeave SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconLeave:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMembers;)
+ (UIImage * _Nonnull)iconMembers SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMembers:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconModerations;)
+ (UIImage * _Nonnull)iconModerations SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconModerations:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastSmall;)
+ (UIImage * _Nonnull)iconBroadcastSmall SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastSmall:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastMedium;)
+ (UIImage * _Nonnull)iconBroadcastMedium SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastMedium:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastLarge;)
+ (UIImage * _Nonnull)iconBroadcastLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFreeze;)
+ (UIImage * _Nonnull)iconFreeze SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFreeze:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMute;)
+ (UIImage * _Nonnull)iconMute SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMute:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconNotifications;)
+ (UIImage * _Nonnull)iconNotifications SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconNotifications:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconThumbnailLight;)
+ (UIImage * _Nonnull)iconThumbnailLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconThumbnailLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconNoThumbnailLight;)
+ (UIImage * _Nonnull)iconNoThumbnailLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconNoThumbnailLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPhoto;)
+ (UIImage * _Nonnull)iconPhoto SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPhoto:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPlay;)
+ (UIImage * _Nonnull)iconPlay SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPlay:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconRead;)
+ (UIImage * _Nonnull)iconRead SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconRead:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconRefresh;)
+ (UIImage * _Nonnull)iconRefresh SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconRefresh:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconAvatarLight;)
+ (UIImage * _Nonnull)iconAvatarLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconAvatarLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSend;)
+ (UIImage * _Nonnull)iconSend SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSend:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSent;)
+ (UIImage * _Nonnull)iconSent SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSent:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFailed;)
+ (UIImage * _Nonnull)iconFailed SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFailed:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconShevronRight;)
+ (UIImage * _Nonnull)iconShevronRight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconShevronRight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconUser;)
+ (UIImage * _Nonnull)iconUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconUser:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSpinnerSmall;)
+ (UIImage * _Nonnull)iconSpinnerSmall SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSpinnerSmall:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSpinnerLarge;)
+ (UIImage * _Nonnull)iconSpinnerLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSpinnerLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFileDocument;)
+ (UIImage * _Nonnull)iconFileDocument SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFileDocument:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFileAudio;)
+ (UIImage * _Nonnull)iconFileAudio SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFileAudio:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconChevronDown;)
+ (UIImage * _Nonnull)iconChevronDown SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconChevronDown:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMore;)
+ (UIImage * _Nonnull)iconMore SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMore:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconOperator;)
+ (UIImage * _Nonnull)iconOperator SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconOperator:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMuted;)
+ (UIImage * _Nonnull)iconMuted SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMuted:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBanned;)
+ (UIImage * _Nonnull)iconBanned SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBanned:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMessage;)
+ (UIImage * _Nonnull)iconMessage SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMessage:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeGroup;)
+ (UIImage * _Nonnull)channelTypeGroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeGroup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeSupergroup;)
+ (UIImage * _Nonnull)channelTypeSupergroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeSupergroup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeBroadcast;)
+ (UIImage * _Nonnull)channelTypeBroadcast SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeBroadcast:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiHeartEyes;)
+ (UIImage * _Nonnull)emojiHeartEyes SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiHeartEyes:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiLaughing;)
+ (UIImage * _Nonnull)emojiLaughing SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiLaughing:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiSweatSmile;)
+ (UIImage * _Nonnull)emojiSweatSmile SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiSweatSmile:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiSob;)
+ (UIImage * _Nonnull)emojiSob SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiSob:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiRage;)
+ (UIImage * _Nonnull)emojiRage SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiRage:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiMoreLarge;)
+ (UIImage * _Nonnull)emojiMoreLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiMoreLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiThumbsup;)
+ (UIImage * _Nonnull)emojiThumbsup SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiThumbsup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiThubsdown;)
+ (UIImage * _Nonnull)emojiThubsdown SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiThubsdown:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiFail;)
+ (UIImage * _Nonnull)emojiFail SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiFail:(UIImage * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC13SendBirdUIKit27SBUInviteUserViewController")
@interface SBUInviteUserViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, readonly) enum ChannelInviteListType inviteListType;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController.init(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channel and users objects, use this initialize function.
/// \param channel Channel object
///
/// \param users <code>SBUUser</code> object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and users objects, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param users <code>SBUUser</code> object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// Load user list.
/// If want using your custom user list, filled users with your custom user list.
/// \param reset <code>true</code> is reset user list and load new list
///
/// \param users customized <code>SBUUser</code> array for add to user list
///
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// Make this function return the next list each time it is called.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
/// Invites users in the channel with selected userIds.
/// since:
/// 1.0.9
- (void)inviteUsers;
/// Invites users in the channel with directly generated userIds.
/// since:
/// 1.0.9
/// \param userIds User IDs to invite
///
- (void)inviteUsersWithUserIds:(NSArray<NSString *> * _Nonnull)userIds;
/// Promotes members as operator with selected userIds.
/// since:
/// 1.2.0
- (void)promoteToOperators;
/// Promotes members as operator with directly generated memberIds.
/// since:
/// 1.2.0
/// \param userIds member IDs to invite
///
- (void)promoteToOperatorsWithMemberIds:(NSArray<NSString *> * _Nonnull)memberIds;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
- (void)selectUserWithUser:(SBUUser * _Nonnull)user;
- (void)popToChannel;
- (void)popToPrevious;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUInviteUserViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class SBDError;

SWIFT_CLASS("_TtC13SendBirdUIKit7SBUMain")
@interface SBUMain : NSObject
+ (void)initializeWithApplicationId:(NSString * _Nonnull)applicationId;
+ (void)connectWithCompletionHandler:(void (^ _Nonnull)(SBDUser * _Nullable, SBDError * _Nullable))completionHandler;
+ (void)connectionCheckWithCompletionHandler:(void (^ _Nonnull)(SBDUser * _Nullable, SBDError * _Nullable))completionHandler;
+ (void)disconnectWithCompletionHandler:(void (^ _Nullable)(void))completionHandler;
+ (void)updateUserInfoWithNickname:(NSString * _Nullable)nickname profileUrl:(NSString * _Nullable)profileUrl completionHandler:(void (^ _Nullable)(SBDError * _Nullable))completionHandler;
+ (NSString * _Nonnull)getUIKitVersion SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("", "shortVersionString");
+ (NSString * _Nullable)versionString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)shortVersionString SWIFT_WARN_UNUSED_RESULT;
+ (void)registerPushWithDeviceToken:(NSData * _Nonnull)deviceToken completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)unregisterPushTokenWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)unregisterAllPushTokenWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)openChannelWithChannelUrl:(NSString * _Nonnull)channelUrl basedOnChannelList:(BOOL)basedOnChannelList;
/// You can activate log information for debugging.
/// <ul>
///   <li>
///     <code>Objective-C</code> uses bit masking. (e,g, <code>.error|.info</code>)
///   </li>
///   <li>
///     <code>Swift</code> uses a single type in this function.
///   </li>
///   <li>
///     default type: .none
///   </li>
/// </ul>
/// \param type LogType
///
+ (void)setLogLevel:(enum LogType)type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit27SBUMemberListViewController")
@interface SBUMemberListViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable emptyView;
@property (nonatomic, readonly) enum ChannelMemberListType memberListType;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull memberList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController(channelUrl:type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channel and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channel Channel object
///
/// \param members <code>SBUUser</code> array object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channelUrl Channel url string
///
/// \param members <code>SBUUser</code> array object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function to load the member list.
/// This requests the required list according to <code>memberListType</code>.
/// If you want using your custom member list, filled members with your custom member list.
/// since:
/// 1.2.0
/// \param reset <code>true</code> is reset member list and load new list
///
/// \param members customized <code>SBUUser</code> array for add to member list
///
- (void)loadNextMemberListWithReset:(BOOL)reset members:(NSArray<SBUUser *> * _Nullable)members;
/// When creating and using a member list directly, overriding this function and return the next member list.
/// Make this function return the next list each time it is called.
/// since:
/// 1.2.0
///
/// returns:
/// next member list
- (NSArray<SBUUser *> * _Nullable)nextMemberList SWIFT_WARN_UNUSED_RESULT;
/// This function to get member information directly from the channel in the case of GroupChannel.
/// If you use it in SuperGroup, Broadcast channel, only some member information can be loaded.
/// since:
/// 1.2.0
- (void)loadMembers;
/// This function promotes the member as an operator.
/// since:
/// 1.2.0
/// \param member A member to be promoted
///
- (void)promoteToOperatorWithMember:(SBUUser * _Nonnull)member;
/// This function dismiss the operator as a member.
/// since:
/// 1.2.0
/// \param member A member to be dismissed
///
- (void)dismissOperatorWithMember:(SBUUser * _Nonnull)member;
/// This function mutes the member.
/// since:
/// 1.2.0
/// \param member A member to be muted
///
- (void)muteWithMember:(SBUUser * _Nonnull)member;
/// This function unmutes the member.
/// since:
/// 1.2.0
/// \param member A member to be unmuted
///
- (void)unmuteWithMember:(SBUUser * _Nonnull)member;
/// This function bans the member.
/// since:
/// 1.2.0
/// \param member A member to be banned
///
- (void)banWithMember:(SBUUser * _Nonnull)member;
/// This function unbans the member.
/// since:
/// 1.2.0
/// \param member A member to be unbanned
///
- (void)unbanWithMember:(SBUUser * _Nonnull)member;
/// If you want to use a custom inviteChannelViewController, override it and implement it.
- (void)showInviteUser;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
/// This function reloads the member list.
/// since:
/// 1.2.0
- (void)reloadMemberList;
- (void)onClickInviteUser;
/// /// This function sets the cell’s more menu button action handling.
/// since:
/// 1.2.0
/// \param member <code>SBUUser</code> obejct
///
- (void)setMoreMenuActionHandler:(SBUUser * _Nonnull)member;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate>
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit19SBUMessageCellTheme")
@interface SBUMessageCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageCellTheme * _Nonnull light;)
+ (SBUMessageCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageCellTheme * _Nonnull dark;)
+ (SBUMessageCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor leftBackgroundColor:(UIColor * _Nonnull)leftBackgroundColor leftPressedBackgroundColor:(UIColor * _Nonnull)leftPressedBackgroundColor rightBackgroundColor:(UIColor * _Nonnull)rightBackgroundColor rightPressedBackgroundColor:(UIColor * _Nonnull)rightPressedBackgroundColor dateFont:(UIFont * _Nonnull)dateFont dateTextColor:(UIColor * _Nonnull)dateTextColor dateBackgroundColor:(UIColor * _Nonnull)dateBackgroundColor userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor userNameFont:(UIFont * _Nonnull)userNameFont userNameTextColor:(UIColor * _Nonnull)userNameTextColor timeFont:(UIFont * _Nonnull)timeFont timeTextColor:(UIColor * _Nonnull)timeTextColor pendingStateColor:(UIColor * _Nonnull)pendingStateColor failedStateColor:(UIColor * _Nonnull)failedStateColor succeededStateColor:(UIColor * _Nonnull)succeededStateColor readReceiptStateColor:(UIColor * _Nonnull)readReceiptStateColor deliveryReceiptStateColor:(UIColor * _Nonnull)deliveryReceiptStateColor userMessageFont:(UIFont * _Nonnull)userMessageFont userMessageLeftTextColor:(UIColor * _Nonnull)userMessageLeftTextColor userMessageLeftEditTextColor:(UIColor * _Nonnull)userMessageLeftEditTextColor userMessageRightTextColor:(UIColor * _Nonnull)userMessageRightTextColor userMessageRightEditTextColor:(UIColor * _Nonnull)userMessageRightEditTextColor fileIconBackgroundColor:(UIColor * _Nonnull)fileIconBackgroundColor fileIconColor:(UIColor * _Nonnull)fileIconColor fileMessageNameFont:(UIFont * _Nonnull)fileMessageNameFont fileMessageLeftTextColor:(UIColor * _Nonnull)fileMessageLeftTextColor fileMessageRightTextColor:(UIColor * _Nonnull)fileMessageRightTextColor fileMessagePlaceholderColor:(UIColor * _Nonnull)fileMessagePlaceholderColor adminMessageFont:(UIFont * _Nonnull)adminMessageFont adminMessageTextColor:(UIColor * _Nonnull)adminMessageTextColor unknownMessageDescFont:(UIFont * _Nonnull)unknownMessageDescFont unknownMessageDescTextColor:(UIColor * _Nonnull)unknownMessageDescTextColor ogTitleFont:(UIFont * _Nonnull)ogTitleFont ogTitleColor:(UIColor * _Nonnull)ogTitleColor ogDescriptionFont:(UIFont * _Nonnull)ogDescriptionFont ogDescriptionColor:(UIColor * _Nonnull)ogDescriptionColor ogURLAddressFont:(UIFont * _Nonnull)ogURLAddressFont ogURLAddressColor:(UIColor * _Nonnull)ogURLAddressColor contentBackgroundColor:(UIColor * _Nonnull)contentBackgroundColor pressedContentBackgroundColor:(UIColor * _Nonnull)pressedContentBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leftPressedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull rightPressedBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull dateFont;
@property (nonatomic, strong) UIColor * _Nonnull dateTextColor;
@property (nonatomic, strong) UIColor * _Nonnull dateBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIFont * _Nonnull timeFont;
@property (nonatomic, strong) UIColor * _Nonnull timeTextColor;
@property (nonatomic, strong) UIColor * _Nonnull pendingStateColor;
@property (nonatomic, strong) UIColor * _Nonnull failedStateColor;
@property (nonatomic, strong) UIColor * _Nonnull succeededStateColor;
@property (nonatomic, strong) UIColor * _Nonnull readReceiptStateColor;
@property (nonatomic, strong) UIColor * _Nonnull deliveryReceiptStateColor;
@property (nonatomic, strong) UIColor * _Nonnull contentBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull pressedContentBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull userMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull userMessageLeftTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageLeftEditTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageRightTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageRightEditTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileIconBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull fileIconColor;
@property (nonatomic, strong) UIFont * _Nonnull fileMessageNameFont;
@property (nonatomic, strong) UIColor * _Nonnull fileMessageLeftTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileMessageRightTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileMessagePlaceholderColor;
@property (nonatomic, strong) UIFont * _Nonnull adminMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull adminMessageTextColor;
@property (nonatomic, strong) UIFont * _Nonnull unknownMessageDescFont;
@property (nonatomic, strong) UIColor * _Nonnull unknownMessageDescTextColor;
@property (nonatomic, strong) UIFont * _Nonnull ogTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull ogTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull ogDescriptionFont;
@property (nonatomic, strong) UIColor * _Nonnull ogDescriptionColor;
@property (nonatomic, strong) UIFont * _Nonnull ogURLAddressFont;
@property (nonatomic, strong) UIColor * _Nonnull ogURLAddressColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit20SBUMessageInputTheme")
@interface SBUMessageInputTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageInputTheme * _Nonnull light;)
+ (SBUMessageInputTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageInputTheme * _Nonnull dark;)
+ (SBUMessageInputTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor textFieldBackgroundColor:(UIColor * _Nonnull)textFieldBackgroundColor textFieldPlaceholderColor:(UIColor * _Nonnull)textFieldPlaceholderColor textFieldPlaceholderFont:(UIFont * _Nonnull)textFieldPlaceholderFont textFieldDisabledColor:(UIColor * _Nonnull)textFieldDisabledColor textFieldTintColor:(UIColor * _Nonnull)textFieldTintColor textFieldTextColor:(UIColor * _Nonnull)textFieldTextColor textFieldBorderColor:(UIColor * _Nonnull)textFieldBorderColor buttonTintColor:(UIColor * _Nonnull)buttonTintColor buttonDisabledTintColor:(UIColor * _Nonnull)buttonDisabledTintColor cancelButtonFont:(UIFont * _Nonnull)cancelButtonFont saveButtonFont:(UIFont * _Nonnull)saveButtonFont saveButtonTextColor:(UIColor * _Nonnull)saveButtonTextColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldPlaceholderColor;
@property (nonatomic, strong) UIFont * _Nonnull textFieldPlaceholderFont;
@property (nonatomic, strong) UIColor * _Nonnull textFieldDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldTintColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldTextColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldBorderColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonDisabledTintColor;
@property (nonatomic, strong) UIFont * _Nonnull cancelButtonFont;
@property (nonatomic, strong) UIFont * _Nonnull saveButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull saveButtonTextColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIButton;
@class UITextView;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit19SBUMessageInputView")
@interface SBUMessageInputView : UIView <UITextViewDelegate>
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified addButton;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified placeholderLabel;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified textView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified sendButton;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified editView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified cancelButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified saveButton;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageInputView.sbu_loadViewFromNib()'");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageInputView.sbu_loadViewFromNib()'");
- (void)awakeFromNib;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
- (void)startEditModeWithText:(NSString * _Nonnull)text;
- (void)endEditMode;
/// Sets frozen mode state.
/// \param isFrozen <code>true</code> is frozen mode, <code>false</code> is unfrozen mode
///
- (void)setFrozenModeState:(BOOL)isFrozen;
/// Sets frozen mode state.
/// \param isMuted <code>true</code> is muted mode, <code>false</code> is unmuted mode
///
- (void)setMutedModeState:(BOOL)isMuted;
- (void)endTypingMode;
- (void)updateTextViewHeight;
- (IBAction)onClickAddButton:(id _Nonnull)sender;
- (IBAction)onClickSendButton:(id _Nonnull)sender;
- (IBAction)onClickCancelButton:(id _Nonnull)sender;
- (IBAction)onClickSaveButton:(id _Nonnull)sender;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM(NSInteger, SBUMessageReceiptState, open) {
  SBUMessageReceiptStateNone = 0,
  SBUMessageReceiptStateReadReceipt = 1,
  SBUMessageReceiptStateDeliveryReceipt = 2,
};


SWIFT_CLASS("_TtC13SendBirdUIKit28SBUModerationsViewController")
@interface SBUModerationsViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
/// One of two must be set.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUModerationsViewController(channel:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function freezes the channel.
/// \param completionHandler completion handler of freeze status change
///
- (void)freezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This function unfreezes the channel.
/// \param completionHandler completion handler of freeze status change
///
- (void)unfreezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the operator List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showOperatorList;
/// This is a function that shows the muted member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showMutedMeberList;
/// This is a function that shows the banned member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showBannedMeberList;
/// Changes freeze status on channel.
/// \param freeze freeze status
///
/// \param completionHandler completion handler of freeze status change
///
- (void)changeFreeze:(BOOL)freeze :(void (^ _Nullable)(BOOL))completionHandler;
- (void)didReceiveError:(NSString * _Nullable)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SBUModerationsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit17SBUNewMessageInfo")
@interface SBUNewMessageInfo : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
- (void)onClickNewMessageInfo;
@end

@class SBDMember;

SWIFT_CLASS("_TtC13SendBirdUIKit12SBUStringSet")
@interface SBUStringSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Cancel;)
+ (NSString * _Nonnull)Cancel SWIFT_WARN_UNUSED_RESULT;
+ (void)setCancel:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull OK;)
+ (NSString * _Nonnull)OK SWIFT_WARN_UNUSED_RESULT;
+ (void)setOK:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Retry;)
+ (NSString * _Nonnull)Retry SWIFT_WARN_UNUSED_RESULT;
+ (void)setRetry:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Save;)
+ (NSString * _Nonnull)Save SWIFT_WARN_UNUSED_RESULT;
+ (void)setSave:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Copy;)
+ (NSString * _Nonnull)Copy SWIFT_WARN_UNUSED_RESULT;
+ (void)setCopy:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Delete;)
+ (NSString * _Nonnull)Delete SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelete:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Edit;)
+ (NSString * _Nonnull)Edit SWIFT_WARN_UNUSED_RESULT;
+ (void)setEdit:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Remove;)
+ (NSString * _Nonnull)Remove SWIFT_WARN_UNUSED_RESULT;
+ (void)setRemove:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Camera;)
+ (NSString * _Nonnull)Camera SWIFT_WARN_UNUSED_RESULT;
+ (void)setCamera:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull PhotoVideoLibrary;)
+ (NSString * _Nonnull)PhotoVideoLibrary SWIFT_WARN_UNUSED_RESULT;
+ (void)setPhotoVideoLibrary:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Document;)
+ (NSString * _Nonnull)Document SWIFT_WARN_UNUSED_RESULT;
+ (void)setDocument:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Loading;)
+ (NSString * _Nonnull)Loading SWIFT_WARN_UNUSED_RESULT;
+ (void)setLoading:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Invite;)
+ (NSString * _Nonnull)Invite SWIFT_WARN_UNUSED_RESULT;
+ (void)setInvite:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Alert_Delete;)
+ (NSString * _Nonnull)Alert_Delete SWIFT_WARN_UNUSED_RESULT;
+ (void)setAlert_Delete:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_Yesterday;)
+ (NSString * _Nonnull)Date_Yesterday SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Yesterday:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Year)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Year SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Year:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Day)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Day SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Day:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Month)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Month SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Month:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Hour)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Hour SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Hour:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Min)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Min SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Min:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_Ago;)
+ (NSString * _Nonnull)Date_Ago SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Ago:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_On;)
+ (NSString * _Nonnull)Date_On SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_On:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelList_Header_Title;)
+ (NSString * _Nonnull)ChannelList_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelList_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelList_Last_File_Message;)
+ (NSString * _Nonnull)ChannelList_Last_File_Message SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelList_Last_File_Message:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Name_Default;)
+ (NSString * _Nonnull)Channel_Name_Default SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Name_Default:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Name_No_Members;)
+ (NSString * _Nonnull)Channel_Name_No_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Name_No_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Header_LastSeen;)
+ (NSString * _Nonnull)Channel_Header_LastSeen SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Header_LastSeen:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Channel_Header_Typing)(NSArray<SBDMember *> * _Nonnull);)
+ (NSString * _Nonnull (^ _Nonnull)(NSArray<SBDMember *> * _Nonnull))Channel_Header_Typing SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Header_Typing:(NSString * _Nonnull (^ _Nonnull)(NSArray<SBDMember *> * _Nonnull))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Success_Download_file;)
+ (NSString * _Nonnull)Channel_Success_Download_file SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Success_Download_file:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_New_Message_File;)
+ (NSString * _Nonnull)Channel_New_Message_File SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_New_Message_File:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Channel_New_Message)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Channel_New_Message SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_New_Message:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_State_Banner_Frozen;)
+ (NSString * _Nonnull)Channel_State_Banner_Frozen SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_State_Banner_Frozen:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Header_Title;)
+ (NSString * _Nonnull)ChannelSettings_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Change_Name;)
+ (NSString * _Nonnull)ChannelSettings_Change_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Change_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Change_Image;)
+ (NSString * _Nonnull)ChannelSettings_Change_Image SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Change_Image:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Enter_New_Name;)
+ (NSString * _Nonnull)ChannelSettings_Enter_New_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Enter_New_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Notifications;)
+ (NSString * _Nonnull)ChannelSettings_Notifications SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Notifications:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Members_Title;)
+ (NSString * _Nonnull)ChannelSettings_Members_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Members_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull ChannelSettings_Members)(NSUInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSUInteger))ChannelSettings_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Members:(NSString * _Nonnull (^ _Nonnull)(NSUInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Leave;)
+ (NSString * _Nonnull)ChannelSettings_Leave SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Leave:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Moderations;)
+ (NSString * _Nonnull)ChannelSettings_Moderations SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Moderations:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Operators;)
+ (NSString * _Nonnull)ChannelSettings_Operators SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Operators:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Muted_Members;)
+ (NSString * _Nonnull)ChannelSettings_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Banned_Members;)
+ (NSString * _Nonnull)ChannelSettings_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Freeze_Channel;)
+ (NSString * _Nonnull)ChannelSettings_Freeze_Channel SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Freeze_Channel:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Placeholder;)
+ (NSString * _Nonnull)MessageInput_Text_Placeholder SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Placeholder:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Unavailable;)
+ (NSString * _Nonnull)MessageInput_Text_Unavailable SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Unavailable:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Muted;)
+ (NSString * _Nonnull)MessageInput_Text_Muted SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Muted:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Edited;)
+ (NSString * _Nonnull)Message_Edited SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Edited:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_System;)
+ (NSString * _Nonnull)Message_System SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_System:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Unknown_Title;)
+ (NSString * _Nonnull)Message_Unknown_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Unknown_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Unknown_Desctiption;)
+ (NSString * _Nonnull)Message_Unknown_Desctiption SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Unknown_Desctiption:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Channels;)
+ (NSString * _Nonnull)Empty_No_Channels SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Channels:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Messages;)
+ (NSString * _Nonnull)Empty_No_Messages SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Messages:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Users;)
+ (NSString * _Nonnull)Empty_No_Users SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Users:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Muted_Members;)
+ (NSString * _Nonnull)Empty_No_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Banned_Members;)
+ (NSString * _Nonnull)Empty_No_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_Wrong;)
+ (NSString * _Nonnull)Empty_Wrong SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_Wrong:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull CreateChannel_Create)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))CreateChannel_Create SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Create:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CreateChannel_Header_Title;)
+ (NSString * _Nonnull)CreateChannel_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CreateChannel_Header_Select_Members;)
+ (NSString * _Nonnull)CreateChannel_Header_Select_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Header_Select_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull InviteChannel_Header_Title;)
+ (NSString * _Nonnull)InviteChannel_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull InviteChannel_Header_Select_Members;)
+ (NSString * _Nonnull)InviteChannel_Header_Select_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Header_Select_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull InviteChannel_Invite)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))InviteChannel_Invite SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Invite:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull InviteChannel_Add)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))InviteChannel_Add SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Add:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Header_Title;)
+ (NSString * _Nonnull)MemberList_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Me;)
+ (NSString * _Nonnull)MemberList_Me SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Me:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Ban;)
+ (NSString * _Nonnull)MemberList_Ban SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Ban:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Unban;)
+ (NSString * _Nonnull)MemberList_Unban SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Unban:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Mute;)
+ (NSString * _Nonnull)MemberList_Mute SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Mute:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Unmute;)
+ (NSString * _Nonnull)MemberList_Unmute SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Unmute:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Dismiss_Operator;)
+ (NSString * _Nonnull)MemberList_Dismiss_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Dismiss_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Promote_Operator;)
+ (NSString * _Nonnull)MemberList_Promote_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Promote_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Members;)
+ (NSString * _Nonnull)MemberList_Title_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Operators;)
+ (NSString * _Nonnull)MemberList_Title_Operators SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Operators:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Muted_Members;)
+ (NSString * _Nonnull)MemberList_Title_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Banned_Members;)
+ (NSString * _Nonnull)MemberList_Title_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull User_No_Name;)
+ (NSString * _Nonnull)User_No_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setUser_No_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull User_Operator;)
+ (NSString * _Nonnull)User_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setUser_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_Group;)
+ (NSString * _Nonnull)ChannelType_Group SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_Group:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_SuperGroup;)
+ (NSString * _Nonnull)ChannelType_SuperGroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_SuperGroup:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_Broadcast;)
+ (NSString * _Nonnull)ChannelType_Broadcast SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_Broadcast:(NSString * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SBUUserListTheme;
@class SBUUserCellTheme;

SWIFT_CLASS("_TtC13SendBirdUIKit8SBUTheme")
@interface SBUTheme : NSObject
- (nonnull instancetype)initWithChannelListTheme:(SBUChannelListTheme * _Nonnull)channelListTheme channelCellTheme:(SBUChannelCellTheme * _Nonnull)channelCellTheme channelTheme:(SBUChannelTheme * _Nonnull)channelTheme messageInputTheme:(SBUMessageInputTheme * _Nonnull)messageInputTheme messageCellTheme:(SBUMessageCellTheme * _Nonnull)messageCellTheme userListTheme:(SBUUserListTheme * _Nonnull)userListTheme userCellTheme:(SBUUserCellTheme * _Nonnull)userCellTheme channelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme componentTheme:(SBUComponentTheme * _Nonnull)componentTheme OBJC_DESIGNATED_INITIALIZER;
+ (void)setWithTheme:(SBUTheme * _Nonnull)theme;
+ (void)setChannelListWithChannelListTheme:(SBUChannelListTheme * _Nonnull)channelListTheme channelCellTheme:(SBUChannelCellTheme * _Nonnull)channelCellTheme;
+ (void)setChannelWithChannelTheme:(SBUChannelTheme * _Nonnull)channelTheme messageCellTheme:(SBUMessageCellTheme * _Nonnull)messageCellTheme messageInputTheme:(SBUMessageInputTheme * _Nonnull)messageInputTheme componentTheme:(SBUComponentTheme * _Nonnull)componentTheme;
+ (void)setUserListWithUserListTheme:(SBUUserListTheme * _Nonnull)userListTheme userCellTheme:(SBUUserCellTheme * _Nonnull)userCellTheme;
+ (void)setChannelSettingsWithChannelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUTheme * _Nonnull dark;)
+ (SBUTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUTheme * _Nonnull light;)
+ (SBUTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelListTheme * _Nonnull channelListTheme;)
+ (SBUChannelListTheme * _Nonnull)channelListTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelListTheme:(SBUChannelListTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelCellTheme * _Nonnull channelCellTheme;)
+ (SBUChannelCellTheme * _Nonnull)channelCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelCellTheme:(SBUChannelCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelTheme * _Nonnull channelTheme;)
+ (SBUChannelTheme * _Nonnull)channelTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTheme:(SBUChannelTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUMessageInputTheme * _Nonnull messageInputTheme;)
+ (SBUMessageInputTheme * _Nonnull)messageInputTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInputTheme:(SBUMessageInputTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUMessageCellTheme * _Nonnull messageCellTheme;)
+ (SBUMessageCellTheme * _Nonnull)messageCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageCellTheme:(SBUMessageCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUserListTheme * _Nonnull userListTheme;)
+ (SBUUserListTheme * _Nonnull)userListTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserListTheme:(SBUUserListTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUserCellTheme * _Nonnull userCellTheme;)
+ (SBUUserCellTheme * _Nonnull)userCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserCellTheme:(SBUUserCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelSettingsTheme * _Nonnull channelSettingsTheme;)
+ (SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUComponentTheme * _Nonnull componentTheme;)
+ (SBUComponentTheme * _Nonnull)componentTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setComponentTheme:(SBUComponentTheme * _Nonnull)newValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit7SBUUser")
@interface SBUUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
@property (nonatomic, readonly, copy) NSString * _Nullable nickname;
@property (nonatomic, readonly, copy) NSString * _Nullable profileUrl;
/// This is an operator state property.
/// since:
/// 1.2.0
@property (nonatomic, readonly) BOOL isOperator;
/// This is a muted state property.
/// since:
/// 1.2.0
@property (nonatomic, readonly) BOOL isMuted;
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId nickname:(NSString * _Nullable)nickname profileUrl:(NSString * _Nullable)profileUrl OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUser:(SBDUser * _Nonnull)user OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUser:(SBUUser * _Nonnull)user isOperator:(BOOL)isOperator isMuted:(BOOL)isMuted OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMember:(SBDMember * _Nonnull)member OBJC_DESIGNATED_INITIALIZER;
/// This method returns the default value if there is no alias value.
/// since:
/// 1.0.1
- (NSString * _Nonnull)refinedNickname SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit11SBUUserCell")
@interface SBUUserCell : UITableViewCell
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)onClickMoreMenu;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16SBUUserCellTheme")
@interface SBUUserCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserCellTheme * _Nonnull light;)
+ (SBUUserCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserCellTheme * _Nonnull dark;)
+ (SBUUserCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor checkboxOnColor:(UIColor * _Nonnull)checkboxOnColor checkboxOffColor:(UIColor * _Nonnull)checkboxOffColor userNameTextColor:(UIColor * _Nonnull)userNameTextColor userNameFont:(UIFont * _Nonnull)userNameFont userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor mutedStateBackgroundColor:(UIColor * _Nonnull)mutedStateBackgroundColor mutedStateIconColor:(UIColor * _Nonnull)mutedStateIconColor subInfoTextColor:(UIColor * _Nonnull)subInfoTextColor subInfoFont:(UIFont * _Nonnull)subInfoFont moreButtonColor:(UIColor * _Nonnull)moreButtonColor moreButtonDisabledColor:(UIColor * _Nonnull)moreButtonDisabledColor separateColor:(UIColor * _Nonnull)separateColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull checkboxOnColor;
@property (nonatomic, strong) UIColor * _Nonnull checkboxOffColor;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull mutedStateBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull mutedStateIconColor;
@property (nonatomic, strong) UIColor * _Nonnull subInfoTextColor;
@property (nonatomic, strong) UIFont * _Nonnull subInfoFont;
@property (nonatomic, strong) UIColor * _Nonnull moreButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull moreButtonDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull separateColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16SBUUserListTheme")
@interface SBUUserListTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserListTheme * _Nonnull light;)
+ (SBUUserListTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserListTheme * _Nonnull dark;)
+ (SBUUserListTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationShadowColor:(UIColor * _Nonnull)navigationShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor rightBarButtonSelectedTintColor:(UIColor * _Nonnull)rightBarButtonSelectedTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonSelectedTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUUserMessageCell")
@interface SBUUserMessageCell : SBUContentBaseMessageCell
@property (nonatomic, strong) UIView * _Nonnull messageTextView;
@property (nonatomic, readonly, strong) SBDUserMessage * _Nullable userMessage;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDUserMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView receiptState:(enum SBUMessageReceiptState)receiptState groupPosition:(enum MessageGroupPosition)groupPosition withTextView:(BOOL)withTextView;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface UIImage (SWIFT_EXTENSION(SendBirdUIKit))
- (UIImage * _Nonnull)sbu_withTintColor:(UIColor * _Nullable)tintColor SWIFT_WARN_UNUSED_RESULT;
@end










@interface UINavigationController (SWIFT_EXTENSION(SendBirdUIKit))
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
@end




@interface UIView (SWIFT_EXTENSION(SendBirdUIKit))
+ (UINib * _Nonnull)sbu_loadNib SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nonnull)sbu_loadViewFromNib SWIFT_WARN_UNUSED_RESULT;
@end





/// This is an enumeration used to display <code>UserCell</code> by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, UserListType, open) {
  UserListTypeNone = 0,
  UserListTypeCreateChannel = 1,
  UserListTypeChannelMembers = 2,
  UserListTypeInviteUser = 3,
  UserListTypeReaction = 4,
  UserListTypeOperators = 5,
  UserListTypeMutedMembers = 6,
  UserListTypeBannedMembers = 7,
};


SWIFT_CLASS("_TtC13SendBirdUIKit12UserNameView")
@interface UserNameView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import SendBirdSDK;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SendBirdUIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, ChannelEditType, open) {
  ChannelEditTypeName = 0,
  ChannelEditTypeImage = 1,
};

/// This is an enumeration used in <code>InviteUserViewController</code> to load user list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelInviteListType, open) {
  ChannelInviteListTypeNone = 0,
  ChannelInviteListTypeUsers = 1,
  ChannelInviteListTypeOperators = 2,
};

/// This is an enumeration used in <code>MemberListViewController</code> to load member list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelMemberListType, open) {
  ChannelMemberListTypeNone = 0,
  ChannelMemberListTypeChannelMembers = 1,
  ChannelMemberListTypeOperators = 2,
  ChannelMemberListTypeMutedMembers = 3,
  ChannelMemberListTypeBannedMembers = 4,
};

/// This is an enumeration used to handling action and display by type in <code>ChannelSettingsViewController</code> and <code>ChannelSettingCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelSettingItemType, open) {
  ChannelSettingItemTypeModerations = 0,
  ChannelSettingItemTypeNotifications = 1,
  ChannelSettingItemTypeMembers = 2,
  ChannelSettingItemTypeLeave = 3,
};

/// This is an enumeration for channel type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelType, open) {
  ChannelTypeGroup = 0,
  ChannelTypeSupergroup = 1,
  ChannelTypeBroadcast = 2,
};

typedef SWIFT_ENUM(NSInteger, EmptyViewType, open) {
  EmptyViewTypeNone = 0,
  EmptyViewTypeNoChannels = 1,
  EmptyViewTypeNoMessages = 2,
  EmptyViewTypeNoMutedMembers = 3,
  EmptyViewTypeNoBannedMembers = 4,
  EmptyViewTypeError = 5,
};

typedef SWIFT_ENUM(NSInteger, FailedMessageOption, open) {
  FailedMessageOptionRetry = 0,
  FailedMessageOptionRemove = 1,
};

typedef SWIFT_ENUM(uint8_t, LogType, open) {
  LogTypeNone = 0b00000000,
  LogTypeError = 0b00000001,
  LogTypeWarning = 0b00000010,
  LogTypeInfo = 0b00000100,
  LogTypeAll = 0b00000111,
};

typedef SWIFT_ENUM(NSInteger, MediaResourceType, open) {
  MediaResourceTypeCamera = 0,
  MediaResourceTypeLibrary = 1,
  MediaResourceTypeDocument = 2,
  MediaResourceTypeUnknown = 3,
};

typedef SWIFT_ENUM(NSInteger, MemberListType, open) {
  MemberListTypeNone = 0,
  MemberListTypeCreateChannel = 1,
  MemberListTypeChannelMembers = 2,
  MemberListTypeInviteUser = 3,
  MemberListTypeReaction = 4,
};

typedef SWIFT_ENUM(NSInteger, MessageEditItem, open) {
  MessageEditItemCopy = 0,
  MessageEditItemEdit = 1,
  MessageEditItemDelete = 2,
};

typedef SWIFT_ENUM(NSInteger, MessageFileType, open) {
  MessageFileTypeImage = 0,
  MessageFileTypeVideo = 1,
  MessageFileTypeAudio = 2,
  MessageFileTypePdf = 3,
  MessageFileTypeEtc = 4,
};

typedef SWIFT_ENUM(NSInteger, MessageGroupPosition, open) {
  MessageGroupPositionNone = 0,
  MessageGroupPositionTop = 1,
  MessageGroupPositionMiddle = 2,
  MessageGroupPositionBottom = 3,
};

typedef SWIFT_ENUM(NSInteger, MessagePosition, open) {
  MessagePositionLeft = 0,
  MessagePositionRight = 1,
  MessagePositionCenter = 2,
};

@class NSCoder;

SWIFT_CLASS("_TtC13SendBirdUIKit18MessageProfileView")
@interface MessageProfileView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16MessageStateView")
@interface MessageStateView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end

/// This is an enumeration used to handling action and display by type in <code>MederationsViewController</code> and <code>ModerationCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ModerationItemType, open) {
  ModerationItemTypeOperators = 0,
  ModerationItemTypeMutedMembers = 1,
  ModerationItemTypeBannedMembers = 2,
  ModerationItemTypeFreezeChannel = 3,
};

@class SBUUser;

@interface NSArray<ObjectType> (SWIFT_EXTENSION(SendBirdUIKit))
- (NSArray<NSString *> * _Nonnull)sbu_getUserIds SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)sbu_getUserNicknames SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SBUUser *> * _Nonnull)sbu_convertUserList SWIFT_WARN_UNUSED_RESULT;
@end




@interface NSObject (SWIFT_EXTENSION(SendBirdUIKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sbu_className;)
+ (NSString * _Nonnull)sbu_className SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull sbu_className;
@end

@class SBDBaseMessage;
enum SBUMessageReceiptState : NSInteger;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUBaseMessageCell")
@interface SBUBaseMessageCell : UITableViewCell
@property (nonatomic, strong) SBDBaseMessage * _Nonnull message;
@property (nonatomic) enum MessagePosition position;
@property (nonatomic) enum MessageGroupPosition groupPosition;
@property (nonatomic) enum SBUMessageReceiptState receiptState;
@property (nonatomic, strong) UIView * _Nonnull messageContentView;
@property (nonatomic, strong) UIView * _Nonnull dateView;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
/// This function configure a cell using informations.
/// \param message Message object
///
/// \param position Cell position (left / right / center)
///
/// \param hideDateView Hide or expose date information
///
/// \param receiptState ReadReceipt state
///
- (void)configureWithMessage:(SBDBaseMessage * _Nonnull)message position:(enum MessagePosition)position hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)prepareForReuse;
@end

@class UILabel;
@class SBDAdminMessage;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit19SBUAdminMessageCell")
@interface SBUAdminMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UILabel * _Nonnull messageLabel;
- (void)setupViews;
- (void)setupAutolayout;
- (void)layoutSubviews;
- (void)configure:(SBDAdminMessage * _Nonnull)message hideDateView:(BOOL)hideDateView;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit12SBUAvailable")
@interface SBUAvailable : NSObject
/// This method checks if the application support super group channel.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if super group channel can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportSuperGroupChannel SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support broadcast channel.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if broadcast channel can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportBroadcastChannel SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support reactions.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if the reaction operation can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportReactions SWIFT_WARN_UNUSED_RESULT;
/// This method checks if the application support og metadata.
/// since:
/// 1.2.0
///
/// returns:
/// <code>true</code> if the og metadata can be usable, <code>false</code> otherwise.
+ (BOOL)isSupportOgTag SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit18SBUBaseChannelCell")
@interface SBUBaseChannelCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC13SendBirdUIKit19SBUChannelCellTheme")
@interface SBUChannelCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelCellTheme * _Nonnull light;)
+ (SBUChannelCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelCellTheme * _Nonnull dark;)
+ (SBUChannelCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor titleFont:(UIFont * _Nonnull)titleFont titleTextColor:(UIColor * _Nonnull)titleTextColor memberCountFont:(UIFont * _Nonnull)memberCountFont memberCountTextColor:(UIColor * _Nonnull)memberCountTextColor lastUpdatedTimeFont:(UIFont * _Nonnull)lastUpdatedTimeFont lastUpdatedTimeTextColor:(UIColor * _Nonnull)lastUpdatedTimeTextColor messageFont:(UIFont * _Nonnull)messageFont messageTextColor:(UIColor * _Nonnull)messageTextColor broadcastMarkTintColor:(UIColor * _Nonnull)broadcastMarkTintColor freezeStateTintColor:(UIColor * _Nonnull)freezeStateTintColor unreadCountBackgroundColor:(UIColor * _Nonnull)unreadCountBackgroundColor unreadCountTextColor:(UIColor * _Nonnull)unreadCountTextColor unreadCountFont:(UIFont * _Nonnull)unreadCountFont separatorLineColor:(UIColor * _Nonnull)separatorLineColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleTextColor;
@property (nonatomic, strong) UIFont * _Nonnull memberCountFont;
@property (nonatomic, strong) UIColor * _Nonnull memberCountTextColor;
@property (nonatomic, strong) UIFont * _Nonnull lastUpdatedTimeFont;
@property (nonatomic, strong) UIColor * _Nonnull lastUpdatedTimeTextColor;
@property (nonatomic, strong) UIFont * _Nonnull messageFont;
@property (nonatomic, strong) UIColor * _Nonnull messageTextColor;
@property (nonatomic, strong) UIColor * _Nonnull broadcastMarkTintColor;
@property (nonatomic, strong) UIColor * _Nonnull freezeStateTintColor;
@property (nonatomic, strong) UIColor * _Nonnull unreadCountBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull unreadCountTextColor;
@property (nonatomic, strong) UIFont * _Nonnull unreadCountFont;
@property (nonatomic, strong) UIColor * _Nonnull separatorLineColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit19SBUChannelListTheme")
@interface SBUChannelListTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelListTheme * _Nonnull light;)
+ (SBUChannelListTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelListTheme * _Nonnull dark;)
+ (SBUChannelListTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationBarShadowColor:(UIColor * _Nonnull)navigationBarShadowColor backgroundColor:(UIColor * _Nonnull)backgroundColor notificationOnBackgroundColor:(UIColor * _Nonnull)notificationOnBackgroundColor notificationOnTintColor:(UIColor * _Nonnull)notificationOnTintColor notificationOffBackgroundColor:(UIColor * _Nonnull)notificationOffBackgroundColor notificationOffTintColor:(UIColor * _Nonnull)notificationOffTintColor leaveBackgroundColor:(UIColor * _Nonnull)leaveBackgroundColor leaveTintColor:(UIColor * _Nonnull)leaveTintColor alertBackgroundColor:(UIColor * _Nonnull)alertBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOnBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOnTintColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOffBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull notificationOffTintColor;
@property (nonatomic, strong) UIColor * _Nonnull leaveBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leaveTintColor;
@property (nonatomic, strong) UIColor * _Nonnull alertBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIBarButtonItem;
@class SBDGroupChannel;
@class SBDGroupChannelListQuery;
@class NSBundle;
@class UINib;

SWIFT_CLASS("_TtC13SendBirdUIKit28SBUChannelListViewController")
@interface SBUChannelListViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// This is a function that allows you to select the channel type when creating a channel.
/// If set to the nil value, it is moved to groupChannel creation.
/// note:
/// Type: GroupChannel / SuperGroupChannel / BroadcastChannel
/// since:
/// 1.2.0
@property (nonatomic, strong) UIView * _Nullable createChannelTypeSelector;
/// This object has a list of all channels.
@property (nonatomic, readonly, copy) NSArray<SBDGroupChannel *> * _Nonnull channelList;
/// This is a query used to get a list of channels. Only getter is provided, please use initialization function to set query directly.
/// note:
/// For query properties, see <code>SBDGroupChannelListQuery</code> class.
/// since:
/// 1.0.11
@property (nonatomic, readonly, strong) SBDGroupChannelListQuery * _Nullable channelListQuery;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelListViewController()'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
/// You can initialize the class through this function.
/// If you have <code>channelListQuery</code>, please set it. If not set, it is used as default value.
/// See the example below for query generation.
/// \code
///     let query = SBDGroupChannel.createMyGroupChannelListQuery()
///     query?.includeEmptyChannel = false
///     query?.includeFrozenChannel = true
///     ...
///
/// \endcodesince:
/// 1.0.11
/// \param channelListQuery Your own <code>SBDGroupChannelListQuery</code> object
///
- (nonnull instancetype)initWithChannelListQuery:(SBDGroupChannelListQuery * _Nullable)channelListQuery OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// Changes push trigger option on a channel.
/// since:
/// 1.0.9
/// \param option Push trigger option to change
///
/// \param channel Channel to change option
///
/// \param completionHandler Completion handler
///
- (void)changePushTriggerOptionWithOption:(SBDGroupChannelPushTriggerOption)option channel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// Leaves the channel.
/// since:
/// 1.0.9
/// \param channel Channel to leave
///
/// \param completionHandler Completion handler
///
- (void)leaveChannel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the channelViewController.
/// If you want to use a custom channelViewController, override it and implement it.
/// \param channelUrl channel url for use in channelViewController.
///
- (void)showChannelWithChannelUrl:(NSString * _Nonnull)channelUrl;
/// This is a function that shows the channel type selector when a supergroup/broadcast channel can be set.
/// <ul>
///   <li>
///     If both types cannot be set, it moves directly to the group channel creation viewController.
///   </li>
///   <li>
///     If you want to use a custom createChannelTypeSelector or createChannel action, override it and implement it.
///   </li>
/// </ul>
/// since:
/// 1.2.0
- (void)showCreateChannelTypeSelector;
/// This is a function that shows the channel creation viewController with channel type.
/// If you want to use a custom createChannelViewController, override it and implement it.
/// \param type Using the Specified Type in CreateChannelViewController (default: <code>.group</code>)
///
- (void)showCreateChannelWithType:(enum ChannelType)type;
/// Used to register a custom cell as a base cell based on SBUBaseChannelCell.
/// \param channelCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithChannelCell:(SBUBaseChannelCell * _Nonnull)channelCell nib:(UINib * _Nullable)nib;
/// Used to register a custom cell as a additional cell based on SBUBaseChannelCell.
/// \param customCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithCustomCell:(SBUBaseChannelCell * _Nullable)customCell nib:(UINib * _Nullable)nib;
/// This is used to check the loading status and control loading indicator.
/// \param loadingState Set to true when the list is loading.
///
/// \param showIndicator If true, the loading indicator is started, and if false, the indicator is stopped.
///
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator;
/// If an error occurs in viewController, a message is sent through here.
/// If necessary, override to handle errors.
/// \param message error message
///
- (void)didReceiveError:(NSString * _Nullable)message;
@end


SWIFT_PROTOCOL("_TtP13SendBirdUIKit20SBUEmptyViewDelegate_")
@protocol SBUEmptyViewDelegate <NSObject>
- (void)didSelectRetry;
@end


@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end


/// This delegate is used in the class to handle the action.
SWIFT_PROTOCOL("_TtP13SendBirdUIKit36SBUCreateChannelTypeSelectorDelegate_")
@protocol SBUCreateChannelTypeSelectorDelegate
/// This function notifies the <code>SBUchannelListViewController</code> when closing the selector.
- (void)didSelectCloseSelector;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create group channel menu.
- (void)didSelectCreateGroupChannel;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create super group channel menu.
- (void)didSelectCreateSuperGroupChannel;
/// This function notifies the <code>SBUchannelListViewController</code> when selecting the create broadcast channel menu.
- (void)didSelectCreateBroadcastChannel;
@end


@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUCreateChannelTypeSelectorDelegate>
- (void)didSelectCloseSelector;
- (void)didSelectCreateGroupChannel;
- (void)didSelectCreateSuperGroupChannel;
- (void)didSelectCreateBroadcastChannel;
@end

@class UITableView;
@class UISwipeActionsConfiguration;
@class UITableViewRowAction;

@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
- (NSArray<UITableViewRowAction *> * _Nullable)tableView:(UITableView * _Nonnull)tableView editActionsForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,deprecated=13.0);
@end

@class SBDUser;
@class SBDBaseChannel;

@interface SBUChannelListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate, SBDConnectionDelegate>
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)didSucceedReconnection;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit23SBUChannelSettingsTheme")
@interface SBUChannelSettingsTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelSettingsTheme * _Nonnull light;)
+ (SBUChannelSettingsTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelSettingsTheme * _Nonnull dark;)
+ (SBUChannelSettingsTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationShadowColor:(UIColor * _Nonnull)navigationShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor cellTextFont:(UIFont * _Nonnull)cellTextFont cellTextColor:(UIColor * _Nonnull)cellTextColor cellSubTextFont:(UIFont * _Nonnull)cellSubTextFont cellSubTextColor:(UIColor * _Nonnull)cellSubTextColor cellSwitchColor:(UIColor * _Nonnull)cellSwitchColor cellSeparateColor:(UIColor * _Nonnull)cellSeparateColor cellTypeIconTintColor:(UIColor * _Nonnull)cellTypeIconTintColor cellArrowIconTintColor:(UIColor * _Nonnull)cellArrowIconTintColor cellLeaveIconColor:(UIColor * _Nonnull)cellLeaveIconColor userNameFont:(UIFont * _Nonnull)userNameFont userNameTextColor:(UIColor * _Nonnull)userNameTextColor itemTextColor:(UIColor * _Nonnull)itemTextColor itemColor:(UIColor * _Nonnull)itemColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull cellTextFont;
@property (nonatomic, strong) UIColor * _Nonnull cellTextColor;
@property (nonatomic, strong) UIFont * _Nonnull cellSubTextFont;
@property (nonatomic, strong) UIColor * _Nonnull cellSubTextColor;
@property (nonatomic, strong) UIColor * _Nonnull cellSwitchColor;
@property (nonatomic, strong) UIColor * _Nonnull cellSeparateColor;
@property (nonatomic, strong) UIColor * _Nonnull cellTypeIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull cellArrowIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull cellLeaveIconColor;
@property (nonatomic, strong) UIColor * _Nonnull cellNotificationIconColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellTypeIconTintColor");
@property (nonatomic, strong) UIColor * _Nonnull cellMemberIconColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellTypeIconTintColor");
@property (nonatomic, strong) UIColor * _Nonnull cellMemberButtonColor SWIFT_DEPRECATED_MSG("deprecated in 1.2.0", "cellArrowIconTintColor");
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIColor * _Nonnull itemTextColor;
@property (nonatomic, strong) UIColor * _Nonnull itemColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;
@class SBDGroupChannelParams;

SWIFT_CLASS("_TtC13SendBirdUIKit32SBUChannelSettingsViewController")
@interface SBUChannelSettingsViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, strong) UIView * _Nullable userInfoView;
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
/// One of two must be set.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithChannelUrl:'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithChannelUrl:'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
- (void)updateChannelInfoWithChannelName:(NSString * _Nullable)channelName SWIFT_DEPRECATED_MSG("deprecated in 1.0.9", "updateChannelWithChannelName:coverImage:");
/// Used to update the channel name or cover image. <code>channelName</code> and<code> coverImage</code> are used for updating only the set values.
/// since:
/// 1.0.9
/// \param channelName Channel name to update
///
/// \param coverImage Cover image to update
///
- (void)updateChannelWithChannelName:(NSString * _Nullable)channelName coverImage:(UIImage * _Nullable)coverImage;
/// Updates the channel with channelParams.
/// You can update a channel by setting various properties of ChannelParams.
/// since:
/// 1.0.9
/// \param params <code>SBDGroupChannelParams</code> class object
///
- (void)updateChannelWithParams:(SBDGroupChannelParams * _Nonnull)params;
/// Changes push trigger option on channel.
/// \param isOn notification status
///
- (void)changeNotificationWithIsOn:(BOOL)isOn;
/// Leaves the channel.
- (void)leaveChannel;
/// If you want to use a custom memberListViewController, override it and implement it.
- (void)showMemberList;
/// If you want to use a custom moderationsViewController, override it and implement it.
/// since:
/// 1.2.0
- (void)showModerationList;
/// Open the channel image selection menu.
- (void)selectChannelImage;
/// Open the channel name change popup.
- (void)changeChannelName;
/// If an error occurs in viewController, a message is sent through here.
/// If necessary, override to handle errors.
/// \param message error message
///
- (void)didReceiveError:(NSString * _Nullable)message;
@end



@class UIImagePickerController;

@interface SBUChannelSettingsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIImagePickerControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
@end


@interface SBUChannelSettingsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit15SBUChannelTheme")
@interface SBUChannelTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelTheme * _Nonnull light;)
+ (SBUChannelTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUChannelTheme * _Nonnull dark;)
+ (SBUChannelTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationBarShadowColor:(UIColor * _Nonnull)navigationBarShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor removeItemColor:(UIColor * _Nonnull)removeItemColor cancelItemColor:(UIColor * _Nonnull)cancelItemColor alertRemoveColor:(UIColor * _Nonnull)alertRemoveColor alertCancelColor:(UIColor * _Nonnull)alertCancelColor menuTextColor:(UIColor * _Nonnull)menuTextColor channelStateBannerFont:(UIFont * _Nonnull)channelStateBannerFont channelStateBannerTextColor:(UIColor * _Nonnull)channelStateBannerTextColor channelStateBannerBackgroundColor:(UIColor * _Nonnull)channelStateBannerBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull removeItemColor;
@property (nonatomic, strong) UIColor * _Nonnull cancelItemColor;
@property (nonatomic, strong) UIColor * _Nonnull alertRemoveColor;
@property (nonatomic, strong) UIColor * _Nonnull alertCancelColor;
@property (nonatomic, strong) UIColor * _Nonnull menuTextColor;
@property (nonatomic, strong) UIFont * _Nonnull channelStateBannerFont;
@property (nonatomic, strong) UIColor * _Nonnull channelStateBannerTextColor;
@property (nonatomic, strong) UIColor * _Nonnull channelStateBannerBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SBUMessageInputView;
@class SBDMessageListParams;
@class SBDUserMessageParams;
@class SBDFileMessageParams;
@class SBDUserMessage;
@class UIScrollView;

SWIFT_CLASS("_TtC13SendBirdUIKit24SBUChannelViewController")
@interface SBUChannelViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, strong) UIView * _Nullable newMessageInfoView;
@property (nonatomic, strong) SBUMessageInputView * _Nonnull messageInputView;
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable channelStateBanner;
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// This object is used to import a list of messages, send messages, modify messages, and so on, and is created during initialization.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
/// This object has a list of all success messages synchronized with the server.
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull messageList;
/// This object that has resendable messages, including <code>pending messages</code> and <code>failed messages</code>.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, SBDBaseMessage *> * _Nonnull resendableMessages;
/// This is a params used to get a list of messages. Only getter is provided, please use initialization function to set params directly.
/// note:
/// For params properties, see <code>SBDMessageListParams</code> class.
/// since:
/// 1.0.11
@property (nonatomic, readonly, strong) SBDMessageListParams * _Nonnull messageListParams;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelViewController.init(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUChannelViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeReplies = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>nextResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeReplies = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>nextResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
/// Sends a user message with only text.
/// since:
/// 1.0.9
/// \param text String value
///
- (void)sendUserMessageWithText:(NSString * _Nonnull)text;
/// Sends a user messag with messageParams.
/// You can send a message by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param messageParams <code>SBDUserMessageParams</code> class object
///
- (void)sendUserMessageWithMessageParams:(SBDUserMessageParams * _Nonnull)messageParams;
/// Sends a file message with file data, file name, mime type.
/// since:
/// 1.0.9
/// \param fileData <code>Data</code> class object
///
/// \param fileName file name. Used when displayed in channel list.
///
/// \param mimeType file’s mime type.
///
- (void)sendFileMessageWithFileData:(NSData * _Nonnull)fileData fileName:(NSString * _Nonnull)fileName mimeType:(NSString * _Nonnull)mimeType;
/// Sends a file message with messageParams.
/// You can send a file message by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param messageParams <code>SBDFileMessageParams</code> class object
///
- (void)sendFileMessageWithMessageParams:(SBDFileMessageParams * _Nonnull)messageParams;
/// Resends a message with failedMessage object.
/// since:
/// 1.0.9
/// \param failedMessage <code>SBDBaseMessage</code> class based failed object
///
- (void)resendMessageWithFailedMessage:(SBDBaseMessage * _Nonnull)failedMessage;
/// Updates a user message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDUserMessage</code> object to update
///
/// \param text String to be updated
///
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message text:(NSString * _Nonnull)text;
/// Updates a user message with message object and messageParams.
/// You can update messages by setting various properties of MessageParams.
/// since:
/// 1.0.9
/// \param message <code>SBDUserMessage</code> object to update
///
/// \param messageParams <code>SBDUserMessageParams</code> class object
///
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message messageParams:(SBDUserMessageParams * _Nonnull)messageParams;
/// Deletes a message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDBaseMessage</code> based class object
///
- (void)deleteMessageWithMessage:(SBDBaseMessage * _Nonnull)message;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function is used to add or delete reactions.
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object to update
///
/// \param emojiKey set emoji key
///
/// \param didSelect set reaction state
///
- (void)setReactionWithMessage:(SBDBaseMessage * _Nonnull)message emojiKey:(NSString * _Nonnull)emojiKey didSelect:(BOOL)didSelect;
/// This function increases the new message count.
- (void)increaseNewMessageCount;
- (void)sendImageFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)sendVideoFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)sendDocumentFileMessageWithDocumentUrls:(NSArray<NSURL *> * _Nonnull)documentUrls;
/// If you want to use a custom channelSettingsViewController, override it and implement it.
- (void)showChannelSettings;
/// This function presents <code>SBUEmojiListViewController</code>
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object
///
- (void)showEmojiListModalWithMessage:(SBDBaseMessage * _Nonnull)message;
- (void)registerWithAdminMessageCell:(SBUBaseMessageCell * _Nonnull)adminMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithUserMessageCell:(SBUBaseMessageCell * _Nonnull)userMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithFileMessageCell:(SBUBaseMessageCell * _Nonnull)fileMessageCell nib:(UINib * _Nullable)nib;
- (void)registerWithCustomMessageCell:(SBUBaseMessageCell * _Nullable)customMessageCell nib:(UINib * _Nullable)nib;
/// This function sets the cell’s tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
- (void)setTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message;
/// This function sets the cell’s long tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
/// \param indexPath indexpath of cell
///
- (void)setLongTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message indexPath:(NSIndexPath * _Nonnull)indexPath;
/// This function sets the cell’s tap emoji gesture handling.
/// since:
/// 1.1.0
/// \param cell Message cell object
///
/// \param emojiKey emoji key
///
- (void)setTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey;
/// This function sets the cell’s long tap emoji gesture handling.
/// since:
/// 1.1.0
/// \param cell Message cell object
///
/// \param emojiKey emoji key
///
- (void)setLongTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey;
/// This is used to messageInputView state update.
/// since:
/// 1.2.0
- (void)updateMessageInputModeState;
- (BOOL)checkSameDayAsNextMessageWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)configureOffset;
/// This is used to check the loading status and control loading indicator.
/// \param loadingState Set to true when the list is loading.
///
/// \param showIndicator If true, the loading indicator is started, and if false, the indicator is stopped.
///
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator;
/// This is a function that gets the location of the message to be grouped.
/// Only successful messages can be grouped.
/// since:
/// 1.2.1
/// \param currentIndex Index of current message in the message list
///
///
/// returns:
/// Position of a message when grouped
- (enum MessageGroupPosition)getMessageGroupingPositionWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (void)onClickBack;
- (void)onClickSetting;
- (void)scrollToBottomWithAnimated:(BOOL)animated;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end

@class SBDFileMessage;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit))
- (void)didSelectDeleteImageWithMessage:(SBDFileMessage * _Nonnull)message;
@end

@class UIPresentationController;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIViewControllerTransitioningDelegate>
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end

@class UIDocumentPickerViewController;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIDocumentPickerDelegate>
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentAtURL:(NSURL * _Nonnull)url;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UIImagePickerControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCellIdentifierBy:(SBDBaseMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP13SendBirdUIKit27SBUMessageInputViewDelegate_")
@protocol SBUMessageInputViewDelegate <NSObject>
@optional
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
- (void)messageInputViewDidStartTyping;
- (void)messageInputViewDidEndTyping;
@end


@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUMessageInputViewDelegate>
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
- (void)messageInputViewDidStartTyping;
- (void)messageInputViewDidEndTyping;
@end

@class SBDReactionEvent;

@interface SBUChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate, SBDConnectionDelegate>
- (void)channel:(SBDBaseChannel * _Nonnull)sender didReceiveMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender didUpdateMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channel:(SBDBaseChannel * _Nonnull)sender updatedReaction:(SBDReactionEvent * _Nonnull)reactionEvent;
- (void)channelDidUpdateReadReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateDeliveryReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateTypingStatus:(SBDGroupChannel * _Nonnull)sender;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasMuted:(SBDUser * _Nonnull)user;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasUnmuted:(SBDUser * _Nonnull)user;
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)didSucceedReconnection;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit11SBUColorSet")
@interface SBUColorSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary100;)
+ (UIColor * _Nonnull)primary100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary200;)
+ (UIColor * _Nonnull)primary200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary300;)
+ (UIColor * _Nonnull)primary300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary400;)
+ (UIColor * _Nonnull)primary400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull primary500;)
+ (UIColor * _Nonnull)primary500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setPrimary500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary100;)
+ (UIColor * _Nonnull)secondary100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary200;)
+ (UIColor * _Nonnull)secondary200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary300;)
+ (UIColor * _Nonnull)secondary300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary400;)
+ (UIColor * _Nonnull)secondary400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull secondary500;)
+ (UIColor * _Nonnull)secondary500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSecondary500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background100;)
+ (UIColor * _Nonnull)background100 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground100:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background200;)
+ (UIColor * _Nonnull)background200 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground200:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background300;)
+ (UIColor * _Nonnull)background300 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground300:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background400;)
+ (UIColor * _Nonnull)background400 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground400:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background500;)
+ (UIColor * _Nonnull)background500 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground500:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background600;)
+ (UIColor * _Nonnull)background600 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground600:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull background700;)
+ (UIColor * _Nonnull)background700 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackground700:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull overlay01;)
+ (UIColor * _Nonnull)overlay01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOverlay01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull overlay02;)
+ (UIColor * _Nonnull)overlay02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOverlay02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight01;)
+ (UIColor * _Nonnull)onlight01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight02;)
+ (UIColor * _Nonnull)onlight02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight03;)
+ (UIColor * _Nonnull)onlight03 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight03:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull onlight04;)
+ (UIColor * _Nonnull)onlight04 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnlight04:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark01;)
+ (UIColor * _Nonnull)ondark01 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark01:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark02;)
+ (UIColor * _Nonnull)ondark02 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark02:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark03;)
+ (UIColor * _Nonnull)ondark03 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark03:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull ondark04;)
+ (UIColor * _Nonnull)ondark04 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOndark04:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull error;)
+ (UIColor * _Nonnull)error SWIFT_WARN_UNUSED_RESULT;
+ (void)setError:(UIColor * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull information;)
+ (UIColor * _Nonnull)information SWIFT_WARN_UNUSED_RESULT;
+ (void)setInformation:(UIColor * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit17SBUComponentTheme")
@interface SBUComponentTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUComponentTheme * _Nonnull light;)
+ (SBUComponentTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUComponentTheme * _Nonnull dark;)
+ (SBUComponentTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithEmptyViewBackgroundColor:(UIColor * _Nonnull)emptyViewBackgroundColor emptyViewStatusFont:(UIFont * _Nonnull)emptyViewStatusFont emptyViewStatusTintColor:(UIColor * _Nonnull)emptyViewStatusTintColor emptyViewRetryButtonTintColor:(UIColor * _Nonnull)emptyViewRetryButtonTintColor emptyViewRetryButtonFont:(UIFont * _Nonnull)emptyViewRetryButtonFont overlayColor:(UIColor * _Nonnull)overlayColor backgroundColor:(UIColor * _Nonnull)backgroundColor highlightedColor:(UIColor * _Nonnull)highlightedColor buttonTextColor:(UIColor * _Nonnull)buttonTextColor separatorColor:(UIColor * _Nonnull)separatorColor shadowColor:(UIColor * _Nonnull)shadowColor closeBarButtonTintColor:(UIColor * _Nonnull)closeBarButtonTintColor alertTitleColor:(UIColor * _Nonnull)alertTitleColor alertTitleFont:(UIFont * _Nonnull)alertTitleFont alertDetailColor:(UIColor * _Nonnull)alertDetailColor alertDetailFont:(UIFont * _Nonnull)alertDetailFont alertPlaceholderColor:(UIColor * _Nonnull)alertPlaceholderColor alertButtonColor:(UIColor * _Nonnull)alertButtonColor alertErrorColor:(UIColor * _Nonnull)alertErrorColor alertButtonFont:(UIFont * _Nonnull)alertButtonFont alertTextFieldBackgroundColor:(UIColor * _Nonnull)alertTextFieldBackgroundColor alertTextFieldTintColor:(UIColor * _Nonnull)alertTextFieldTintColor alertTextFieldFont:(UIFont * _Nonnull)alertTextFieldFont actionSheetTextFont:(UIFont * _Nonnull)actionSheetTextFont actionSheetTextColor:(UIColor * _Nonnull)actionSheetTextColor actionSheetSubTextFont:(UIFont * _Nonnull)actionSheetSubTextFont actionSheetSubTextColor:(UIColor * _Nonnull)actionSheetSubTextColor actionSheetItemColor:(UIColor * _Nonnull)actionSheetItemColor actionSheetErrorColor:(UIColor * _Nonnull)actionSheetErrorColor actionSheetButtonFont:(UIFont * _Nonnull)actionSheetButtonFont newMessageFont:(UIFont * _Nonnull)newMessageFont newMessageTintColor:(UIColor * _Nonnull)newMessageTintColor newMessageBackground:(UIColor * _Nonnull)newMessageBackground newMessageHighlighted:(UIColor * _Nonnull)newMessageHighlighted titleOnlineStateColor:(UIColor * _Nonnull)titleOnlineStateColor titleColor:(UIColor * _Nonnull)titleColor titleFont:(UIFont * _Nonnull)titleFont titleStatusColor:(UIColor * _Nonnull)titleStatusColor titleStatusFont:(UIFont * _Nonnull)titleStatusFont menuTitleFont:(UIFont * _Nonnull)menuTitleFont userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor reactionBoxBackgroundColor:(UIColor * _Nonnull)reactionBoxBackgroundColor reactionBoxBorderLineColor:(UIColor * _Nonnull)reactionBoxBorderLineColor reactionBoxEmojiCountColor:(UIColor * _Nonnull)reactionBoxEmojiCountColor reactionBoxEmojiBackgroundColor:(UIColor * _Nonnull)reactionBoxEmojiBackgroundColor reactionBoxSelectedEmojiBackgroundColor:(UIColor * _Nonnull)reactionBoxSelectedEmojiBackgroundColor reactionBoxEmojiCountFont:(UIFont * _Nonnull)reactionBoxEmojiCountFont emojiCountColor:(UIColor * _Nonnull)emojiCountColor emojiSelectedCountColor:(UIColor * _Nonnull)emojiSelectedCountColor emojiSelectedUnderlineColor:(UIColor * _Nonnull)emojiSelectedUnderlineColor emojiCountFont:(UIFont * _Nonnull)emojiCountFont reactionMenuLineColor:(UIColor * _Nonnull)reactionMenuLineColor emojiListSelectedBackgroundColor:(UIColor * _Nonnull)emojiListSelectedBackgroundColor addReactionTintColor:(UIColor * _Nonnull)addReactionTintColor channelTypeSelectorItemTintColor:(UIColor * _Nonnull)channelTypeSelectorItemTintColor channelTypeSelectorItemTextColor:(UIColor * _Nonnull)channelTypeSelectorItemTextColor channelTypeSelectorItemFont:(UIFont * _Nonnull)channelTypeSelectorItemFont broadcastIconBackgroundColor:(UIColor * _Nonnull)broadcastIconBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull emptyViewStatusFont;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewStatusTintColor;
@property (nonatomic, strong) UIColor * _Nonnull emptyViewRetryButtonTintColor;
@property (nonatomic, strong) UIFont * _Nonnull emptyViewRetryButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull alertTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull alertTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull alertDetailColor;
@property (nonatomic, strong) UIFont * _Nonnull alertDetailFont;
@property (nonatomic, strong) UIColor * _Nonnull alertPlaceholderColor;
@property (nonatomic, strong) UIColor * _Nonnull alertButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull alertErrorColor;
@property (nonatomic, strong) UIFont * _Nonnull alertButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull alertTextFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull alertTextFieldTintColor;
@property (nonatomic, strong) UIFont * _Nonnull alertTextFieldFont;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetTextFont;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetTextColor;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetSubTextFont;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetSubTextColor;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetItemColor;
@property (nonatomic, strong) UIColor * _Nonnull actionSheetErrorColor;
@property (nonatomic, strong) UIFont * _Nonnull actionSheetButtonFont;
@property (nonatomic, strong) UIFont * _Nonnull newMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull newMessageTintColor;
@property (nonatomic, strong) UIColor * _Nonnull newMessageBackground;
@property (nonatomic, strong) UIColor * _Nonnull newMessageHighlighted;
@property (nonatomic, strong) UIColor * _Nonnull titleOnlineStateColor;
@property (nonatomic, strong) UIColor * _Nonnull titleColor;
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
@property (nonatomic, strong) UIColor * _Nonnull titleStatusColor;
@property (nonatomic, strong) UIFont * _Nonnull titleStatusFont;
@property (nonatomic, strong) UIFont * _Nonnull menuTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull overlayColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull highlightedColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTextColor;
@property (nonatomic, strong) UIColor * _Nonnull separatorColor;
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
@property (nonatomic, strong) UIColor * _Nonnull closeBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxBorderLineColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxEmojiCountColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxEmojiBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionBoxSelectedEmojiBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull reactionBoxEmojiCountFont;
@property (nonatomic, strong) UIColor * _Nonnull emojiCountColor;
@property (nonatomic, strong) UIColor * _Nonnull emojiSelectedCountColor;
@property (nonatomic, strong) UIColor * _Nonnull emojiSelectedUnderlineColor;
@property (nonatomic, strong) UIFont * _Nonnull emojiCountFont;
@property (nonatomic, strong) UIColor * _Nonnull emojiListSelectedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull reactionMenuLineColor;
@property (nonatomic, strong) UIColor * _Nonnull addReactionTintColor;
@property (nonatomic, strong) UIColor * _Nonnull channelTypeSelectorItemTintColor;
@property (nonatomic, strong) UIColor * _Nonnull channelTypeSelectorItemTextColor;
@property (nonatomic, strong) UIFont * _Nonnull channelTypeSelectorItemFont;
@property (nonatomic, strong) UIColor * _Nonnull broadcastIconBackgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIStackView;
@class UILongPressGestureRecognizer;
@class UITapGestureRecognizer;

/// It is a base class used in message cell with contents.
/// since:
/// 1.2.1
SWIFT_CLASS("_TtC13SendBirdUIKit25SBUContentBaseMessageCell")
@interface SBUContentBaseMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UIStackView * _Nonnull userNameStackView;
@property (nonatomic, strong) UIStackView * _Nonnull contentsStackView;
@property (nonatomic, strong) UIView * _Nonnull userNameView;
@property (nonatomic, strong) UIView * _Nonnull profileView;
@property (nonatomic, strong) UIView * _Nonnull stateView;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView position:(enum MessagePosition)position groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)setMessageGrouping;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)onLongPressContentViewWithSender:(UILongPressGestureRecognizer * _Nullable)sender;
- (void)onTapContentViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (void)onTapProfileImageViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// This protocol is used to create a custom <code>CreateChannelTypeSelector</code>.
SWIFT_PROTOCOL("_TtP13SendBirdUIKit36SBUCreateChannelTypeSelectorProtocol_")
@protocol SBUCreateChannelTypeSelectorProtocol
/// This function shows selector view.
- (void)show;
/// This function dismisses selector view.
- (void)dismiss;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit30SBUCreateChannelViewController")
@interface SBUCreateChannelViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, readonly) enum ChannelType channelType;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUCreateChannelViewController(type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'init'");
- (nonnull instancetype)init;
/// If you have user objects, use this initialize function.
/// \param users <code>SBUUser</code> array object
///
/// \param type The type of channel to create (default: <code>.group</code>)
///
- (nonnull instancetype)initWithUsers:(NSArray<SBUUser *> * _Nullable)users type:(enum ChannelType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// Load user list.
/// If want using your custom user list, filled users with your custom user list.
/// \param reset <code>true</code> is reset user list and load new list
///
/// \param users customized <code>SBUUser</code> array for add to user list
///
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
/// Creates the channel with userIds.
/// since:
/// 1.0.9
/// \param userIds User Ids to include
///
- (void)createChannelWithUserIds:(NSArray<NSString *> * _Nonnull)userIds;
/// Creates the channel with channelParams.
/// You can create a channel by setting various properties of ChannelParams.
/// since:
/// 1.0.9
/// \param params <code>SBDGroupChannelParams</code> class object
///
- (void)createChannelWithParams:(SBDGroupChannelParams * _Nonnull)params;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUCreateChannelViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIImageView;

SWIFT_CLASS("_TtC13SendBirdUIKit12SBUEmptyView")
@interface SBUEmptyView : UIView
@property (nonatomic) enum EmptyViewType type;
@property (nonatomic, weak) id <SBUEmptyViewDelegate> _Nullable delegate;
@property (nonatomic, strong) UIImageView * _Nonnull statusImageView;
@property (nonatomic, strong) UILabel * _Nonnull statusLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupStyles;
- (void)layoutSubviews;
- (void)reloadData:(enum EmptyViewType)type;
/// Override this function to apply a custom type.
- (void)updateViews;
- (void)onClickRetry:(id _Nonnull)sender;
@end



IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUFileMessageCell")
@interface SBUFileMessageCell : SBUContentBaseMessageCell
@property (nonatomic, readonly, strong) SBDFileMessage * _Nullable fileMessage;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDFileMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUFontSet")
@interface SBUFontSet : NSObject
/// Medium, 18pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull h1;)
+ (UIFont * _Nonnull)h1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setH1:(UIFont * _Nonnull)value;
/// Bold, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull h2;)
+ (UIFont * _Nonnull)h2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setH2:(UIFont * _Nonnull)value;
/// Regular, 14pt, Line height: 20pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body1;)
+ (UIFont * _Nonnull)body1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody1:(UIFont * _Nonnull)value;
/// Regular, 14pt, Line height: 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body2;)
+ (UIFont * _Nonnull)body2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody2:(UIFont * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull body3;)
+ (UIFont * _Nonnull)body3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setBody3:(UIFont * _Nonnull)value;
/// Semibold, 20pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button1;)
+ (UIFont * _Nonnull)button1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton1:(UIFont * _Nonnull)value;
/// Medium, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button2;)
+ (UIFont * _Nonnull)button2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton2:(UIFont * _Nonnull)value;
/// Medium, 14pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull button3;)
+ (UIFont * _Nonnull)button3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setButton3:(UIFont * _Nonnull)value;
/// Bold, 12pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption1;)
+ (UIFont * _Nonnull)caption1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption1:(UIFont * _Nonnull)value;
/// Regular, 12pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption2;)
+ (UIFont * _Nonnull)caption2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption2:(UIFont * _Nonnull)value;
/// Regular, 11pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption3;)
+ (UIFont * _Nonnull)caption3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption3:(UIFont * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull caption4;)
+ (UIFont * _Nonnull)caption4 SWIFT_WARN_UNUSED_RESULT;
+ (void)setCaption4:(UIFont * _Nonnull)value;
/// Medium, 16pt, Line hieght 22pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull subtitle1;)
+ (UIFont * _Nonnull)subtitle1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSubtitle1:(UIFont * _Nonnull)value;
/// Regular, 16pt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIFont * _Nonnull subtitle2;)
+ (UIFont * _Nonnull)subtitle2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setSubtitle2:(UIFont * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUGlobals")
@interface SBUGlobals : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ApplicationId;)
+ (NSString * _Nullable)ApplicationId SWIFT_WARN_UNUSED_RESULT;
+ (void)setApplicationId:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable AccessToken;)
+ (NSString * _Nullable)AccessToken SWIFT_WARN_UNUSED_RESULT;
+ (void)setAccessToken:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUser * _Nullable CurrentUser;)
+ (SBUUser * _Nullable)CurrentUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrentUser:(SBUUser * _Nullable)newCurrentUser;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL UsingMessageGrouping;)
+ (BOOL)UsingMessageGrouping SWIFT_WARN_UNUSED_RESULT;
+ (void)setUsingMessageGrouping:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit10SBUIconSet")
@interface SBUIconSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionLeave;)
+ (UIImage * _Nonnull)iconActionLeave SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionLeave:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionNotificationOn;)
+ (UIImage * _Nonnull)iconActionNotificationOn SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionNotificationOn:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconActionNotificationOff;)
+ (UIImage * _Nonnull)iconActionNotificationOff SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconActionNotificationOff:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconAdd;)
+ (UIImage * _Nonnull)iconAdd SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconAdd:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBack;)
+ (UIImage * _Nonnull)iconBack SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBack:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCamera;)
+ (UIImage * _Nonnull)iconCamera SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCamera:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPlus;)
+ (UIImage * _Nonnull)iconPlus SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPlus:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconChat;)
+ (UIImage * _Nonnull)iconChat SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconChat:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCheckbox;)
+ (UIImage * _Nonnull)iconCheckbox SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCheckbox:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCheckboxOff;)
+ (UIImage * _Nonnull)iconCheckboxOff SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCheckboxOff:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconClose;)
+ (UIImage * _Nonnull)iconClose SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconClose:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCopy;)
+ (UIImage * _Nonnull)iconCopy SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCopy:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconCreate;)
+ (UIImage * _Nonnull)iconCreate SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconCreate:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDelete;)
+ (UIImage * _Nonnull)iconDelete SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDelete:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDelivered;)
+ (UIImage * _Nonnull)iconDelivered SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDelivered:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDocument;)
+ (UIImage * _Nonnull)iconDocument SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDocument:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDownload;)
+ (UIImage * _Nonnull)iconDownload SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDownload:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconDummy;)
+ (UIImage * _Nonnull)iconDummy SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconDummy:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconEdit;)
+ (UIImage * _Nonnull)iconEdit SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconEdit:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconError;)
+ (UIImage * _Nonnull)iconError SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconError:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconErrorFilled;)
+ (UIImage * _Nonnull)iconErrorFilled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconErrorFilled:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconGif;)
+ (UIImage * _Nonnull)iconGif SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconGif:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconInfo;)
+ (UIImage * _Nonnull)iconInfo SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconInfo:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconLeave;)
+ (UIImage * _Nonnull)iconLeave SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconLeave:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMembers;)
+ (UIImage * _Nonnull)iconMembers SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMembers:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconModerations;)
+ (UIImage * _Nonnull)iconModerations SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconModerations:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastSmall;)
+ (UIImage * _Nonnull)iconBroadcastSmall SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastSmall:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastMedium;)
+ (UIImage * _Nonnull)iconBroadcastMedium SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastMedium:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBroadcastLarge;)
+ (UIImage * _Nonnull)iconBroadcastLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBroadcastLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFreeze;)
+ (UIImage * _Nonnull)iconFreeze SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFreeze:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMute;)
+ (UIImage * _Nonnull)iconMute SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMute:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconNotifications;)
+ (UIImage * _Nonnull)iconNotifications SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconNotifications:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconThumbnailLight;)
+ (UIImage * _Nonnull)iconThumbnailLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconThumbnailLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconNoThumbnailLight;)
+ (UIImage * _Nonnull)iconNoThumbnailLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconNoThumbnailLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPhoto;)
+ (UIImage * _Nonnull)iconPhoto SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPhoto:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconPlay;)
+ (UIImage * _Nonnull)iconPlay SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconPlay:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconRead;)
+ (UIImage * _Nonnull)iconRead SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconRead:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconRefresh;)
+ (UIImage * _Nonnull)iconRefresh SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconRefresh:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconAvatarLight;)
+ (UIImage * _Nonnull)iconAvatarLight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconAvatarLight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSend;)
+ (UIImage * _Nonnull)iconSend SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSend:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSent;)
+ (UIImage * _Nonnull)iconSent SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSent:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFailed;)
+ (UIImage * _Nonnull)iconFailed SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFailed:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconShevronRight;)
+ (UIImage * _Nonnull)iconShevronRight SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconShevronRight:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconUser;)
+ (UIImage * _Nonnull)iconUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconUser:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSpinnerSmall;)
+ (UIImage * _Nonnull)iconSpinnerSmall SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSpinnerSmall:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconSpinnerLarge;)
+ (UIImage * _Nonnull)iconSpinnerLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconSpinnerLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFileDocument;)
+ (UIImage * _Nonnull)iconFileDocument SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFileDocument:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconFileAudio;)
+ (UIImage * _Nonnull)iconFileAudio SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconFileAudio:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconChevronDown;)
+ (UIImage * _Nonnull)iconChevronDown SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconChevronDown:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMore;)
+ (UIImage * _Nonnull)iconMore SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMore:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconOperator;)
+ (UIImage * _Nonnull)iconOperator SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconOperator:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMuted;)
+ (UIImage * _Nonnull)iconMuted SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMuted:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconBanned;)
+ (UIImage * _Nonnull)iconBanned SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconBanned:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull iconMessage;)
+ (UIImage * _Nonnull)iconMessage SWIFT_WARN_UNUSED_RESULT;
+ (void)setIconMessage:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeGroup;)
+ (UIImage * _Nonnull)channelTypeGroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeGroup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeSupergroup;)
+ (UIImage * _Nonnull)channelTypeSupergroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeSupergroup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull channelTypeBroadcast;)
+ (UIImage * _Nonnull)channelTypeBroadcast SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTypeBroadcast:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiHeartEyes;)
+ (UIImage * _Nonnull)emojiHeartEyes SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiHeartEyes:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiLaughing;)
+ (UIImage * _Nonnull)emojiLaughing SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiLaughing:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiSweatSmile;)
+ (UIImage * _Nonnull)emojiSweatSmile SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiSweatSmile:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiSob;)
+ (UIImage * _Nonnull)emojiSob SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiSob:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiRage;)
+ (UIImage * _Nonnull)emojiRage SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiRage:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiMoreLarge;)
+ (UIImage * _Nonnull)emojiMoreLarge SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiMoreLarge:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiThumbsup;)
+ (UIImage * _Nonnull)emojiThumbsup SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiThumbsup:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiThubsdown;)
+ (UIImage * _Nonnull)emojiThubsdown SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiThubsdown:(UIImage * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nonnull emojiFail;)
+ (UIImage * _Nonnull)emojiFail SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmojiFail:(UIImage * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC13SendBirdUIKit27SBUInviteUserViewController")
@interface SBUInviteUserViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, readonly) enum ChannelInviteListType inviteListType;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController.init(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channel and users objects, use this initialize function.
/// \param channel Channel object
///
/// \param users <code>SBUUser</code> object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and users objects, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param users <code>SBUUser</code> object
///
/// \param type Invite list type (default <code>.users</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// Load user list.
/// If want using your custom user list, filled users with your custom user list.
/// \param reset <code>true</code> is reset user list and load new list
///
/// \param users customized <code>SBUUser</code> array for add to user list
///
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// Make this function return the next list each time it is called.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
/// Invites users in the channel with selected userIds.
/// since:
/// 1.0.9
- (void)inviteUsers;
/// Invites users in the channel with directly generated userIds.
/// since:
/// 1.0.9
/// \param userIds User IDs to invite
///
- (void)inviteUsersWithUserIds:(NSArray<NSString *> * _Nonnull)userIds;
/// Promotes members as operator with selected userIds.
/// since:
/// 1.2.0
- (void)promoteToOperators;
/// Promotes members as operator with directly generated memberIds.
/// since:
/// 1.2.0
/// \param userIds member IDs to invite
///
- (void)promoteToOperatorsWithMemberIds:(NSArray<NSString *> * _Nonnull)memberIds;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
- (void)selectUserWithUser:(SBUUser * _Nonnull)user;
- (void)popToChannel;
- (void)popToPrevious;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUInviteUserViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class SBDError;

SWIFT_CLASS("_TtC13SendBirdUIKit7SBUMain")
@interface SBUMain : NSObject
+ (void)initializeWithApplicationId:(NSString * _Nonnull)applicationId;
+ (void)connectWithCompletionHandler:(void (^ _Nonnull)(SBDUser * _Nullable, SBDError * _Nullable))completionHandler;
+ (void)connectionCheckWithCompletionHandler:(void (^ _Nonnull)(SBDUser * _Nullable, SBDError * _Nullable))completionHandler;
+ (void)disconnectWithCompletionHandler:(void (^ _Nullable)(void))completionHandler;
+ (void)updateUserInfoWithNickname:(NSString * _Nullable)nickname profileUrl:(NSString * _Nullable)profileUrl completionHandler:(void (^ _Nullable)(SBDError * _Nullable))completionHandler;
+ (NSString * _Nonnull)getUIKitVersion SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("", "shortVersionString");
+ (NSString * _Nullable)versionString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)shortVersionString SWIFT_WARN_UNUSED_RESULT;
+ (void)registerPushWithDeviceToken:(NSData * _Nonnull)deviceToken completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)unregisterPushTokenWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)unregisterAllPushTokenWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
+ (void)openChannelWithChannelUrl:(NSString * _Nonnull)channelUrl basedOnChannelList:(BOOL)basedOnChannelList;
/// You can activate log information for debugging.
/// <ul>
///   <li>
///     <code>Objective-C</code> uses bit masking. (e,g, <code>.error|.info</code>)
///   </li>
///   <li>
///     <code>Swift</code> uses a single type in this function.
///   </li>
///   <li>
///     default type: .none
///   </li>
/// </ul>
/// \param type LogType
///
+ (void)setLogLevel:(enum LogType)type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit27SBUMemberListViewController")
@interface SBUMemberListViewController : UIViewController
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) UIView * _Nullable emptyView;
@property (nonatomic, readonly) enum ChannelMemberListType memberListType;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull memberList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController(channelUrl:type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController.init(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channel and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channel Channel object
///
/// \param members <code>SBUUser</code> array object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channelUrl Channel url string
///
/// \param members <code>SBUUser</code> array object
///
/// \param type Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function to load the member list.
/// This requests the required list according to <code>memberListType</code>.
/// If you want using your custom member list, filled members with your custom member list.
/// since:
/// 1.2.0
/// \param reset <code>true</code> is reset member list and load new list
///
/// \param members customized <code>SBUUser</code> array for add to member list
///
- (void)loadNextMemberListWithReset:(BOOL)reset members:(NSArray<SBUUser *> * _Nullable)members;
/// When creating and using a member list directly, overriding this function and return the next member list.
/// Make this function return the next list each time it is called.
/// since:
/// 1.2.0
///
/// returns:
/// next member list
- (NSArray<SBUUser *> * _Nullable)nextMemberList SWIFT_WARN_UNUSED_RESULT;
/// This function to get member information directly from the channel in the case of GroupChannel.
/// If you use it in SuperGroup, Broadcast channel, only some member information can be loaded.
/// since:
/// 1.2.0
- (void)loadMembers;
/// This function promotes the member as an operator.
/// since:
/// 1.2.0
/// \param member A member to be promoted
///
- (void)promoteToOperatorWithMember:(SBUUser * _Nonnull)member;
/// This function dismiss the operator as a member.
/// since:
/// 1.2.0
/// \param member A member to be dismissed
///
- (void)dismissOperatorWithMember:(SBUUser * _Nonnull)member;
/// This function mutes the member.
/// since:
/// 1.2.0
/// \param member A member to be muted
///
- (void)muteWithMember:(SBUUser * _Nonnull)member;
/// This function unmutes the member.
/// since:
/// 1.2.0
/// \param member A member to be unmuted
///
- (void)unmuteWithMember:(SBUUser * _Nonnull)member;
/// This function bans the member.
/// since:
/// 1.2.0
/// \param member A member to be banned
///
- (void)banWithMember:(SBUUser * _Nonnull)member;
/// This function unbans the member.
/// since:
/// 1.2.0
/// \param member A member to be unbanned
///
- (void)unbanWithMember:(SBUUser * _Nonnull)member;
/// If you want to use a custom inviteChannelViewController, override it and implement it.
- (void)showInviteUser;
/// Used to register a custom cell as a base cell based on <code>UITableViewCell</code>.
/// \param userCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
/// This function reloads the member list.
/// since:
/// 1.2.0
- (void)reloadMemberList;
- (void)onClickInviteUser;
/// /// This function sets the cell’s more menu button action handling.
/// since:
/// 1.2.0
/// \param member <code>SBUUser</code> obejct
///
- (void)setMoreMenuActionHandler:(SBUUser * _Nonnull)member;
- (void)didReceiveError:(NSString * _Nullable)message;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBUEmptyViewDelegate>
- (void)didSelectRetry;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <SBDChannelDelegate>
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
@end


@interface SBUMemberListViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit19SBUMessageCellTheme")
@interface SBUMessageCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageCellTheme * _Nonnull light;)
+ (SBUMessageCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageCellTheme * _Nonnull dark;)
+ (SBUMessageCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor leftBackgroundColor:(UIColor * _Nonnull)leftBackgroundColor leftPressedBackgroundColor:(UIColor * _Nonnull)leftPressedBackgroundColor rightBackgroundColor:(UIColor * _Nonnull)rightBackgroundColor rightPressedBackgroundColor:(UIColor * _Nonnull)rightPressedBackgroundColor dateFont:(UIFont * _Nonnull)dateFont dateTextColor:(UIColor * _Nonnull)dateTextColor dateBackgroundColor:(UIColor * _Nonnull)dateBackgroundColor userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor userNameFont:(UIFont * _Nonnull)userNameFont userNameTextColor:(UIColor * _Nonnull)userNameTextColor timeFont:(UIFont * _Nonnull)timeFont timeTextColor:(UIColor * _Nonnull)timeTextColor pendingStateColor:(UIColor * _Nonnull)pendingStateColor failedStateColor:(UIColor * _Nonnull)failedStateColor succeededStateColor:(UIColor * _Nonnull)succeededStateColor readReceiptStateColor:(UIColor * _Nonnull)readReceiptStateColor deliveryReceiptStateColor:(UIColor * _Nonnull)deliveryReceiptStateColor userMessageFont:(UIFont * _Nonnull)userMessageFont userMessageLeftTextColor:(UIColor * _Nonnull)userMessageLeftTextColor userMessageLeftEditTextColor:(UIColor * _Nonnull)userMessageLeftEditTextColor userMessageRightTextColor:(UIColor * _Nonnull)userMessageRightTextColor userMessageRightEditTextColor:(UIColor * _Nonnull)userMessageRightEditTextColor fileIconBackgroundColor:(UIColor * _Nonnull)fileIconBackgroundColor fileIconColor:(UIColor * _Nonnull)fileIconColor fileMessageNameFont:(UIFont * _Nonnull)fileMessageNameFont fileMessageLeftTextColor:(UIColor * _Nonnull)fileMessageLeftTextColor fileMessageRightTextColor:(UIColor * _Nonnull)fileMessageRightTextColor fileMessagePlaceholderColor:(UIColor * _Nonnull)fileMessagePlaceholderColor adminMessageFont:(UIFont * _Nonnull)adminMessageFont adminMessageTextColor:(UIColor * _Nonnull)adminMessageTextColor unknownMessageDescFont:(UIFont * _Nonnull)unknownMessageDescFont unknownMessageDescTextColor:(UIColor * _Nonnull)unknownMessageDescTextColor ogTitleFont:(UIFont * _Nonnull)ogTitleFont ogTitleColor:(UIColor * _Nonnull)ogTitleColor ogDescriptionFont:(UIFont * _Nonnull)ogDescriptionFont ogDescriptionColor:(UIColor * _Nonnull)ogDescriptionColor ogURLAddressFont:(UIFont * _Nonnull)ogURLAddressFont ogURLAddressColor:(UIColor * _Nonnull)ogURLAddressColor contentBackgroundColor:(UIColor * _Nonnull)contentBackgroundColor pressedContentBackgroundColor:(UIColor * _Nonnull)pressedContentBackgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull leftPressedBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull rightPressedBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull dateFont;
@property (nonatomic, strong) UIColor * _Nonnull dateTextColor;
@property (nonatomic, strong) UIColor * _Nonnull dateBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIFont * _Nonnull timeFont;
@property (nonatomic, strong) UIColor * _Nonnull timeTextColor;
@property (nonatomic, strong) UIColor * _Nonnull pendingStateColor;
@property (nonatomic, strong) UIColor * _Nonnull failedStateColor;
@property (nonatomic, strong) UIColor * _Nonnull succeededStateColor;
@property (nonatomic, strong) UIColor * _Nonnull readReceiptStateColor;
@property (nonatomic, strong) UIColor * _Nonnull deliveryReceiptStateColor;
@property (nonatomic, strong) UIColor * _Nonnull contentBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull pressedContentBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull userMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull userMessageLeftTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageLeftEditTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageRightTextColor;
@property (nonatomic, strong) UIColor * _Nonnull userMessageRightEditTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileIconBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull fileIconColor;
@property (nonatomic, strong) UIFont * _Nonnull fileMessageNameFont;
@property (nonatomic, strong) UIColor * _Nonnull fileMessageLeftTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileMessageRightTextColor;
@property (nonatomic, strong) UIColor * _Nonnull fileMessagePlaceholderColor;
@property (nonatomic, strong) UIFont * _Nonnull adminMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull adminMessageTextColor;
@property (nonatomic, strong) UIFont * _Nonnull unknownMessageDescFont;
@property (nonatomic, strong) UIColor * _Nonnull unknownMessageDescTextColor;
@property (nonatomic, strong) UIFont * _Nonnull ogTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull ogTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull ogDescriptionFont;
@property (nonatomic, strong) UIColor * _Nonnull ogDescriptionColor;
@property (nonatomic, strong) UIFont * _Nonnull ogURLAddressFont;
@property (nonatomic, strong) UIColor * _Nonnull ogURLAddressColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit20SBUMessageInputTheme")
@interface SBUMessageInputTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageInputTheme * _Nonnull light;)
+ (SBUMessageInputTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUMessageInputTheme * _Nonnull dark;)
+ (SBUMessageInputTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor textFieldBackgroundColor:(UIColor * _Nonnull)textFieldBackgroundColor textFieldPlaceholderColor:(UIColor * _Nonnull)textFieldPlaceholderColor textFieldPlaceholderFont:(UIFont * _Nonnull)textFieldPlaceholderFont textFieldDisabledColor:(UIColor * _Nonnull)textFieldDisabledColor textFieldTintColor:(UIColor * _Nonnull)textFieldTintColor textFieldTextColor:(UIColor * _Nonnull)textFieldTextColor textFieldBorderColor:(UIColor * _Nonnull)textFieldBorderColor buttonTintColor:(UIColor * _Nonnull)buttonTintColor buttonDisabledTintColor:(UIColor * _Nonnull)buttonDisabledTintColor cancelButtonFont:(UIFont * _Nonnull)cancelButtonFont saveButtonFont:(UIFont * _Nonnull)saveButtonFont saveButtonTextColor:(UIColor * _Nonnull)saveButtonTextColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldPlaceholderColor;
@property (nonatomic, strong) UIFont * _Nonnull textFieldPlaceholderFont;
@property (nonatomic, strong) UIColor * _Nonnull textFieldDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldTintColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldTextColor;
@property (nonatomic, strong) UIColor * _Nonnull textFieldBorderColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonDisabledTintColor;
@property (nonatomic, strong) UIFont * _Nonnull cancelButtonFont;
@property (nonatomic, strong) UIFont * _Nonnull saveButtonFont;
@property (nonatomic, strong) UIColor * _Nonnull saveButtonTextColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIButton;
@class UITextView;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit19SBUMessageInputView")
@interface SBUMessageInputView : UIView <UITextViewDelegate>
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified addButton;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified placeholderLabel;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified textView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified sendButton;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified editView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified cancelButton;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified saveButton;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageInputView.sbu_loadViewFromNib()'");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageInputView.sbu_loadViewFromNib()'");
- (void)awakeFromNib;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
- (void)startEditModeWithText:(NSString * _Nonnull)text;
- (void)endEditMode;
/// Sets frozen mode state.
/// \param isFrozen <code>true</code> is frozen mode, <code>false</code> is unfrozen mode
///
- (void)setFrozenModeState:(BOOL)isFrozen;
/// Sets frozen mode state.
/// \param isMuted <code>true</code> is muted mode, <code>false</code> is unmuted mode
///
- (void)setMutedModeState:(BOOL)isMuted;
- (void)endTypingMode;
- (void)updateTextViewHeight;
- (IBAction)onClickAddButton:(id _Nonnull)sender;
- (IBAction)onClickSendButton:(id _Nonnull)sender;
- (IBAction)onClickCancelButton:(id _Nonnull)sender;
- (IBAction)onClickSaveButton:(id _Nonnull)sender;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM(NSInteger, SBUMessageReceiptState, open) {
  SBUMessageReceiptStateNone = 0,
  SBUMessageReceiptStateReadReceipt = 1,
  SBUMessageReceiptStateDeliveryReceipt = 2,
};


SWIFT_CLASS("_TtC13SendBirdUIKit28SBUModerationsViewController")
@interface SBUModerationsViewController : UIViewController <UINavigationControllerDelegate>
@property (nonatomic, strong) UIView * _Nullable titleView;
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
/// One of two must be set.
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUModerationsViewController(channel:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
/// This function handles the initialization of autolayouts.
- (void)setupAutolayout;
/// This function handles the initialization of styles.
- (void)setupStyles;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
/// This function is used to load channel information.
/// \param channelUrl channel url
///
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl;
/// This function freezes the channel.
/// \param completionHandler completion handler of freeze status change
///
- (void)freezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This function unfreezes the channel.
/// \param completionHandler completion handler of freeze status change
///
- (void)unfreezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the operator List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showOperatorList;
/// This is a function that shows the muted member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showMutedMeberList;
/// This is a function that shows the banned member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showBannedMeberList;
/// Changes freeze status on channel.
/// \param freeze freeze status
///
/// \param completionHandler completion handler of freeze status change
///
- (void)changeFreeze:(BOOL)freeze :(void (^ _Nullable)(BOOL))completionHandler;
- (void)didReceiveError:(NSString * _Nullable)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface SBUModerationsViewController (SWIFT_EXTENSION(SendBirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit17SBUNewMessageInfo")
@interface SBUNewMessageInfo : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
- (void)onClickNewMessageInfo;
@end

@class SBDMember;

SWIFT_CLASS("_TtC13SendBirdUIKit12SBUStringSet")
@interface SBUStringSet : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Cancel;)
+ (NSString * _Nonnull)Cancel SWIFT_WARN_UNUSED_RESULT;
+ (void)setCancel:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull OK;)
+ (NSString * _Nonnull)OK SWIFT_WARN_UNUSED_RESULT;
+ (void)setOK:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Retry;)
+ (NSString * _Nonnull)Retry SWIFT_WARN_UNUSED_RESULT;
+ (void)setRetry:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Save;)
+ (NSString * _Nonnull)Save SWIFT_WARN_UNUSED_RESULT;
+ (void)setSave:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Copy;)
+ (NSString * _Nonnull)Copy SWIFT_WARN_UNUSED_RESULT;
+ (void)setCopy:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Delete;)
+ (NSString * _Nonnull)Delete SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelete:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Edit;)
+ (NSString * _Nonnull)Edit SWIFT_WARN_UNUSED_RESULT;
+ (void)setEdit:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Remove;)
+ (NSString * _Nonnull)Remove SWIFT_WARN_UNUSED_RESULT;
+ (void)setRemove:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Camera;)
+ (NSString * _Nonnull)Camera SWIFT_WARN_UNUSED_RESULT;
+ (void)setCamera:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull PhotoVideoLibrary;)
+ (NSString * _Nonnull)PhotoVideoLibrary SWIFT_WARN_UNUSED_RESULT;
+ (void)setPhotoVideoLibrary:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Document;)
+ (NSString * _Nonnull)Document SWIFT_WARN_UNUSED_RESULT;
+ (void)setDocument:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Loading;)
+ (NSString * _Nonnull)Loading SWIFT_WARN_UNUSED_RESULT;
+ (void)setLoading:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Invite;)
+ (NSString * _Nonnull)Invite SWIFT_WARN_UNUSED_RESULT;
+ (void)setInvite:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Alert_Delete;)
+ (NSString * _Nonnull)Alert_Delete SWIFT_WARN_UNUSED_RESULT;
+ (void)setAlert_Delete:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_Yesterday;)
+ (NSString * _Nonnull)Date_Yesterday SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Yesterday:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Year)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Year SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Year:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Day)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Day SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Day:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Month)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Month SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Month:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Hour)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Hour SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Hour:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Date_Min)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Date_Min SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Min:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_Ago;)
+ (NSString * _Nonnull)Date_Ago SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_Ago:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Date_On;)
+ (NSString * _Nonnull)Date_On SWIFT_WARN_UNUSED_RESULT;
+ (void)setDate_On:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelList_Header_Title;)
+ (NSString * _Nonnull)ChannelList_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelList_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelList_Last_File_Message;)
+ (NSString * _Nonnull)ChannelList_Last_File_Message SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelList_Last_File_Message:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Name_Default;)
+ (NSString * _Nonnull)Channel_Name_Default SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Name_Default:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Name_No_Members;)
+ (NSString * _Nonnull)Channel_Name_No_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Name_No_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Header_LastSeen;)
+ (NSString * _Nonnull)Channel_Header_LastSeen SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Header_LastSeen:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Channel_Header_Typing)(NSArray<SBDMember *> * _Nonnull);)
+ (NSString * _Nonnull (^ _Nonnull)(NSArray<SBDMember *> * _Nonnull))Channel_Header_Typing SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Header_Typing:(NSString * _Nonnull (^ _Nonnull)(NSArray<SBDMember *> * _Nonnull))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_Success_Download_file;)
+ (NSString * _Nonnull)Channel_Success_Download_file SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_Success_Download_file:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_New_Message_File;)
+ (NSString * _Nonnull)Channel_New_Message_File SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_New_Message_File:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull Channel_New_Message)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))Channel_New_Message SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_New_Message:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Channel_State_Banner_Frozen;)
+ (NSString * _Nonnull)Channel_State_Banner_Frozen SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannel_State_Banner_Frozen:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Header_Title;)
+ (NSString * _Nonnull)ChannelSettings_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Change_Name;)
+ (NSString * _Nonnull)ChannelSettings_Change_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Change_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Change_Image;)
+ (NSString * _Nonnull)ChannelSettings_Change_Image SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Change_Image:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Enter_New_Name;)
+ (NSString * _Nonnull)ChannelSettings_Enter_New_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Enter_New_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Notifications;)
+ (NSString * _Nonnull)ChannelSettings_Notifications SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Notifications:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Members_Title;)
+ (NSString * _Nonnull)ChannelSettings_Members_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Members_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull ChannelSettings_Members)(NSUInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSUInteger))ChannelSettings_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Members:(NSString * _Nonnull (^ _Nonnull)(NSUInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Leave;)
+ (NSString * _Nonnull)ChannelSettings_Leave SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Leave:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Moderations;)
+ (NSString * _Nonnull)ChannelSettings_Moderations SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Moderations:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Operators;)
+ (NSString * _Nonnull)ChannelSettings_Operators SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Operators:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Muted_Members;)
+ (NSString * _Nonnull)ChannelSettings_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Banned_Members;)
+ (NSString * _Nonnull)ChannelSettings_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelSettings_Freeze_Channel;)
+ (NSString * _Nonnull)ChannelSettings_Freeze_Channel SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettings_Freeze_Channel:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Placeholder;)
+ (NSString * _Nonnull)MessageInput_Text_Placeholder SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Placeholder:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Unavailable;)
+ (NSString * _Nonnull)MessageInput_Text_Unavailable SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Unavailable:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MessageInput_Text_Muted;)
+ (NSString * _Nonnull)MessageInput_Text_Muted SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInput_Text_Muted:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Edited;)
+ (NSString * _Nonnull)Message_Edited SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Edited:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_System;)
+ (NSString * _Nonnull)Message_System SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_System:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Unknown_Title;)
+ (NSString * _Nonnull)Message_Unknown_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Unknown_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Message_Unknown_Desctiption;)
+ (NSString * _Nonnull)Message_Unknown_Desctiption SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessage_Unknown_Desctiption:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Channels;)
+ (NSString * _Nonnull)Empty_No_Channels SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Channels:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Messages;)
+ (NSString * _Nonnull)Empty_No_Messages SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Messages:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Users;)
+ (NSString * _Nonnull)Empty_No_Users SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Users:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Muted_Members;)
+ (NSString * _Nonnull)Empty_No_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_No_Banned_Members;)
+ (NSString * _Nonnull)Empty_No_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_No_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull Empty_Wrong;)
+ (NSString * _Nonnull)Empty_Wrong SWIFT_WARN_UNUSED_RESULT;
+ (void)setEmpty_Wrong:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull CreateChannel_Create)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))CreateChannel_Create SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Create:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CreateChannel_Header_Title;)
+ (NSString * _Nonnull)CreateChannel_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull CreateChannel_Header_Select_Members;)
+ (NSString * _Nonnull)CreateChannel_Header_Select_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setCreateChannel_Header_Select_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull InviteChannel_Header_Title;)
+ (NSString * _Nonnull)InviteChannel_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull InviteChannel_Header_Select_Members;)
+ (NSString * _Nonnull)InviteChannel_Header_Select_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Header_Select_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull InviteChannel_Invite)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))InviteChannel_Invite SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Invite:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull (^ _Nonnull InviteChannel_Add)(NSInteger);)
+ (NSString * _Nonnull (^ _Nonnull)(NSInteger))InviteChannel_Add SWIFT_WARN_UNUSED_RESULT;
+ (void)setInviteChannel_Add:(NSString * _Nonnull (^ _Nonnull)(NSInteger))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Header_Title;)
+ (NSString * _Nonnull)MemberList_Header_Title SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Header_Title:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Me;)
+ (NSString * _Nonnull)MemberList_Me SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Me:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Ban;)
+ (NSString * _Nonnull)MemberList_Ban SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Ban:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Unban;)
+ (NSString * _Nonnull)MemberList_Unban SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Unban:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Mute;)
+ (NSString * _Nonnull)MemberList_Mute SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Mute:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Unmute;)
+ (NSString * _Nonnull)MemberList_Unmute SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Unmute:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Dismiss_Operator;)
+ (NSString * _Nonnull)MemberList_Dismiss_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Dismiss_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Promote_Operator;)
+ (NSString * _Nonnull)MemberList_Promote_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Promote_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Members;)
+ (NSString * _Nonnull)MemberList_Title_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Operators;)
+ (NSString * _Nonnull)MemberList_Title_Operators SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Operators:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Muted_Members;)
+ (NSString * _Nonnull)MemberList_Title_Muted_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Muted_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull MemberList_Title_Banned_Members;)
+ (NSString * _Nonnull)MemberList_Title_Banned_Members SWIFT_WARN_UNUSED_RESULT;
+ (void)setMemberList_Title_Banned_Members:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull User_No_Name;)
+ (NSString * _Nonnull)User_No_Name SWIFT_WARN_UNUSED_RESULT;
+ (void)setUser_No_Name:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull User_Operator;)
+ (NSString * _Nonnull)User_Operator SWIFT_WARN_UNUSED_RESULT;
+ (void)setUser_Operator:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_Group;)
+ (NSString * _Nonnull)ChannelType_Group SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_Group:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_SuperGroup;)
+ (NSString * _Nonnull)ChannelType_SuperGroup SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_SuperGroup:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull ChannelType_Broadcast;)
+ (NSString * _Nonnull)ChannelType_Broadcast SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelType_Broadcast:(NSString * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SBUUserListTheme;
@class SBUUserCellTheme;

SWIFT_CLASS("_TtC13SendBirdUIKit8SBUTheme")
@interface SBUTheme : NSObject
- (nonnull instancetype)initWithChannelListTheme:(SBUChannelListTheme * _Nonnull)channelListTheme channelCellTheme:(SBUChannelCellTheme * _Nonnull)channelCellTheme channelTheme:(SBUChannelTheme * _Nonnull)channelTheme messageInputTheme:(SBUMessageInputTheme * _Nonnull)messageInputTheme messageCellTheme:(SBUMessageCellTheme * _Nonnull)messageCellTheme userListTheme:(SBUUserListTheme * _Nonnull)userListTheme userCellTheme:(SBUUserCellTheme * _Nonnull)userCellTheme channelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme componentTheme:(SBUComponentTheme * _Nonnull)componentTheme OBJC_DESIGNATED_INITIALIZER;
+ (void)setWithTheme:(SBUTheme * _Nonnull)theme;
+ (void)setChannelListWithChannelListTheme:(SBUChannelListTheme * _Nonnull)channelListTheme channelCellTheme:(SBUChannelCellTheme * _Nonnull)channelCellTheme;
+ (void)setChannelWithChannelTheme:(SBUChannelTheme * _Nonnull)channelTheme messageCellTheme:(SBUMessageCellTheme * _Nonnull)messageCellTheme messageInputTheme:(SBUMessageInputTheme * _Nonnull)messageInputTheme componentTheme:(SBUComponentTheme * _Nonnull)componentTheme;
+ (void)setUserListWithUserListTheme:(SBUUserListTheme * _Nonnull)userListTheme userCellTheme:(SBUUserCellTheme * _Nonnull)userCellTheme;
+ (void)setChannelSettingsWithChannelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUTheme * _Nonnull dark;)
+ (SBUTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUTheme * _Nonnull light;)
+ (SBUTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelListTheme * _Nonnull channelListTheme;)
+ (SBUChannelListTheme * _Nonnull)channelListTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelListTheme:(SBUChannelListTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelCellTheme * _Nonnull channelCellTheme;)
+ (SBUChannelCellTheme * _Nonnull)channelCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelCellTheme:(SBUChannelCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelTheme * _Nonnull channelTheme;)
+ (SBUChannelTheme * _Nonnull)channelTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelTheme:(SBUChannelTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUMessageInputTheme * _Nonnull messageInputTheme;)
+ (SBUMessageInputTheme * _Nonnull)messageInputTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageInputTheme:(SBUMessageInputTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUMessageCellTheme * _Nonnull messageCellTheme;)
+ (SBUMessageCellTheme * _Nonnull)messageCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setMessageCellTheme:(SBUMessageCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUserListTheme * _Nonnull userListTheme;)
+ (SBUUserListTheme * _Nonnull)userListTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserListTheme:(SBUUserListTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUUserCellTheme * _Nonnull userCellTheme;)
+ (SBUUserCellTheme * _Nonnull)userCellTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserCellTheme:(SBUUserCellTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUChannelSettingsTheme * _Nonnull channelSettingsTheme;)
+ (SBUChannelSettingsTheme * _Nonnull)channelSettingsTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setChannelSettingsTheme:(SBUChannelSettingsTheme * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SBUComponentTheme * _Nonnull componentTheme;)
+ (SBUComponentTheme * _Nonnull)componentTheme SWIFT_WARN_UNUSED_RESULT;
+ (void)setComponentTheme:(SBUComponentTheme * _Nonnull)newValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit7SBUUser")
@interface SBUUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
@property (nonatomic, readonly, copy) NSString * _Nullable nickname;
@property (nonatomic, readonly, copy) NSString * _Nullable profileUrl;
/// This is an operator state property.
/// since:
/// 1.2.0
@property (nonatomic, readonly) BOOL isOperator;
/// This is a muted state property.
/// since:
/// 1.2.0
@property (nonatomic, readonly) BOOL isMuted;
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId nickname:(NSString * _Nullable)nickname profileUrl:(NSString * _Nullable)profileUrl OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUser:(SBDUser * _Nonnull)user OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUser:(SBUUser * _Nonnull)user isOperator:(BOOL)isOperator isMuted:(BOOL)isMuted OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithMember:(SBDMember * _Nonnull)member OBJC_DESIGNATED_INITIALIZER;
/// This method returns the default value if there is no alias value.
/// since:
/// 1.0.1
- (NSString * _Nonnull)refinedNickname SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit11SBUUserCell")
@interface SBUUserCell : UITableViewCell
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)onClickMoreMenu;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16SBUUserCellTheme")
@interface SBUUserCellTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserCellTheme * _Nonnull light;)
+ (SBUUserCellTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserCellTheme * _Nonnull dark;)
+ (SBUUserCellTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor checkboxOnColor:(UIColor * _Nonnull)checkboxOnColor checkboxOffColor:(UIColor * _Nonnull)checkboxOffColor userNameTextColor:(UIColor * _Nonnull)userNameTextColor userNameFont:(UIFont * _Nonnull)userNameFont userPlaceholderBackgroundColor:(UIColor * _Nonnull)userPlaceholderBackgroundColor userPlaceholderTintColor:(UIColor * _Nonnull)userPlaceholderTintColor mutedStateBackgroundColor:(UIColor * _Nonnull)mutedStateBackgroundColor mutedStateIconColor:(UIColor * _Nonnull)mutedStateIconColor subInfoTextColor:(UIColor * _Nonnull)subInfoTextColor subInfoFont:(UIFont * _Nonnull)subInfoFont moreButtonColor:(UIColor * _Nonnull)moreButtonColor moreButtonDisabledColor:(UIColor * _Nonnull)moreButtonDisabledColor separateColor:(UIColor * _Nonnull)separateColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull checkboxOnColor;
@property (nonatomic, strong) UIColor * _Nonnull checkboxOffColor;
@property (nonatomic, strong) UIColor * _Nonnull userNameTextColor;
@property (nonatomic, strong) UIFont * _Nonnull userNameFont;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull userPlaceholderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull mutedStateBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull mutedStateIconColor;
@property (nonatomic, strong) UIColor * _Nonnull subInfoTextColor;
@property (nonatomic, strong) UIFont * _Nonnull subInfoFont;
@property (nonatomic, strong) UIColor * _Nonnull moreButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull moreButtonDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull separateColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendBirdUIKit16SBUUserListTheme")
@interface SBUUserListTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserListTheme * _Nonnull light;)
+ (SBUUserListTheme * _Nonnull)light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SBUUserListTheme * _Nonnull dark;)
+ (SBUUserListTheme * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusBarStyle:(UIStatusBarStyle)statusBarStyle navigationBarTintColor:(UIColor * _Nonnull)navigationBarTintColor navigationShadowColor:(UIColor * _Nonnull)navigationShadowColor leftBarButtonTintColor:(UIColor * _Nonnull)leftBarButtonTintColor rightBarButtonTintColor:(UIColor * _Nonnull)rightBarButtonTintColor rightBarButtonSelectedTintColor:(UIColor * _Nonnull)rightBarButtonSelectedTintColor backgroundColor:(UIColor * _Nonnull)backgroundColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull navigationShadowColor;
@property (nonatomic, strong) UIColor * _Nonnull leftBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonTintColor;
@property (nonatomic, strong) UIColor * _Nonnull rightBarButtonSelectedTintColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendBirdUIKit18SBUUserMessageCell")
@interface SBUUserMessageCell : SBUContentBaseMessageCell
@property (nonatomic, strong) UIView * _Nonnull messageTextView;
@property (nonatomic, readonly, strong) SBDUserMessage * _Nullable userMessage;
- (void)setupViews;
- (void)setupAutolayout;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDUserMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView receiptState:(enum SBUMessageReceiptState)receiptState groupPosition:(enum MessageGroupPosition)groupPosition withTextView:(BOOL)withTextView;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface UIImage (SWIFT_EXTENSION(SendBirdUIKit))
- (UIImage * _Nonnull)sbu_withTintColor:(UIColor * _Nullable)tintColor SWIFT_WARN_UNUSED_RESULT;
@end










@interface UINavigationController (SWIFT_EXTENSION(SendBirdUIKit))
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
@end




@interface UIView (SWIFT_EXTENSION(SendBirdUIKit))
+ (UINib * _Nonnull)sbu_loadNib SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nonnull)sbu_loadViewFromNib SWIFT_WARN_UNUSED_RESULT;
@end





/// This is an enumeration used to display <code>UserCell</code> by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, UserListType, open) {
  UserListTypeNone = 0,
  UserListTypeCreateChannel = 1,
  UserListTypeChannelMembers = 2,
  UserListTypeInviteUser = 3,
  UserListTypeReaction = 4,
  UserListTypeOperators = 5,
  UserListTypeMutedMembers = 6,
  UserListTypeBannedMembers = 7,
};


SWIFT_CLASS("_TtC13SendBirdUIKit12UserNameView")
@interface UserNameView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
